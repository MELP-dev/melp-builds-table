{"version":3,"file":"table.js","sources":["../../lib/src/utils/Debounce/Debounce.ts","../../lib/src/utils/MetaContext/MetaContext.ts","../../lib/src/utils/Filter/Filter.ts","../../lib/src/filters/Select/Select.styles.ts","../../lib/src/filters/Select/Select.tsx","../../lib/src/filters/Text/Text.styles.ts","../../lib/src/types/Filter.ts","../../lib/src/filters/Text/Text.tsx","../../lib/src/filters/SearchSelect/SearchSelect.styles.ts","../../lib/src/filters/SearchSelect/SearchSelect.tsx","../../lib/src/filters/NumberRange/NumberRange.styles.ts","../../lib/src/filters/NumberRange/NumberRange.tsx","../../lib/src/formats/Numbers/Numbers.ts","../../lib/src/types/Table.ts","../../lib/src/formats/Currency/Currency.ts","../../lib/src/formats/Date/Date.ts","../../lib/src/formats/Map/Map.ts","../../lib/src/formats/Formats.ts","../../lib/src/filters/Filters.ts","../../lib/src/components/MpTableFilter/MpTableFilter.tsx","../../lib/node_modules/clsx/dist/clsx.m.js","../../lib/src/utils/Actions/Actions.ts","../../lib/src/renderers/actions/Button/Button.styles.ts","../../lib/src/renderers/actions/Button/Button.tsx","../../lib/src/renderers/actions/Toggle/Toggle.tsx","../../lib/src/renderers/actions/Switch/Switch.tsx","../../lib/src/utils/Renderer/Renderer.ts","../../lib/src/renderers/StatusPill/StatusPill.tsx","../../lib/src/renderers/Input/Input.styles.ts","../../lib/src/renderers/Renderers.ts","../../lib/src/renderers/Input/Input.tsx","../../lib/src/utils/ColumnAdapter/ColumnAdapter.ts","../../lib/src/utils/DataFormatter/DataFormatter.ts","../../lib/src/components/MpTableHeadCell/MpTableHeadCell.styles.ts","../../lib/src/components/MpTableHeadCellOptions/MpTableHeadCellOptions.tsx","../../lib/src/components/MpTableHeadCell/MpTableHeadCell.tsx","../../lib/src/components/MpTable/MpTable.styles.ts","../../lib/src/components/MpTableEmptyBody/MpTableEmptyBody.tsx","../../lib/src/components/MpTableHeadSelectCell/MpTableHeadSelectCell.styles.ts","../../lib/src/components/MpTableHeadSelectCell/MpTableHeadSelectCell.tsx","../../lib/src/overridables/MpTableHeadFilter/MpTableHeadFilter.tsx","../../lib/src/overridables/MpTablePaginator/MpTablePaginator.styles.ts","../../lib/src/overridables/MpTablePaginator/MpTablePaginator.tsx","../../lib/src/icons/Filter.tsx","../../lib/src/icons/FilterArrowDown.tsx","../../lib/src/icons/FilterArrowUp.tsx","../../lib/src/icons/FilterOutline.tsx","../../lib/src/overridables/MpTableHeadIndicator/MpTableHeadIndicator.styles.ts","../../lib/src/overridables/MpTableHeadIndicator/MpTableHeadIndicator.tsx","../../lib/src/overridables/MpTableGlobalActions/MpTableGlobalActions.styles.ts","../../lib/src/components/MpTableBulkActions/MpTableBulkActions.styles.ts","../../lib/src/components/MpTableBulkActions/MpTableBulkActions.tsx","../../lib/src/components/MpTableGlobalFilter/MpTableGlobalFilter.tsx","../../lib/src/icons/BreadcrumbFilterDown.tsx","../../lib/src/icons/BreadcrumbSeparator.tsx","../../lib/src/utils/Breadcrumbs/Breadcrumbs.ts","../../lib/src/components/MpTableBreadcrumb/BreadcrumbList.tsx","../../lib/src/components/MpTableBreadcrumb/MpTableBreadcrumb.styles.ts","../../lib/src/components/MpTableBreadcrumb/MpTableBreadcrumb.tsx","../../lib/src/overridables/MpTableGlobalActions/MpTableGlobalActions.tsx","../../lib/src/overridables/Overridables.ts","../../lib/src/components/MpTableStickyTotalsFooter/MpTableStickyTotalsFooter.styles.ts","../../lib/src/components/MpTableStickyTotalsFooter/MpTableStickyTotalsFooter.tsx","../../lib/src/components/MpTableTotals/MpTableTotals.styles.ts","../../lib/src/components/MpTableTotals/MpTableTotals.tsx","../../lib/src/components/MpTableSelectCell/MpTableSelectCell.styles.ts","../../lib/src/components/MpTableSelectCell/MpTableSelectCell.tsx","../../lib/src/components/MpTableRow/MpTableRow.styles.ts","../../lib/src/components/MpTableRow/MpTableRow.tsx","../../lib/src/utils/Highlights/Highlights.ts","../../lib/src/utils/Storage/Storage.ts","../../lib/src/components/MpTable/MpTable.tsx","../../lib/src/utils/Overridables/Overridables.ts","../../lib/src/utils/DataArguments/DataArguments.ts","../../lib/src/utils/Datepicker/Datepicker.ts","../../lib/src/components/MpDatepicker/MpDatepicker.styles.ts","../../lib/src/icons/Check.tsx","../../lib/src/components/MpDatepicker/MpDatepickerItem.tsx","../../lib/src/components/MpDatepicker/MpDatepickerHeader.tsx","../../lib/src/icons/DatepickerArrowDown.tsx","../../lib/src/icons/DatepickerArrowUp.tsx","../../lib/src/components/MpDatepicker/MpDatepickerArrow.tsx","../../lib/src/components/MpDatepicker/MpDatepicker.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\n\nexport function useDebounce(ms: number = 500) {\n  const handle = useRef<number | null>(null);\n\n  const debounce = useCallback(\n    (cb: Function, ...args: any[]) => {\n      if (handle.current) {\n        clearTimeout(handle.current);\n      }\n      handle.current = setTimeout(cb, ms, ...args);\n    },\n    [ms]\n  );\n\n  return debounce;\n}\n\nexport function useUnmounted() {\n  const ref = useRef<boolean>(false);\n  useEffect(\n    () => () => {\n      ref.current = true;\n    },\n    []\n  );\n  return ref;\n}\n","import { createContext } from \"react\";\nimport { Meta } from \"../../types/Meta\";\n\nexport const MetaContext = createContext({} as Meta);\n","import {\n  MpGlobalFilter,\n  MpGlobalFilters,\n  MpUseGlobalFilters,\n} from \"./../../types/Filter\";\nimport {\n  Dispatch,\n  MutableRefObject,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Row } from \"react-table\";\nimport { MpFilter, MpFilterItem } from \"../../types/Filter\";\nimport {\n  MpAsyncGetMethod,\n  MpColumn,\n  RtMpColumnInstance,\n} from \"../../types/Table\";\nimport { useDebounce, useUnmounted } from \"../Debounce/Debounce\";\nimport { MetaContext } from \"../MetaContext/MetaContext\";\n\nexport function useFilterOptions({ filter }: MpColumn): MpFilter | undefined {\n  return useMemo(\n    () => (typeof filter === \"string\" ? { type: filter } : filter),\n    [filter]\n  );\n}\n\nconst getAvailableValues = (rows: Row<{}>[], key: string): string[] =>\n  rows\n    .map((row) => row.values[key])\n    .filter((val, i, arr) => arr.indexOf(val) === i);\n\nconst executeMethod = (\n  method: MpAsyncGetMethod,\n  search: string,\n  resultSetter: Dispatch<SetStateAction<MpFilterItem[]>>,\n  loadingSetter: Dispatch<SetStateAction<boolean>>,\n  latestRequest: MutableRefObject<number | null>,\n  unmounted: MutableRefObject<boolean>,\n  filterItems?: MpFilterItem[]\n) => {\n  const request = Date.now();\n  latestRequest.current = request;\n  loadingSetter(true);\n  method({ search }).then((result: any) => {\n    if (latestRequest.current === request && !unmounted.current) {\n      loadingSetter(false);\n      if (Array.isArray(result)) {\n        resultSetter([...(filterItems ?? []), ...(result ?? [])]);\n      }\n    }\n  });\n};\n\nexport function useFilterItems(\n  column: RtMpColumnInstance,\n  filter?: MpFilter\n): {\n  loading?: boolean;\n  items?: MpFilterItem[];\n  getItems(search?: string): void;\n} {\n  const { asyncGetMethods, localFiltering } = useContext(MetaContext);\n  const { preFilteredRows, id } = column;\n  const unmounted = useUnmounted();\n  const [items, setItems] = useState<MpFilterItem[]>();\n  const [loading, setLoading] = useState<boolean>(\n    !localFiltering &&\n      filter?.asyncGet != null &&\n      typeof asyncGetMethods?.[filter.asyncGet] === \"function\"\n  );\n  const latestRequest = useRef<number | null>(null);\n  const debounce = useDebounce(500);\n\n  const getItems = useCallback(\n    (searchText?: string) => {\n      if (localFiltering && (filter?.items?.length ?? 0) < 1) {\n        const localItems = getAvailableValues(preFilteredRows, id)\n          .filter((item) =>\n            searchText != null && searchText !== \"\"\n              ? (item + \"\").toLowerCase().indexOf(searchText.toLowerCase()) !==\n                -1\n              : true\n          )\n          .map(\n            (text: string): MpFilterItem => ({\n              value: text,\n              label: text,\n            })\n          );\n        setItems(localItems);\n      } else if (localFiltering && (filter?.items?.length ?? 0) > 0) {\n        setItems(filter?.items);\n      } else if (\n        filter?.asyncGet != null &&\n        typeof asyncGetMethods?.[filter.asyncGet] === \"function\"\n      ) {\n        debounce(\n          executeMethod,\n          asyncGetMethods?.[filter.asyncGet],\n          searchText,\n          setItems,\n          setLoading,\n          latestRequest,\n          unmounted,\n          filter.items\n        );\n      }\n    },\n    [\n      asyncGetMethods,\n      filter?.asyncGet,\n      filter?.items,\n      id,\n      setLoading,\n      localFiltering,\n      preFilteredRows,\n      debounce,\n      unmounted,\n      latestRequest,\n    ]\n  );\n\n  return useMemo(\n    () => ({\n      items,\n      getItems,\n      loading,\n    }),\n    [items, getItems, loading]\n  );\n}\n\nexport const useGlobalFilters = (\n  initialValue: MpGlobalFilters | undefined\n): MpUseGlobalFilters => {\n  const [globalFilters, setGlobalFilters] = useState<\n    MpGlobalFilters | undefined\n  >(initialValue);\n\n  const handleSetGlobalFilter = useCallback((filter: MpGlobalFilter) => {\n    setGlobalFilters((prevState) => {\n      if (!!prevState)\n        return {\n          ...prevState,\n          [filter.key]: filter.value,\n        };\n\n      return { [filter.key]: filter.value };\n    });\n  }, []);\n\n  return useMemo(\n    () => [\n      globalFilters as MpGlobalFilters,\n      { setGlobalFilters: handleSetGlobalFilter },\n    ],\n    [globalFilters, handleSetGlobalFilter]\n  );\n};\n\nexport const useRemoteFilters = (mpColumns: MpColumn[]): MpColumn[] => {\n  return useMemo(() => {\n    return mpColumns.filter((column) => {\n      return typeof column.filter !== \"string\" && column.filter?.remote;\n    });\n  }, [mpColumns]);\n};\n\nexport function useClearFilters() {\n  const [emptyInstance, setEmptyInstance] = useState<string[] | undefined>(\n    undefined\n  );\n  const clearFilters = useCallback(\n    (filters?: string[]) => setEmptyInstance(filters ?? []),\n    []\n  );\n\n  return { clearFiltersEvent: emptyInstance, clearFilters };\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import {\n  Box,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport { TabUnselected } from \"@mui/icons-material\";\nimport React, { MouseEvent, useCallback, useContext, useEffect } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterItems, useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./Select.styles\";\n\nconst empty: any[] = [];\n\nexport default function Select({\n  column,\n  value = empty,\n  setValue,\n  doFiltering,\n}: MpFilterProps) {\n  const { mpColumn } = column;\n  const { translations } = useContext(MetaContext);\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { loading, items, getItems } = useFilterItems(column, filter);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.checked) {\n        if (!value?.includes(event.target.name)) {\n          setValue([...(value ?? []), event.target.name]);\n        }\n      } else {\n        setValue(value?.filter((val: any) => val !== event.target.name));\n      }\n    },\n    [setValue, value]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  useEffect(() => {\n    getItems();\n  }, [getItems]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      {!loading && (items?.length ?? 0) > 0 && (\n        <Box paddingX={2} paddingY={1} maxHeight={300} overflow=\"auto\">\n          <FormControl component=\"fieldset\" color=\"primary\">\n            <FormGroup>\n              {items?.map((item, i) => (\n                <FormControlLabel\n                  key={i}\n                  onChange={handleChange}\n                  name={item.value + \"\"}\n                  control={\n                    <Checkbox\n                      color=\"primary\"\n                      checked={value?.includes(item.value + \"\") ?? false}\n                    />\n                  }\n                  label={item.label}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Box>\n      )}\n      {loading && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n      {!loading && (items?.length ?? 0) < 1 && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <TabUnselected fontSize=\"large\" color=\"disabled\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import { Dispatch, SetStateAction } from \"react\";\nimport { Row } from \"react-table\";\nimport { RtMpColumnInstance } from \"./Table\";\n\nexport enum MpFilterType {\n  text = \"text\",\n  select = \"select\",\n  searchSelect = \"searchSelect\",\n  numberRange = \"numberRange\",\n}\n\nexport type FilterFunction = (\n  rows: Row[],\n  columnIds: string[],\n  filterValue: any\n) => Row[];\n\nexport interface MpFilterItem {\n  // Value of the filter item\n  value: string | number | boolean;\n  // User-readable label for the item\n  label: string;\n}\n\nexport interface MpFilter {\n  // Get/Set filter value using the key\n  key?: string;\n  // Type of the filter\n  type: MpFilterType;\n  // (Optional) Display title of the filter\n  label?: string;\n  // Placeholder\n  placeholder?: string;\n  // (Optional) Display unit in an input adornment\n  unitLabel?: string;\n  // (Optional) Override the items available in the filter\n  items?: MpFilterItem[];\n  // (Optional) Async Get Method key\n  asyncGet?: string;\n  // Format (i.e date, number, etc.)\n  format?: string;\n  // Locale override\n  locale?: string;\n  // Separate from localFiltering\n  remote?: boolean;\n}\n\nexport interface MpFilterProps {\n  column: RtMpColumnInstance;\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n  doFiltering(immediateValue?: any): void;\n}\n\nexport interface MpGlobalFilter {\n  key: string;\n  value: any;\n}\n\nexport interface MpGlobalFilters {\n  [key: string]: any;\n}\n\nexport type MpUseGlobalFilters = [\n  MpGlobalFilters,\n  { setGlobalFilters: (filter: MpGlobalFilter) => void }\n];\n\nexport interface MpBreadcrumbFilterData {\n  id?: string;\n  name?: string;\n  [key: string]: MpBreadcrumbFilterData[] | string | undefined;\n}\n","import { Box, Divider, InputBase, Link, Typography } from \"@mui/material\";\nimport React, { MouseEvent, useCallback, useContext } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./Text.styles\";\n\nexport default function Text({\n  value,\n  setValue,\n  doFiltering,\n  column: { mpColumn },\n}: MpFilterProps) {\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { translations } = useContext(MetaContext);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      setValue(evVal);\n    },\n    [setValue]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value ?? \"\"}\n          onChange={handleChange}\n          placeholder={translations?.search ?? \"Search\"}\n          autoFocus={true}\n          className={classes.naked}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n  searchIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n","import {\n  Box,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputBase,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport { Search, TabUnselected } from \"@mui/icons-material\";\nimport React, {\n  MouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterItems, useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./SearchSelect.styles\";\n\nconst empty: any[] = [];\n\nexport default function SearchSelect({\n  column,\n  value = empty,\n  setValue,\n  doFiltering,\n}: MpFilterProps) {\n  const { mpColumn } = column;\n  const { translations } = useContext(MetaContext);\n  const [searchText, setSearchText] = useState<string>();\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { loading, items, getItems } = useFilterItems(column, filter);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.checked) {\n        if (!value?.includes(event.target.name)) {\n          setValue([...(value ?? []), event.target.name]);\n        }\n      } else {\n        setValue(value?.filter((val: any) => val !== event.target.name));\n      }\n    },\n    [setValue, value]\n  );\n\n  const handleSearchText = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchText(event.target.value);\n    },\n    [setSearchText]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  useEffect(() => {\n    getItems(searchText);\n  }, [getItems, searchText]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          startAdornment={\n            <Search className={classes.searchIcon} color=\"action\" />\n          }\n          value={searchText ?? \"\"}\n          onChange={handleSearchText}\n          placeholder={translations?.search ?? \"Search\"}\n          autoFocus={true}\n          className={classes.naked}\n        />\n      </Box>\n      <Divider />\n      {!loading && (items?.length ?? 0) > 0 && (\n        <Box paddingX={2} paddingY={1} maxHeight={300} overflow=\"auto\">\n          <FormControl component=\"fieldset\" color=\"primary\">\n            <FormGroup>\n              {items?.map((item, i) => (\n                <FormControlLabel\n                  key={i}\n                  onChange={handleChange}\n                  name={item.value + \"\"}\n                  control={\n                    <Checkbox\n                      color=\"primary\"\n                      checked={value?.includes(item.value + \"\") ?? false}\n                    />\n                  }\n                  label={item.label}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Box>\n      )}\n      {loading && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n      {!loading && (items?.length ?? 0) < 1 && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <TabUnselected fontSize=\"large\" color=\"disabled\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import {\n  Box,\n  Divider,\n  InputBase,\n  InputBaseComponentProps,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport React, { forwardRef, MouseEvent, useCallback, useContext } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./NumberRange.styles\";\n\nconst NumberInput = forwardRef<HTMLInputElement>(\n  ({ onChange, inputRef, ...props }: InputBaseComponentProps, ref) => {\n    const handleChange = useCallback(\n      (event: React.ChangeEvent<HTMLInputElement>) => {\n        let val = event.target.value;\n        // Allow only leading -\n        val = val.replace(/-/g, (m, i) => (i > 0 ? \"\" : m));\n        // Remove additional . or ,\n        val = val.replace(/[.,]/g, (m, i: number, s: string) =>\n          s.indexOf(s.match(/[.,]/g)?.[0] ?? \".\") !== i || i === 0 ? \"\" : m\n        );\n        // Leave only numbers and . , -\n        val = val.replace(/[^\\d.,-]/g, \"\");\n        // Write to event\n        event.target.value = val;\n        if (typeof onChange === \"function\") {\n          onChange(event);\n        }\n      },\n      [onChange]\n    );\n    return (\n      <input\n        ref={ref ?? inputRef}\n        {...props}\n        onChange={handleChange}\n        inputMode=\"decimal\"\n      />\n    );\n  }\n);\n\nexport default function NumberRange({\n  value,\n  setValue,\n  doFiltering,\n  column: { mpColumn },\n}: MpFilterProps) {\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { translations } = useContext(MetaContext);\n\n  const handleChangeMin = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      if (evVal != null && evVal !== \"\") {\n        setValue((val: any) => ({ ...(val ?? {}), min: evVal }));\n      } else {\n        setValue((val: any) =>\n          val?.max != null && val?.max !== \"\" ? { max: val?.max } : null\n        );\n      }\n    },\n    [setValue]\n  );\n\n  const handleChangeMax = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      if (evVal != null && evVal !== \"\") {\n        setValue((val: any) => ({ ...(val ?? {}), max: evVal }));\n      } else {\n        setValue((val: any) =>\n          val?.min != null && val?.min !== \"\" ? { min: val?.min } : null\n        );\n      }\n    },\n    [setValue]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value?.min ?? \"\"}\n          onChange={handleChangeMin}\n          placeholder={translations?.from ?? \"From\"}\n          autoFocus={true}\n          className={classes.naked}\n          inputComponent={NumberInput}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value?.max ?? \"\"}\n          onChange={handleChangeMax}\n          placeholder={translations?.to ?? \"To\"}\n          className={classes.naked}\n          inputComponent={NumberInput}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const toPercent: MpColumnFormatter = ({ value }) => {\n  const number: number =\n    typeof value === \"string\" ? parseInt(value, 10) : value;\n\n  return value !== undefined ? `${Math.round(number * 100)}%` : null;\n};\n","import { InputBaseProps } from \"@mui/material\";\nimport {\n  ColumnInstance,\n  DefaultFilterTypes,\n  Row,\n  UseFiltersColumnProps,\n  UseRowSelectRowProps,\n  UseSortByColumnProps,\n} from \"react-table\";\nimport {\n  MpBulkActionMethods,\n  MpActions,\n  MpRowActionMethods,\n  MpRowAction,\n} from \"./Actions\";\nimport {\n  MpBreadcrumbFilterData,\n  MpFilter,\n  MpFilterType,\n  MpGlobalFilters,\n} from \"./Filter\";\nimport { MpTableOverridablesMap } from \"./Overridables\";\n\nexport enum MpColumnFormat {\n  currency = \"currency\",\n  percent = \"percent\",\n  date = \"date\",\n  dateTime = \"dateTime\",\n  map = \"map\",\n}\n\nexport interface MpColumnFormatOptions {\n  type: MpColumnFormat;\n  // (Optional) Map values for rendering\n  valueMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n  modifier?: string;\n}\n\nexport enum MpColumnRender {\n  statusPill = \"statusPill\",\n  toggle = \"toggle\",\n  switch = \"switch\",\n  button = \"button\",\n  input = \"input\",\n}\n\nexport interface MpColumnRenderOptions {\n  type: MpColumnRender;\n  // (Optional) Map values for rendering\n  valueMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n  // (Optional) Map values for rendering\n  styleMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n}\n\nexport interface RtMpColumnInstance\n  extends ColumnInstance,\n    UseSortByColumnProps<{}>,\n    UseFiltersColumnProps<{}> {\n  mpColumn: MpColumn;\n}\n\nexport interface MpColumn {\n  // Get value from the row using the key\n  key: string;\n  // Display value in the head cell\n  label?: string;\n  // (Optional) Filter type\n  filter?: MpFilterType | MpFilter;\n  // (Optional) Override footer enabled\n  totals?: boolean;\n  // (Optional) Override enable/disable sorting\n  sort?: boolean;\n  // (Optional) Format data before passing to the table\n  format?: MpColumnFormat | MpColumnFormatOptions;\n  // (Optional) Custom cell render type\n  render?: MpColumnRender | MpColumnRenderOptions;\n  // (Optional) Specify column action. If specified, no data is shown\n  action?: MpRowAction;\n  // (Optional) Input props that will be assigned to to the TextField component if field is being used\n  inputProps?: Omit<\n    InputBaseProps,\n    \"inputComponent\" | \"inputRef\" | \"onBlur\" | \"onChange\"\n  >;\n  // (Optional) Set fixed column width\n  width?: number | string;\n  // (Optional) Set fixed column width to head column\n  fixedHeadWidth?: boolean;\n}\n\nexport interface MpTableType {\n  // Array of MpColumns\n  columns: MpColumn[];\n  // Row identifier key\n  rowIdKey: string;\n  // Unique table identifier to use with storage caching\n  storageIdentifier?: string;\n  // Cache filters in local storage\n  cacheFilters?: boolean;\n  // Cache sorting in local storage\n  cacheSorting?: boolean;\n  // Cache global filter in local storage\n  cacheGlobalFilter?: boolean;\n  // Paginate locally\n  localPagination?: boolean;\n  // Sort locally\n  localSorting?: boolean;\n  // Filter locally\n  localFiltering?: boolean;\n  // Disable pagination\n  disablePagination?: boolean;\n  // Disable sorting\n  disableSorting?: boolean;\n  // Enable global actions\n  enableGlobalActions?: boolean;\n  // Selection\n  selection?: \"single\" | \"multiple\";\n  // Footer\n  totals?: boolean;\n  // Sticky footer - HIC SUNT DRACONES !!!\n  stickyTotals?: boolean;\n  // Number of rows per page\n  pageSize?: number;\n  // Conndensed or regular spacing\n  size?: \"small\" | \"medium\";\n  // Where do display filters\n  filterVariant?: \"head\" | \"pill\";\n  // Bulk actions\n  bulkActions?: MpActions;\n  // For values formatters\n  locale?: string;\n  // Highlight rows based on the boolean value of these fields\n  highlights?: MpTableHighlights;\n  // Clear column filters from head cell\n  clearColumnFilters?: boolean;\n}\n\nexport interface MpTableHighlights {\n  inactive?: string;\n  primary?: string;\n  secondary?: string;\n}\n\nexport interface MpSortRule {\n  // Sort using this key\n  key: string;\n  // Ascending if falsy, descending if true\n  desc?: boolean;\n}\n\nexport interface MpTableDataArguments {\n  // Number of items to take\n  limit?: number;\n  // Start from this item (cursor / item index /etc.)\n  cursor?: number;\n  // Fetch only the columns that are visible\n  columns: string[];\n  // Sorting rules (can be multiple)\n  sort?: MpSortRule[];\n  // Filters object\n  filters?: Record<string, any>;\n  // Global filter value\n  globalFilters?: MpGlobalFilters;\n}\n\nexport type OnGetData = (args: MpTableDataArguments) => void;\n\nexport interface MpTableProps<ItemType = any>\n  extends MpTableType,\n    MpTableInputProps<ItemType> {}\n\ninterface MpAsyncGetMethodArguments {\n  search?: string;\n}\n\nexport type MpAsyncGetMethod = (\n  options?: MpAsyncGetMethodArguments\n) => Promise<any>;\n\nexport interface MpTableInputProps<ItemType = any> {\n  data?: ItemType[];\n  onGetData: OnGetData;\n  totalsData?: Partial<Record<keyof ItemType, string>>;\n  loading?: boolean;\n  dataCount?: number;\n  classes?: MpTableClasses;\n  translations?: MpTableTranslations;\n  overridables?: Partial<MpTableOverridablesMap>;\n  bulkMethods?: MpBulkActionMethods;\n  rowMethods?: MpRowActionMethods;\n  asyncGetMethods?: Record<string, MpAsyncGetMethod>;\n  onRowClick?: (row?: Row & UseRowSelectRowProps<{}>) => void;\n  breadcrumbFilterData?: MpBreadcrumbFilterData;\n  onEdit?: (data: ItemType[]) => void;\n  onRowsSelected?: (selectedRows: Array<Row<{}>>) => void;\n  emptyChildren?: React.ReactNode;\n  loadingComponent?: React.ReactNode;\n  clearFiltersEvent?: string[];\n  resetSelectedRows?: boolean;\n}\n\nexport interface MpTableClasses {\n  tableWrapper?: string;\n  table?: string;\n  headSelectCellCheckbox?: string;\n  headSelectCell?: string;\n  selectCell?: string;\n  selectCellCheckbox?: string;\n  totalsSelectCell?: string;\n  highlightedInactive?: string;\n  highlightedPrimary?: string;\n  highlightedSecondary?: string;\n  row?: string;\n  rowSelected?: string;\n  hoveredCellWithFilters?: string;\n}\n\nexport interface MpTableTranslations {\n  of?: string;\n  total?: string;\n  previousPage?: string;\n  nextPage?: string;\n  selected?: string;\n  actions?: string;\n  from?: string;\n  to?: string;\n  all?: string;\n  clear?: string;\n  search?: string;\n  allTime?: string;\n  breadcrumbs?: { [key: string]: string | undefined };\n}\n\nexport type MpFilterTypes = DefaultFilterTypes;\n\nexport type MpColumnFormatter = (params: {\n  value: any;\n  locale?: string;\n  options?: MpColumnFormatOptions;\n}) => string | number | null;\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const toCurrency: MpColumnFormatter = ({ value, locale, options }) => {\n  return (\n    value?.toLocaleString(\n      locale,\n      !!options?.modifier\n        ? { style: \"currency\", currency: options?.modifier }\n        : undefined\n    ) ?? null\n  );\n};\n","import moment from \"moment\";\nimport \"moment/min/locales\";\nimport { MpColumnFormatter } from \"../../types/Table\";\n\nexport const formatDate: MpColumnFormatter = ({\n  value,\n  locale = \"en\",\n  options,\n}) => {\n  moment.locale(locale);\n\n  const d = new Date(value);\n  const m = moment(d);\n\n  return m.format(\"L\" || options?.modifier);\n};\n\nexport const formatDatetime: MpColumnFormatter = ({\n  value,\n  locale = \"en\",\n  options,\n}) => {\n  moment.locale(locale);\n\n  const d = new Date(value);\n  const m = moment(d);\n\n  return `${formatDate({ value, locale, options })} ${m.format(\n    \"LT\" || options?.modifier\n  )}`;\n};\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const mapFormatter: MpColumnFormatter = ({ value, options }) => {\n  return options?.valueMap?.[value] ?? value;\n};\n","import { toPercent } from \"./Numbers/Numbers\";\nimport { toCurrency } from \"./Currency/Currency\";\nimport { formatDate, formatDatetime } from \"./Date/Date\";\nimport { MpColumnFormat, MpColumnFormatter } from \"./../types/Table\";\nimport { mapFormatter } from \"./Map/Map\";\n\nexport function rawValueKey(key: string) {\n  return `__raw_${key}`;\n}\n\nexport function getRawValue(item: any, key: string) {\n  return item[rawValueKey(key)] ?? item[key];\n}\n\nexport const formatMap: Record<MpColumnFormat, MpColumnFormatter> = {\n  [MpColumnFormat.currency]: toCurrency,\n  [MpColumnFormat.percent]: toPercent,\n  [MpColumnFormat.date]: formatDate,\n  [MpColumnFormat.dateTime]: formatDatetime,\n  [MpColumnFormat.map]: mapFormatter,\n};\n","import { ComponentType } from \"react\";\nimport { MpFilterTypes } from \"../types/Table\";\nimport Select from \"./Select/Select\";\nimport Text from \"./Text/Text\";\nimport { FilterFunction, MpFilterProps, MpFilterType } from \"../types/Filter\";\nimport SearchSelect from \"./SearchSelect/SearchSelect\";\nimport NumberRange from \"./NumberRange/NumberRange\";\nimport { getRawValue } from \"../formats/Formats\";\n\nconst matchArray: FilterFunction = (rows, columnIds, filterValue) => {\n  if (!Array.isArray(filterValue) || filterValue.length < 1) {\n    return rows;\n  } else {\n    return rows.filter(\n      (row) =>\n        !!columnIds.find((id) =>\n          filterValue.includes(getRawValue(row.original, id))\n        )\n    );\n  }\n};\n\nconst matchRange: FilterFunction = (rows, columnIds, filterValue) => {\n  if (filterValue == null || typeof filterValue !== \"object\") {\n    return rows;\n  }\n  return rows.filter(\n    (row) =>\n      !!columnIds.find((id) => {\n        if (\n          filterValue?.min != null &&\n          filterValue?.min !== \"\" &&\n          +getRawValue(row.original, id) < +filterValue?.min\n        ) {\n          return false;\n        } else if (\n          filterValue?.max != null &&\n          filterValue?.max !== \"\" &&\n          +getRawValue(row.original, id) > +filterValue?.max\n        ) {\n          return false;\n        }\n        return true;\n      })\n  );\n};\n\nexport const filterMap: Record<MpFilterType, ComponentType<MpFilterProps>> = {\n  [MpFilterType.select]: Select,\n  [MpFilterType.searchSelect]: SearchSelect,\n  [MpFilterType.text]: Text,\n  [MpFilterType.numberRange]: NumberRange,\n};\n\n// export type DefaultFilterTypes =\n//     | 'text'\n//     | 'exactText'\n//     | 'exactTextCase'\n//     | 'includes'\n//     | 'includesAll'\n//     | 'exact'\n//     | 'equals'\n//     | 'between';\n\nexport const filterTypeMap: Record<\n  MpFilterType,\n  MpFilterTypes | FilterFunction\n> = {\n  [MpFilterType.select]: matchArray,\n  [MpFilterType.searchSelect]: matchArray,\n  [MpFilterType.text]: \"text\",\n  [MpFilterType.numberRange]: matchRange,\n};\n","import { Box } from \"@mui/material\";\nimport React, { Dispatch, SetStateAction, useMemo } from \"react\";\nimport { filterMap } from \"../../filters/Filters\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { RtMpColumnInstance } from \"../../types/Table\";\n\ninterface Props {\n  column: RtMpColumnInstance;\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n  overridables: MpTableOverridablesMap;\n  doFiltering(immediateValue?: any): void;\n}\n\nexport default function MpTableFilter({\n  column,\n  value,\n  setValue,\n  overridables,\n  doFiltering,\n}: Props) {\n  const filterType = useMemo(\n    () =>\n      typeof column?.mpColumn?.filter === \"string\"\n        ? column?.mpColumn?.filter\n        : column?.mpColumn?.filter?.type,\n    [column]\n  );\n  const FilterComponent = useMemo(\n    () =>\n      filterType\n        ? overridables?.filters?.[filterType as string] ??\n          filterMap[filterType as string]\n        : null,\n    [filterType, overridables]\n  );\n  return FilterComponent ? (\n    <Box>\n      <FilterComponent\n        column={column}\n        value={value}\n        setValue={setValue}\n        doFiltering={doFiltering}\n      />\n    </Box>\n  ) : null;\n}\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import { RtMpColumnInstance } from \"./../../types/Table\";\nimport {\n  MpBulkActionClickParams,\n  MpBulkActionParameters,\n  MpRowActionHandlerParams,\n  MpRowAction,\n  MpRowActionParameters,\n} from \"./../../types/Actions\";\n\nexport const getColumnAction = (column: RtMpColumnInstance) => {\n  const action = column?.mpColumn?.action;\n  if (!action) throw new Error(\"Missing action property from column.\");\n\n  return action as MpRowAction;\n};\n\nexport const handleRowAction = (params: MpRowActionHandlerParams) => {\n  const { row, rowId, slug, value, methods } = params;\n  if (!methods)\n    throw new Error(\n      `No row methods provided. Please provide them in order to use them.`\n    );\n  const method = methods[slug];\n  const methodsParams: MpRowActionParameters = {\n    value: value as any,\n    row,\n    rowId,\n  };\n  if (method) method(methodsParams);\n  else\n    throw new Error(\n      `A method for action '${slug}' does not exist. Either add it or remove this action.`\n    );\n};\n\nexport const handleBulkAction = (params: MpBulkActionClickParams) => {\n  const { methods, selectedRowIds, selectedRows, slug } = params;\n  const method = methods[slug];\n  const methodsParams: MpBulkActionParameters = {\n    selectedRows,\n    selectedIds: selectedRowIds,\n  };\n  if (method) method(methodsParams);\n  else\n    throw new Error(\n      `A method for action '${slug}' does not exist. Either add it or remove this action.`\n    );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  small: {\n    maxHeight: 28,\n  },\n}));\n","import React, { useCallback, useContext, useMemo } from \"react\";\nimport {\n  Button as MUIButton,\n  ButtonProps,\n  Icon,\n  IconButton,\n  IconButtonProps,\n} from \"@mui/material\";\nimport { CellProps } from \"react-table\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\nimport { MpRowActionMethods } from \"../../../types/Actions\";\nimport useStyles from \"./Button.styles\";\n\nexport function Button(props: CellProps<{}>) {\n  const classes = useStyles();\n  const { column, row } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n  const { color, icon, label, variant } = action;\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      event.stopPropagation();\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        row: row,\n        rowId: row.id,\n      });\n    },\n    [row, action, rowMethods]\n  );\n\n  if (icon) {\n    return (\n      <IconButton\n        color={color as IconButtonProps[\"color\"]}\n        onClick={handleClick}\n        size=\"large\"\n      >\n        <Icon>icon</Icon>\n      </IconButton>\n    );\n  }\n\n  return (\n    <MUIButton\n      size={size}\n      color={color as ButtonProps[\"color\"]}\n      variant={variant as ButtonProps[\"variant\"]}\n      onClick={handleClick}\n      classes={{ sizeSmall: classes.small }}\n    >\n      {label}\n    </MUIButton>\n  );\n}\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport { Icon } from \"@mui/material\";\nimport { MpRowActionItem, MpRowActionMethods } from \"../../../types/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\n\nexport function Toggle(props: CellProps<{}>) {\n  const { column, row, value } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n\n  const { items, defaultValue } = action;\n  const [toggle, setToggle] = useState<string | number | null | undefined>(\n    value ?? defaultValue\n  );\n\n  const handleChange = useCallback(\n    (event: React.MouseEvent<HTMLElement>, newToggle: string | null) => {\n      event.stopPropagation();\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        value: newToggle as string,\n        row: row,\n        rowId: row.id,\n      });\n      setToggle(newToggle);\n    },\n    [setToggle, action, row, rowMethods]\n  );\n\n  const mapToggles = useMemo(\n    () =>\n      (items ? items : []).map((item: MpRowActionItem) => {\n        const { value, icon, label, color, textColor } = item;\n        const inner = icon ? <Icon>{icon}</Icon> : label;\n        const maxHeight = size === \"small\" ? 24 : undefined;\n\n        const style =\n          toggle === value\n            ? {\n                color: textColor,\n                backgroundColor: color,\n                maxHeight,\n              }\n            : {\n                maxHeight,\n              };\n\n        return (\n          <ToggleButton\n            key={value}\n            size={size}\n            value={value}\n            aria-label=\"toggle-action\"\n            style={style}\n          >\n            {inner}\n          </ToggleButton>\n        );\n      }),\n    [size, items, toggle]\n  );\n\n  return (\n    <ToggleButtonGroup\n      value={toggle}\n      exclusive\n      onChange={handleChange}\n      aria-label=\"row-toggle\"\n    >\n      {mapToggles}\n    </ToggleButtonGroup>\n  );\n}\n","import {\n  Box,\n  Icon,\n  Switch as MUISwitch,\n  SwitchProps,\n  Typography,\n} from \"@mui/material\";\nimport React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MpRowActionMethods } from \"../../../types/Actions\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\n\nexport function Switch(props: CellProps<{}>) {\n  const { column, row, value } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n  const { iconLeft, iconRight, labelLeft, labelRight, color } = action;\n  const innerLeft = iconLeft ? <Icon>{iconLeft}</Icon> : labelLeft;\n  const innerRight = iconRight ? <Icon>{iconRight}</Icon> : labelRight;\n\n  const [checked, setChecked] = useState<boolean>(value);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.stopPropagation();\n      const value = event.target.checked;\n      setChecked(value);\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        row: row,\n        rowId: row.id,\n        value: value,\n      });\n    },\n    [rowMethods, row, action]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => e.stopPropagation(),\n    []\n  );\n\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      onClick={handlePropagation}\n    >\n      <Typography component=\"span\">{innerLeft}</Typography>\n      <MUISwitch\n        size={size}\n        onChange={handleChange}\n        color={color as SwitchProps[\"color\"]}\n        checked={checked}\n      />\n      <Typography component=\"span\">{innerRight}</Typography>\n    </Box>\n  );\n}\n","import { useMemo } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MpColumn, MpColumnRenderOptions } from \"../../types/Table\";\n\nexport function useRendererOptions({ cell }: CellProps<{}>) {\n  const column: MpColumn | undefined = (cell.column as any).mpColumn;\n  const renderOptions: MpColumnRenderOptions | undefined = useMemo(\n    () =>\n      typeof column?.render === \"string\"\n        ? { type: column.render }\n        : column?.render,\n    [column?.render]\n  );\n  const style = useMemo(\n    () => renderOptions?.styleMap?.[cell.value ?? \"\"] ?? undefined,\n    [renderOptions, cell]\n  );\n  const value = useMemo(\n    () => renderOptions?.valueMap?.[cell.value ?? \"\"] ?? cell.value,\n    [renderOptions, cell]\n  );\n\n  const columnId = useMemo(() => cell.column.id, [cell.column.id]);\n\n  const columnIndex = useMemo(() => cell.row.index, [cell.row.index]);\n\n  const inputProps = useMemo(() => column?.inputProps, [column?.inputProps]);\n\n  return {\n    column,\n    renderOptions,\n    style,\n    value,\n    columnId,\n    columnIndex,\n    inputProps,\n  };\n}\n","import { Box, Chip } from \"@mui/material\";\nimport createPalette from \"@mui/material/styles/createPalette\";\nimport React, { useContext, useMemo } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { useRendererOptions } from \"../../utils/Renderer/Renderer\";\n\nexport default function StatusPill(props: CellProps<{}>) {\n  const { style, value } = useRendererOptions(props);\n  const { size } = useContext(MetaContext);\n\n  const chipStyle = useMemo(\n    () => ({\n      backgroundColor: style != null ? style + \"\" : undefined,\n      color:\n        style != null\n          ? createPalette({ primary: { main: style + \"\" } }).getContrastText(\n              style + \"\"\n            )\n          : undefined,\n    }),\n    [style]\n  );\n  return (\n    <Box textAlign=\"center\">\n      <Chip size={size} style={chipStyle} label={value} />\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  root: {\n    padding: 0,\n    maxHeight: 29,\n    width: \"100%\",\n    fontSize: \"inherit\",\n  },\n  input: {\n    height: \"auto\",\n    maxHeight: 29,\n    padding: 0,\n    fontSize: \"inherit\",\n  },\n}));\n","import { ComponentType } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { Button, Switch, Toggle } from \"./actions/Actions\";\nimport { MpColumnRender } from \"../types/Table\";\nimport StatusPill from \"./StatusPill/StatusPill\";\nimport Input from \"./Input/Input\";\n\nexport const rendererMap: Record<\n  MpColumnRender,\n  ComponentType<CellProps<{}>>\n> = {\n  [MpColumnRender.statusPill]: StatusPill,\n  [MpColumnRender.button]: Button,\n  [MpColumnRender.toggle]: Toggle,\n  [MpColumnRender.switch]: Switch,\n  [MpColumnRender.input]: Input,\n};\n","import { InputBase } from \"@mui/material\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { useDebounce } from \"../../utils/Debounce/Debounce\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { useRendererOptions } from \"../../utils/Renderer/Renderer\";\nimport useStyles from \"./Input.styles\";\n\nexport default function Input(props: CellProps<{}>) {\n  const classes = useStyles();\n  const debounce = useDebounce();\n  const { value, inputProps, columnId, columnIndex } =\n    useRendererOptions(props);\n  const { onInputChange } = useContext(MetaContext);\n\n  const [inputValue, setInputValue] = useState<string>(value);\n\n  useEffect(() => setInputValue(value), [value]);\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => e.stopPropagation(),\n    []\n  );\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      const { value } = e.target;\n      setInputValue(value);\n      debounce(() => onInputChange?.(e, columnIndex, columnId));\n    },\n    [columnId, columnIndex, debounce, onInputChange]\n  );\n\n  return (\n    <InputBase\n      onChange={handleInputChange}\n      value={inputValue}\n      classes={{ root: classes.root, input: classes.input }}\n      onClick={handlePropagation}\n      {...inputProps}\n    />\n  );\n}\n","import { useContext } from \"react\";\nimport {\n  Column,\n  UseFiltersColumnOptions,\n  UseSortByColumnOptions,\n} from \"react-table\";\nimport { filterTypeMap } from \"../../filters/Filters\";\nimport { rendererMap } from \"../../renderers/Renderers\";\nimport { MpFilter } from \"../../types/Filter\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { MpColumn } from \"../../types/Table\";\nimport { MetaContext } from \"../MetaContext/MetaContext\";\n\nexport const getFooterValue = (key: string) => () => {\n  const { totalsData } = useContext(MetaContext);\n  return totalsData?.[key] ?? null;\n};\n\nconst noOpFilter = (rows: Array<any>) => rows;\n\nexport const convertMpToColumn = (\n  overridables?: Partial<MpTableOverridablesMap>,\n  disableSorting?: boolean\n) => <ItemType extends Object = any>(column: MpColumn) => {\n  const col: Column<ItemType> &\n    UseSortByColumnOptions<{}> &\n    UseFiltersColumnOptions<{}> & {\n      mpColumn: MpColumn;\n      Footer?: any;\n    } = {\n    Header: column.label ?? column.key,\n    accessor: column.key as any,\n    mpColumn: column,\n    disableSortBy: disableSorting || column.sort === false,\n  };\n  if (column?.filter != null && !(column?.filter as MpFilter)?.remote) {\n    const type =\n      typeof column.filter === \"string\" ? column.filter : column.filter.type;\n    col.filter =\n      overridables?.filterFunctions?.[type as string] ??\n      filterTypeMap[type as string];\n  }\n  if (column?.filter != null && (column?.filter as MpFilter)?.remote === true) {\n    col.filter = noOpFilter;\n  }\n  if (column.totals !== false) {\n    col.Footer = getFooterValue(column.key);\n  }\n  if (column.render != null) {\n    const type =\n      typeof column.render === \"string\" ? column.render : column.render.type;\n    col.Cell = overridables?.renderers?.[type] ?? rendererMap[type];\n  }\n  return col;\n};\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { MpColumnFormatOptions, MpColumn } from \"../../types/Table\";\nimport { formatMap, rawValueKey } from \"./../../formats/Formats\";\n\nexport function useDataFormatters<ItemType>(\n  data: ItemType[],\n  columns: MpColumn[],\n  locale?: string\n): [\n  ItemType[],\n  (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    index: number,\n    id: string | number\n  ) => void\n] {\n  const [dataState, setDataState] = useState<ItemType[]>([]);\n\n  const formattedData = useMemo(() => {\n    const formattableColumns: MpColumn[] = columns.filter((col) => col.format);\n    return data.map((item: any) =>\n      formattableColumns.reduce(\n        (acc, column) => {\n          const { key, format } = column;\n          acc[rawValueKey(key)] = item[rawValueKey(key)];\n          acc[key] = formatMap[\n            (format as MpColumnFormatOptions)?.type ?? format\n          ]({\n            value: item[key],\n            locale,\n            options: typeof format === \"string\" ? undefined : format,\n          });\n          return acc;\n        },\n        { ...item }\n      )\n    );\n  }, [data, columns, locale]);\n\n  useEffect(() => setDataState(formattedData), [formattedData]);\n\n  const changeData = useCallback(\n    (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n      index: number,\n      id: string | number\n    ) => {\n      const { value } = e.target;\n      setDataState((prevState) => {\n        const stateCopy: ItemType[] = [...prevState];\n        stateCopy[index][id] = value;\n        return stateCopy;\n      });\n    },\n    []\n  );\n\n  return [dataState, changeData];\n}\n","import { lighten, darken, Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    display: \"inline-flex\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    userSelect: \"none\",\n    whiteSpace: \"pre\",\n    cursor: \"pointer\",\n    position: \"relative\",\n  },\n  disabledSort: {\n    color: theme?.palette?.text?.secondary,\n    cursor: \"default\",\n  },\n  fixedWidth: {\n    minWidth: (props: any) => props.fixedColumnWidth,\n    width: (props: any) => props.fixedColumnWidth,\n    maxWidth: (props: any) => props.fixedColumnWidth,\n  },\n  hoveredCellWithFilters: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.background.default, 0.1)\n        : lighten(theme.palette.primary.light, 0.9),\n  },\n}));\n","import { Popover } from \"@mui/material\";\nimport React, { useCallback, useEffect, Dispatch, SetStateAction } from \"react\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { RtMpColumnInstance } from \"../../types/Table\";\n\ninterface Props {\n  column: RtMpColumnInstance;\n  anchorEl?: Element | null;\n  canSort?: boolean;\n  onClose(): void;\n  isSortedDesc?: boolean;\n  doSorting(): void;\n  overridables: MpTableOverridablesMap;\n  clearFiltersEvent?: string[];\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n}\n\nexport default function MpTableHeadCellOptions({\n  column,\n  anchorEl,\n  canSort,\n  onClose,\n  isSortedDesc,\n  doSorting,\n  overridables,\n  clearFiltersEvent,\n  value,\n  setValue,\n}: Props) {\n  const doFiltering = useCallback(\n    (immediateValue: any = value) => {\n      column.setFilter(immediateValue);\n      setValue(immediateValue);\n      onClose();\n    },\n    [value, column, onClose]\n  );\n\n  useEffect(() => {\n    if (\n      clearFiltersEvent != null &&\n      (!clearFiltersEvent?.length || clearFiltersEvent?.includes(column.id))\n    ) {\n      setValue(null);\n    }\n    // eslint-disable-next-line\n  }, [clearFiltersEvent]);\n\n  return (\n    <Popover\n      open={!!anchorEl}\n      anchorEl={anchorEl ?? undefined}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <overridables.headFilter\n        canSort={canSort}\n        isSortedDesc={isSortedDesc}\n        overridables={overridables}\n        doSorting={doSorting}\n        doFiltering={doFiltering}\n        value={value}\n        setValue={setValue}\n        column={column}\n      />\n    </Popover>\n  );\n}\n","import { TableCell } from \"@mui/material\";\nimport React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport useStyles from \"./MpTableHeadCell.styles\";\nimport clsx from \"clsx\";\nimport { TableCommonProps } from \"react-table\";\nimport MpTableHeadCellOptions from \"../MpTableHeadCellOptions/MpTableHeadCellOptions\";\nimport { MpTableClasses, RtMpColumnInstance } from \"../../types/Table\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\n\ninterface Props extends TableCommonProps {\n  column: RtMpColumnInstance;\n  variant?: \"simple\" | \"extended\";\n  overridables: MpTableOverridablesMap;\n  clearFiltersEvent?: string[];\n  clearColumnFilters?: boolean;\n  classes?: MpTableClasses;\n}\n\nexport default function MpTableHeadCell({\n  column,\n  variant = \"simple\",\n  overridables,\n  clearFiltersEvent,\n  clearColumnFilters,\n  classes: overrideClasses,\n}: // style,\n// className,\n// role,\nProps) {\n  const {\n    onClick: doSorting,\n    title,\n    ...sortProps\n  } = column.getSortByToggleProps() as any;\n  const { isSortedDesc } = column;\n  const { width: fixedColumnWidth } = column?.mpColumn;\n  const classes = useStyles({ fixedColumnWidth });\n  const cellRef = useRef<HTMLDivElement>(null);\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n  const [value, setValue] = useState<any | undefined>(column.filterValue);\n\n  const hasFilter = useMemo(() => !!column.mpColumn?.filter, [column]);\n  const hasWidth = useMemo(\n    () => !!column.mpColumn?.width && !!column.mpColumn?.fixedHeadWidth,\n    [column]\n  );\n  const isExtended = useMemo(\n    () => variant === \"extended\" && hasFilter,\n    [variant, hasFilter]\n  );\n\n  const [optionsAnchor, setOptionsAnchor] = useState<Element | null>(null);\n\n  const closeOptions = useCallback(\n    () => setOptionsAnchor(null),\n    [setOptionsAnchor]\n  );\n\n  const handleClick = useCallback(\n    (event?: React.MouseEvent<Element>) => {\n      if (isExtended) {\n        setOptionsAnchor(cellRef.current);\n      } else if (column.canSort) {\n        doSorting(event);\n      }\n    },\n    [doSorting, isExtended, column]\n  );\n\n  const handleClearFilters = useCallback(\n    (e: React.MouseEvent<SVGElement>) => {\n      e.stopPropagation();\n      column.setFilter(null);\n      setValue(null);\n    },\n    [column]\n  );\n\n  const handleMouseEnter = useCallback(() => setIsHovered(true), []);\n\n  const handleMouseLeave = useCallback(() => setIsHovered(false), []);\n\n  const filterSet =\n    column.filterValue != null &&\n    column.filterValue !== \"\" &&\n    (!Array.isArray(column.filterValue) || column.filterValue?.length > 0);\n\n  const highlightCell = useMemo(\n    () => filterSet && isHovered && clearColumnFilters,\n    [filterSet, isHovered, clearColumnFilters]\n  );\n\n  return (\n    <>\n      <TableCell\n        className={clsx({\n          [classes.fixedWidth]: hasWidth,\n          [overrideClasses?.hoveredCellWithFilters ??\n          classes.hoveredCellWithFilters]: highlightCell,\n        })}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...sortProps}\n      >\n        <div\n          ref={cellRef}\n          className={clsx(classes.wrapper, {\n            [classes.disabledSort]: !column.canSort && !isExtended,\n          })}\n        >\n          {column.render(\"Header\")}{\" \"}\n          <overridables.headIndicator\n            canSort={column.canSort}\n            isExtended={isExtended}\n            filterSet={filterSet}\n            isSortedDesc={isSortedDesc}\n            isHoveredCell={isHovered}\n            hasClear={clearColumnFilters}\n            clearFilters={handleClearFilters}\n          />\n        </div>\n      </TableCell>\n      {isExtended}\n      <MpTableHeadCellOptions\n        anchorEl={optionsAnchor}\n        overridables={overridables}\n        onClose={closeOptions}\n        canSort={column.canSort}\n        isSortedDesc={isSortedDesc}\n        doSorting={doSorting}\n        column={column}\n        clearFiltersEvent={clearFiltersEvent}\n        value={value}\n        setValue={setValue}\n      />\n    </>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  parent: {\n    borderRadius: \"inherit\",\n  },\n  wrapper: {\n    maxWidth: \"100%\",\n    overflowX: \"auto\",\n    borderTopLeftRadius: \"inherit\",\n    borderTopRightRadius: \"inherit\",\n  },\n  table: {\n    borderTopLeftRadius: \"inherit\",\n    borderTopRightRadius: \"inherit\",\n    overflow: \"hidden\",\n  },\n  stickyTotalsWrapper: {\n    position: \"relative\",\n    overflow: \"auto\",\n    zIndex: 1,\n  },\n  renderedCell: {\n    paddingTop: 2,\n    paddingBottom: 2,\n  },\n});\n","import { Box, TableCell, TableRow } from \"@mui/material\";\nimport { HourglassEmpty, TabUnselected } from \"@mui/icons-material\";\nimport React, { useMemo } from \"react\";\n\ninterface Props {\n  cellCount?: number;\n  loading?: boolean;\n  emptyChildren?: React.ReactNode;\n  loadingComponent?: React.ReactNode;\n}\n\nexport default function MpTableEmptyBody({\n  cellCount,\n  loading,\n  emptyChildren,\n  loadingComponent,\n}: Props) {\n  const renderLoader = useMemo(() => {\n    if (loading) {\n      return (\n        loadingComponent || <HourglassEmpty fontSize=\"large\" color=\"disabled\" />\n      );\n    }\n\n    return null;\n  }, [loading, loadingComponent]);\n\n  const renderChildren = useMemo(() => {\n    if (emptyChildren) {\n      return (\n        <>\n          {renderLoader}\n\n          {!loading && emptyChildren}\n        </>\n      );\n    }\n\n    return (\n      <Box\n        height={200}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        {renderLoader}\n\n        {!loading && <TabUnselected fontSize=\"large\" color=\"disabled\" />}\n      </Box>\n    );\n  }, [loading, renderLoader, emptyChildren]);\n\n  return (\n    <TableRow>\n      <TableCell colSpan={cellCount}>{renderChildren}</TableCell>\n    </TableRow>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  headSelectCell: {\n    maxWidth: 42,\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none\",\n    },\n  },\n  cellCheckbox: {\n    margin: -12,\n  },\n});\n","import { Box, Checkbox, TableCell } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport useStyles from \"./MpTableHeadSelectCell.styles\";\nimport { TableToggleRowsSelectedProps } from \"react-table\";\n\ninterface Props extends TableToggleRowsSelectedProps {\n  classes?: MpTableClasses;\n  selection: \"single\" | \"multiple\";\n}\n\nexport default function MpTableHeadSelectCell({\n  classes: overrideClasses,\n  selection,\n  onChange,\n  ...props\n}: Props) {\n  const classes = useStyles();\n\n  const handleCheck = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      e.stopPropagation();\n\n      onChange?.(e);\n    },\n    [onChange]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>) =>\n      e.stopPropagation(),\n    []\n  );\n\n  if (selection === \"single\") return <TableCell />;\n\n  return (\n    <TableCell\n      className={clsx(classes.headSelectCell, overrideClasses?.headSelectCell)}\n      onClick={handlePropagation}\n    >\n      <Box display=\"flex\">\n        <Checkbox\n          color=\"primary\"\n          {...props}\n          className={clsx(\n            classes.cellCheckbox,\n            overrideClasses?.headSelectCellCheckbox\n          )}\n          onChange={handleCheck}\n        />\n      </Box>\n    </TableCell>\n  );\n}\n","import { Box, Button, Divider } from \"@mui/material\";\nimport { SortByAlpha } from \"@mui/icons-material\";\nimport React, { useCallback } from \"react\";\nimport MpTableFilter from \"../../components/MpTableFilter/MpTableFilter\";\nimport { MpTableHeadFilterProps } from \"../../types/Overridables\";\n\nexport default function MpTableHeadFilter({\n  column,\n  canSort,\n  isSortedDesc,\n  doSorting,\n  doFiltering,\n  value,\n  setValue,\n  overridables,\n}: MpTableHeadFilterProps) {\n  const handleSubmit = useCallback(\n    (event: React.FormEvent) => {\n      event.preventDefault();\n      doFiltering();\n    },\n    [doFiltering]\n  );\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box minWidth={150}>\n        <MpTableFilter\n          column={column}\n          value={value}\n          setValue={setValue}\n          doFiltering={doFiltering}\n          overridables={overridables}\n        />\n        <Divider />\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          {canSort && (\n            <Box\n              paddingX={2}\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              style={{ cursor: \"pointer\" }}\n              onClick={doSorting}\n            >\n              <SortByAlpha\n                fontSize=\"small\"\n                color={isSortedDesc == null ? \"action\" : \"primary\"}\n              />\n            </Box>\n          )}\n          <Box flexGrow={1} />\n          <Button color=\"primary\" type=\"submit\">\n            Filter\n          </Button>\n        </Box>\n      </Box>\n    </form>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  wrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    position: \"relative\",\n    minHeight: 48,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n});\n","import clsx from \"clsx\";\nimport React, { useMemo } from \"react\";\nimport useStyles from \"./MpTablePaginator.styles\";\n\nimport {\n  Box,\n  Tooltip,\n  Typography,\n  IconButton,\n  CircularProgress,\n} from \"@mui/material\";\nimport { ChevronLeft, ChevronRight } from \"@mui/icons-material\";\nimport { MpTablePaginatorProps } from \"../../types/Overridables\";\n\nexport default function MpTablePaginator({\n  pageIndex,\n  previousPage,\n  itemCount,\n  nextPage,\n  pageCount,\n  pageSize,\n  loading,\n  translations,\n  selectedCount,\n}: MpTablePaginatorProps) {\n  const classes = useStyles();\n  const hasPrevious = useMemo(() => pageIndex > 0, [pageIndex]);\n  const hasNext = useMemo(\n    () => (pageCount == null ? true : pageIndex < pageCount - 1),\n    [pageIndex, pageCount]\n  );\n  const infoText = useMemo(\n    () =>\n      [\n        itemCount != null\n          ? `${itemCount} ${translations?.total ?? \"total\"}`\n          : null,\n        selectedCount != null && selectedCount > 0\n          ? `${selectedCount} ${translations?.selected ?? \"selected\"}`\n          : null,\n      ]\n        .filter((item) => item != null)\n        .join(\" • \"),\n    [itemCount, selectedCount, translations]\n  );\n\n  return (\n    <Box paddingY={1} paddingX={2} className={clsx(classes.wrapper)}>\n      <Typography color=\"textSecondary\" variant=\"body2\">\n        {infoText}\n      </Typography>\n      {loading && (\n        <Box\n          paddingX={1}\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <CircularProgress size=\"1.5em\" data-qa=\"TableProgress\" />\n        </Box>\n      )}\n      <Box className={classes.spacer} />\n      <Box paddingX={1}>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          {pageIndex * pageSize + 1} - {(pageIndex + 1) * pageSize}\n          {pageCount != null ? ` ${translations?.of ?? \"of\"} ${pageCount}` : \"\"}\n        </Typography>\n      </Box>\n      <Tooltip title={translations?.previousPage ?? \"Previous\"}>\n        <div>\n          <IconButton\n            size=\"small\"\n            onClick={previousPage}\n            disabled={!hasPrevious}\n          >\n            <ChevronLeft />\n          </IconButton>\n        </div>\n      </Tooltip>\n      <Tooltip title={translations?.nextPage ?? \"Next\"}>\n        <div>\n          <IconButton size=\"small\" onClick={nextPage} disabled={!hasNext}>\n            <ChevronRight />\n          </IconButton>\n        </div>\n      </Tooltip>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const Filter = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterArrowDown = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M11 11L16.76 3.62A1 1 0 0 0 16.59 2.22A1 1 0 0 0 16 2H2A1 1 0 0 0 1.38 2.22A1 1 0 0 0 1.21 3.62L7 11V16.87A1 1 0 0 0 7.29 17.7L9.29 19.7A1 1 0 0 0 10.7 19.7A1 1 0 0 0 11 18.87V11M13 16L18 21L23 16Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterArrowUp = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        d=\"M11 11L16.76 3.62C16.9224 3.41153 16.9957 3.14726 16.9638 2.88493C16.932 2.6226 16.7976 2.38355 16.59 2.22C16.4221 2.08505 16.2152 2.00789 16 2H1.99999C1.77443 2.00131 1.55593 2.07884 1.37999 2.22C1.17243 2.38355 1.03804 2.6226 1.00618 2.88493C0.974328 3.14726 1.0476 3.41153 1.20999 3.62L6.99999 11V16.87C6.9819 17.0213 6.99862 17.1747 7.04888 17.3186C7.09914 17.4624 7.18161 17.5929 7.28999 17.7L9.28999 19.7C9.47736 19.8863 9.73081 19.9908 9.99499 19.9908C10.2592 19.9908 10.5126 19.8863 10.7 19.7C10.8102 19.5938 10.8945 19.4638 10.9465 19.3199C10.9985 19.176 11.0168 19.0221 11 18.87V11ZM13 21L18 16L23 21H13Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterOutline = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M15,19.88C15.04,20.18 14.94,20.5 14.71,20.71C14.32,21.1 13.69,21.1 13.3,20.71L9.29,16.7C9.06,16.47 8.96,16.16 9,15.87V10.75L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L15,10.75V19.88M7.04,5L11,10.06V15.58L13,17.58V10.05L16.96,5H7.04Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst width = 18;\n\nexport default makeStyles((theme: Theme) => ({\n  iconWrapper: {\n    display: \"inline-flex\",\n    maxHeight: \"1em\",\n    justifyContent: \"center\",\n    maxWidth: width,\n    width: width,\n    minWidth: width,\n    alignItems: \"center\",\n  },\n  clearIcon: {\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    width: 19,\n    height: 19,\n    borderRadius: \"3px\",\n    position: \"absolute\",\n    left: 0,\n  },\n}));\n","import { Box } from \"@mui/material\";\nimport {\n  ArrowDropDown,\n  ArrowDropUp,\n  Clear,\n  ExpandMore,\n} from \"@mui/icons-material\";\nimport React, { useCallback } from \"react\";\nimport { Filter } from \"../../icons/Filter\";\nimport { FilterArrowDown } from \"../../icons/FilterArrowDown\";\nimport { FilterArrowUp } from \"../../icons/FilterArrowUp\";\nimport { FilterOutline } from \"../../icons/FilterOutline\";\nimport { MpTableHeadIndicatorProps } from \"../../types/Overridables\";\nimport useStyles from \"./MpTableHeadIndicator.styles\";\n\nexport default function MpTableHeadIndicator({\n  canSort,\n  isExtended,\n  filterSet,\n  isSortedDesc,\n  isHoveredCell,\n  hasClear,\n  clearFilters,\n}: MpTableHeadIndicatorProps) {\n  const classes = useStyles();\n\n  const handleClearClick = useCallback(\n    (e: React.MouseEvent<SVGElement>) => clearFilters && clearFilters(e),\n    [clearFilters]\n  );\n\n  return !!canSort || !!isExtended ? (\n    <Box className={classes.iconWrapper}>\n      {isSortedDesc === true ? (\n        isExtended && filterSet ? (\n          <FilterArrowDown fontSize=\"small\" color=\"primary\" />\n        ) : (\n          <ArrowDropDown color=\"primary\" />\n        )\n      ) : isSortedDesc === false ? (\n        isExtended && filterSet ? (\n          <FilterArrowUp fontSize=\"small\" color=\"primary\" />\n        ) : (\n          <ArrowDropUp color=\"primary\" />\n        )\n      ) : isExtended && !filterSet ? (\n        <FilterOutline fontSize=\"small\" color=\"disabled\" />\n      ) : isExtended && filterSet ? (\n        <>\n          <Filter fontSize=\"small\" color=\"primary\" />\n          {hasClear && isHoveredCell && (\n            <Clear className={classes.clearIcon} onClick={handleClearClick} />\n          )}\n        </>\n      ) : (\n        <ExpandMore fontSize=\"small\" color=\"disabled\" />\n      )}\n    </Box>\n  ) : null;\n}\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(2),\n  },\n}));\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    transition: `${theme.transitions.create([\"max-width\"], {\n      duration: theme.transitions.duration.complex,\n    })}`,\n  },\n  iconSpacer: {\n    marginRight: 10,\n  },\n  menuPaper: {\n    padding: \"10px 0\",\n    marginTop: 4,\n  },\n  menuItem: {\n    paddingTop: 14,\n    paddingBottom: 0,\n    paddingRight: 0,\n    minWidth: 150,\n  },\n  overlay: {\n    zIndex: 1,\n  },\n  itemDivider: {\n    borderBottom: \"rgba(0, 0, 0, 0.1) solid 1px\",\n    marginLeft: 20,\n    paddingRight: 20,\n    width: \"100%\",\n    paddingBottom: 14,\n  },\n  noBorder: {\n    borderBottom: 0,\n  },\n}));\n","import {\n  MenuItem,\n  Box,\n  Grow,\n  Button,\n  Popper,\n  Paper,\n  ClickAwayListener,\n  MenuList,\n} from \"@mui/material\";\nimport { Close, Menu } from \"@mui/icons-material\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { MpTableBulkActionProps } from \"../../types/Overridables\";\nimport useStyles from \"./MpTableBulkActions.styles\";\nimport clsx from \"clsx\";\nimport { MpBulkActionClickParams } from \"../../types/Actions\";\nimport { handleBulkAction } from \"../../utils/Actions/Actions\";\n\nexport default function MpTableBulkActions({\n  selectedRowIds,\n  selectedRows,\n  actions,\n  methods,\n  translations,\n}: MpTableBulkActionProps) {\n  const classes = useStyles();\n  const hasSelectedRows = useMemo(\n    () => selectedRows.length > 0,\n    [selectedRows]\n  );\n  const maxWidth = useMemo(\n    () => (hasSelectedRows ? \"100%\" : 0),\n    [hasSelectedRows]\n  );\n  const [open, setOpen] = useState<boolean>(false);\n  const anchorRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (!hasSelectedRows) {\n      setOpen(false);\n    }\n  }, [hasSelectedRows]);\n\n  const handleToggle = useCallback(() => {\n    setOpen((prevOpen) => !prevOpen);\n  }, [setOpen]);\n\n  const handleClose = <E extends { target?: any | null }>(event: E) => {\n    if (anchorRef.current?.contains(event.target as HTMLElement)) {\n      return;\n    }\n  };\n\n  const handleListKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  };\n\n  const handleClick = useCallback(\n    (slug: string) => {\n      const bulkActionParams: MpBulkActionClickParams = {\n        selectedRowIds,\n        selectedRows,\n        slug,\n        methods,\n      };\n      handleBulkAction(bulkActionParams);\n    },\n    [selectedRowIds, selectedRows, methods]\n  );\n\n  const actionsMap = actions.map((action, i) => (\n    <MenuItem\n      classes={{ root: classes.menuItem }}\n      onClick={(e) => {\n        handleClose(e);\n        handleClick(action.slug);\n      }}\n      key={action.slug}\n    >\n      <Box\n        className={clsx(classes.itemDivider, {\n          [classes.noBorder]: actions.length === i + 1,\n        })}\n      >\n        {action.label}\n      </Box>\n    </MenuItem>\n  ));\n\n  return (\n    <Box maxWidth={maxWidth} overflow=\"hidden\" className={classes.wrapper}>\n      <Box width=\"fit-content\">\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? \"bulk-actions-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {open ? (\n            <Close className={classes.iconSpacer} />\n          ) : (\n            <Menu className={classes.iconSpacer} />\n          )}\n          {translations?.total ?? \"Actions\"}\n        </Button>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n          className={classes.overlay}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"left top\" : \"left bottom\",\n              }}\n            >\n              <Paper classes={{ root: classes.menuPaper }}>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList\n                    autoFocusItem={open}\n                    id=\"bulk-actions-list-grow\"\n                    onKeyDown={handleListKeyDown}\n                    disablePadding\n                  >\n                    {actionsMap}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Box>\n    </Box>\n  );\n}\n","import { TextField } from \"@mui/material\";\nimport { Search } from \"@mui/icons-material\";\nimport React, { useCallback, useState } from \"react\";\nimport { MpTableGlobalFilterProps } from \"../../types/Overridables\";\nimport { useDebounce } from \"../../utils/Debounce/Debounce\";\n\nexport default function MpTableGlobalFilter({\n  onGlobalFilter,\n  translations,\n  globalFilters,\n}: MpTableGlobalFilterProps) {\n  const [value, setValue] = useState<string>(globalFilters?.search);\n  const debounce = useDebounce(200);\n  const handleGlobalFilter = useCallback(\n    (e: any) => {\n      setValue(e.target.value);\n      const filter = {\n        key: \"search\",\n        value: e.target.value,\n      };\n      debounce(() => onGlobalFilter(filter));\n    },\n    [onGlobalFilter, debounce]\n  );\n\n  return (\n    <TextField\n      onChange={handleGlobalFilter}\n      label={translations?.search ?? \"Search\"}\n      InputProps={{\n        endAdornment: <Search />,\n      }}\n      value={value}\n      variant=\"outlined\"\n    />\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function BreadcrumbFilterDown(props: SvgIconProps) {\n  return (\n    <SvgIcon viewBox=\"0 0 8 6\" width=\"8\" height=\"6\" {...props}>\n      <svg\n        width=\"8\"\n        height=\"6\"\n        viewBox=\"0 0 8 6\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M4.71074 5.28189C4.3194 5.67729 3.6806 5.67729 3.28926 5.28189L0.489829 2.45345C-0.135134 1.82201 0.31215 0.75 1.20057 0.75L6.79943 0.75C7.68785 0.75 8.13513 1.82201 7.51017 2.45345L4.71074 5.28189Z\"\n          fill=\"black\"\n        />\n      </svg>\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function BreadcrumbSeparator(props: SvgIconProps) {\n  return (\n    <SvgIcon width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\n      <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M10.5 16.5L15.5 11.5L10.5 6.5\"\n          stroke=\"black\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    </SvgIcon>\n  );\n}\n","import { MpBreadcrumbFilterData } from \"../../types/Filter\";\n\nexport const getNestedElementsMapReduce = (\n  data: MpBreadcrumbFilterData,\n  selection: {\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }\n): {\n  [key: string]: MpBreadcrumbFilterData[];\n} | void => {\n  if (!!data)\n    return Object.entries(data).reduce(\n      (accumulator, [key, value]) => {\n        if (Array.isArray(value)) {\n          accumulator[key] = value;\n          if (selection[key]?.id !== undefined) {\n            const filteredValue = value.filter(\n              (breadcrumb) => breadcrumb.id === selection[key]?.id\n            );\n            if (filteredValue.length > 0) {\n              return {\n                ...accumulator,\n                ...getNestedElementsMapReduce(filteredValue[0], selection),\n              };\n            }\n          }\n        }\n        return accumulator;\n      },\n      {} as {\n        [key: string]: MpBreadcrumbFilterData[];\n      }\n    );\n};\n","import { Grid, Typography, List, ListItem, Divider, Box } from \"@mui/material\";\nimport React, { useMemo } from \"react\";\nimport { MpBreadcrumbFilterData } from \"../../types/Filter\";\nimport { MpTableTranslations } from \"../../types/Table\";\n\ninterface IProps {\n  selectedKey: string;\n  items: MpBreadcrumbFilterData[];\n  onMouseEnter: (key: string, id: string, name: string) => void;\n  onClick: (selectedKey: string) => void;\n  selectedId: string | undefined;\n  translations?: MpTableTranslations;\n}\n\nexport default function BreadcrumbList({\n  selectedKey,\n  items,\n  onMouseEnter,\n  selectedId,\n  translations,\n  onClick,\n}: IProps) {\n  const breadcrumbMap = useMemo(\n    () =>\n      items.map((item) => (\n        <ListItem\n          button\n          key={item.id}\n          onMouseEnter={() =>\n            onMouseEnter(\n              selectedKey,\n              item.id as string,\n              translations?.breadcrumbs?.[item.name as string] ??\n                (item.name as string)\n            )\n          }\n          onClick={() => onClick(selectedKey)}\n          selected={selectedId === item.id}\n        >\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {translations?.breadcrumbs?.[item.name as string] ?? item.name}\n          </Typography>\n        </ListItem>\n      )),\n    [items, onClick, onMouseEnter, selectedId, selectedKey, translations]\n  );\n\n  return (\n    <Grid component={Box} minWidth=\"200px\" item>\n      <Box paddingX={2} paddingY={1}>\n        <Typography color=\"textPrimary\" variant=\"subtitle2\">\n          {translations?.breadcrumbs?.[selectedKey] ?? selectedKey}\n        </Typography>\n      </Box>\n      <Divider />\n      <List>{breadcrumbMap}</List>\n    </Grid>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  dropdownIconRoot: {\n    width: 13,\n    height: 8,\n    marginLeft: 7,\n    cursor: \"pointer\",\n  },\n\n  seperator: {\n    margin: \"0 10px\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n}));\n","import { Box, Breadcrumbs, Grid, Link, Popover } from \"@mui/material\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport BreadcrumbFilterDown from \"../../icons/BreadcrumbFilterDown\";\nimport BreadcrumbSeparator from \"../../icons/BreadcrumbSeparator\";\nimport { MpBreadcrumbFilterData } from \"../../types/Filter\";\nimport { MpTableGlobalFilterProps } from \"../../types/Overridables\";\nimport { getNestedElementsMapReduce } from \"../../utils/Breadcrumbs/Breadcrumbs\";\nimport BreadcrumbList from \"./BreadcrumbList\";\nimport useStyles from \"./MpTableBreadcrumb.styles\";\n\ninterface IProps extends MpTableGlobalFilterProps {\n  data: MpBreadcrumbFilterData;\n}\n\nexport default function MpTableBreadcrumb({\n  data,\n  translations,\n  onGlobalFilter,\n  globalFilters,\n}: IProps) {\n  const classes = useStyles();\n  const [selection, setSelection] = useState<{\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }>({});\n  const [items, setItems] = useState<{\n    [key: string]: MpBreadcrumbFilterData[];\n  }>({});\n  const [breadcrumbs, setBreadcrumbs] = useState<{\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }>(globalFilters?.breadcrumb ?? {});\n  const containerRef = useRef<HTMLElement>(null);\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const open = useMemo(() => !!anchorEl, [anchorEl]);\n  const popoverId = useMemo(\n    () => (open ? \"breadcrumb-popover\" : undefined),\n    [open]\n  );\n\n  const updateNestedElements = useCallback(\n    (data: MpBreadcrumbFilterData) => {\n      setItems({ ...getNestedElementsMapReduce(data, selection) });\n    },\n    [selection]\n  );\n\n  const handleBreadcrumbHover = useCallback(\n    (selectedKey: string, id: string, name: string) => {\n      const itemKeys = Object.keys(items);\n      const itemEntries = Object.entries(items);\n      const selectionKeys = Object.keys(selection);\n      const selectionDepth = itemKeys.indexOf(selectedKey);\n\n      if (selectionDepth !== 0) {\n        let selectionObject = {};\n        let selectedPath: string[] =\n          breadcrumbs[selectedKey]?.id === id ? [selectedKey] : [];\n        let prevSelectedObject = {};\n        for (let i = 0; i < selectionDepth; i++) {\n          const [key, value] = itemEntries[i];\n          if (breadcrumbs[key]?.id === selection[key].id) {\n            selectedPath = [...selectedPath, key];\n          } else selectedPath = [];\n          if (selectionKeys.indexOf(key) !== -1) {\n            prevSelectedObject = {\n              ...prevSelectedObject,\n              [key]: {\n                id: selection[key].id,\n                name: selection[key].name,\n              },\n            };\n          }\n          if (selectionKeys.indexOf(key) === -1) {\n            selectionObject = {\n              ...selectionObject,\n              [key]: {\n                id: value[0].id,\n                name: value[0].name,\n              },\n            };\n          }\n        }\n        if (selectedPath?.length - 1 === selectionDepth)\n          prevSelectedObject = breadcrumbs;\n        setSelection(() => {\n          return {\n            ...prevSelectedObject,\n            ...selectionObject,\n            [selectedKey]: {\n              id,\n              name,\n            },\n          };\n        });\n      } else {\n        setSelection(() => {\n          if (breadcrumbs[selectedKey]?.id === id) return breadcrumbs;\n          return {\n            [selectedKey]: {\n              id,\n              name,\n            },\n          };\n        });\n      }\n    },\n    [items, selection, breadcrumbs]\n  );\n\n  const handleBreadcrumbClick = useCallback(\n    (selectedKey: string, isLastClick?: boolean) => {\n      const selectionEntries = Object.entries(selection);\n      const selectionDepth = Object.keys(selection).indexOf(selectedKey) + 1;\n      if (isLastClick) {\n        setAnchorEl(containerRef.current);\n        setSelection(breadcrumbs);\n      } else {\n        const slicedArray = selectionEntries.slice(0, selectionDepth);\n        const slicedObject = Object.fromEntries(slicedArray);\n        onGlobalFilter({\n          key: \"breadcrumb\",\n          value: slicedObject,\n        });\n        setBreadcrumbs(slicedObject);\n        setSelection(slicedObject);\n        setAnchorEl(null);\n      }\n    },\n    [breadcrumbs, onGlobalFilter, selection]\n  );\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n    setSelection(breadcrumbs);\n  }, [breadcrumbs]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => updateNestedElements(data), [selection, data]);\n\n  useEffect(() => {\n    if (Object.keys(selection)?.length < 1) setSelection(breadcrumbs);\n  }, [breadcrumbs, selection]);\n\n  useEffect(\n    () => setBreadcrumbs(globalFilters?.breadcrumb ?? {}),\n    [globalFilters?.breadcrumb]\n  );\n\n  const breadcrumbGridMap = useMemo(() => {\n    const entries = Object.entries(items);\n    const gridItems = [];\n    for (const [key, value] of entries) {\n      gridItems.push(\n        <BreadcrumbList\n          key={key}\n          selectedKey={key}\n          items={value}\n          onMouseEnter={handleBreadcrumbHover}\n          onClick={handleBreadcrumbClick}\n          selectedId={selection[key]?.id}\n          translations={translations ?? {}}\n        />\n      );\n    }\n\n    return gridItems;\n  }, [\n    handleBreadcrumbClick,\n    handleBreadcrumbHover,\n    items,\n    selection,\n    translations,\n  ]);\n\n  const breadcrumbSelectionMap = useMemo(() => {\n    const entries = Object.entries(breadcrumbs);\n    const lastItem = entries[entries.length - 1];\n    const breadcrumbItems = [\n      <Link\n        color=\"textPrimary\"\n        variant=\"h6\"\n        onClick={() => handleBreadcrumbClick(\"\", entries.length === 0)}\n        key=\"initial-table-breadcrumb\"\n        classes={{ root: classes.pointer }}\n      >\n        {translations?.all ?? \"All\"}\n      </Link>,\n    ];\n    for (const [key, value] of entries) {\n      breadcrumbItems.push(\n        <Link\n          color=\"textPrimary\"\n          variant=\"h6\"\n          key={value.id}\n          onClick={() => handleBreadcrumbClick(key, key === lastItem[0])}\n          aria-describedby={popoverId}\n          classes={{ root: classes.pointer }}\n        >\n          {value.name}\n        </Link>\n      );\n    }\n\n    return breadcrumbItems;\n  }, [\n    breadcrumbs,\n    classes.pointer,\n    handleBreadcrumbClick,\n    popoverId,\n    translations?.all,\n  ]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box display=\"flex\" alignItems=\"center\">\n        <Breadcrumbs\n          separator={<BreadcrumbSeparator />}\n          classes={{ separator: classes.seperator }}\n          ref={containerRef}\n        >\n          {breadcrumbSelectionMap}\n        </Breadcrumbs>\n        <BreadcrumbFilterDown\n          classes={{ root: classes.dropdownIconRoot }}\n          onClick={() => handleBreadcrumbClick(\"\", true)}\n        />\n      </Box>\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        PaperProps={{\n          style: { height: \"400px\" },\n        }}\n      >\n        <Box padding={1} height=\"100%\">\n          <Grid container height=\"100%\">\n            {breadcrumbGridMap}\n          </Grid>\n        </Box>\n      </Popover>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport useStyles from \"./MpTableGlobalActions.styles\";\nimport { MpTableGlobalActionProps } from \"../../types/Overridables\";\nimport MpTableBulkActions from \"../../components/MpTableBulkActions/MpTableBulkActions\";\nimport { Box } from \"@mui/material\";\nimport MpTableGlobalFilter from \"../../components/MpTableGlobalFilter/MpTableGlobalFilter\";\nimport MpTableBreadcrumb from \"../../components/MpTableBreadcrumb/MpTableBreadcrumb\";\n\nexport default function MpTableGlobalActions({\n  selectedRowIds,\n  selectedRows,\n  actions,\n  methods,\n  translations,\n  onGlobalFilter,\n  globalFilters,\n  breadcrumbFilterData,\n}: MpTableGlobalActionProps) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.wrapper}>\n      {!!actions && (\n        <MpTableBulkActions\n          selectedRowIds={selectedRowIds}\n          selectedRows={selectedRows}\n          actions={actions}\n          methods={methods}\n          translations={translations}\n        />\n      )}\n      {!!breadcrumbFilterData && (\n        <MpTableBreadcrumb\n          onGlobalFilter={onGlobalFilter}\n          translations={translations}\n          globalFilters={globalFilters}\n          data={breadcrumbFilterData}\n        />\n      )}\n      <MpTableGlobalFilter\n        onGlobalFilter={onGlobalFilter}\n        translations={translations}\n        globalFilters={globalFilters}\n      />\n    </Box>\n  );\n}\n","import MpTableHeadFilter from \"./MpTableHeadFilter/MpTableHeadFilter\";\nimport MpTablePaginator from \"./MpTablePaginator/MpTablePaginator\";\nimport { MpTableOverridablesMap } from \"../types/Overridables\";\nimport MpTableHeadIndicator from \"./MpTableHeadIndicator/MpTableHeadIndicator\";\nimport MpTableGlobalActions from \"./MpTableGlobalActions/MpTableGlobalActions\";\n\nexport const defaultOverridables: Omit<\n  MpTableOverridablesMap,\n  \"renderers\" | \"filters\" | \"filterFunctions\"\n> = {\n  paginator: MpTablePaginator,\n  headFilter: MpTableHeadFilter,\n  headIndicator: MpTableHeadIndicator,\n  globalActions: MpTableGlobalActions,\n};\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  footer: {\n    transition: theme.transitions.create([\"background\", \"box-shadow\"]),\n    background: \"rgba(0,0,0,0)\",\n    boxShadow: \"none\",\n  },\n  raised: {\n    background: theme.palette.background.paper,\n    boxShadow: theme.shadows[15],\n  },\n}));\n","import { TableFooter, TableFooterProps } from \"@mui/material\";\nimport React, {\n  PropsWithChildren,\n  RefObject,\n  useLayoutEffect,\n  useRef,\n} from \"react\";\nimport useStyles from \"./MpTableStickyTotalsFooter.styles\";\n\nconst win = typeof window === \"undefined\" ? null : window;\n\nexport default function MpTableStickyTotalsFooter({\n  children,\n  bodyRef,\n  ...props\n}: PropsWithChildren<TableFooterProps> & {\n  bodyRef: RefObject<HTMLTableSectionElement>;\n}) {\n  const classes = useStyles();\n  const ref = useRef<HTMLTableSectionElement>(null);\n\n  useLayoutEffect(() => {\n    let timeout: any = null;\n    let queuedUpdate: boolean = false;\n    let transformValue: number = 0;\n    const fps = 120;\n\n    // Update the styles\n    const update = () => {\n      const calculatedTransform = -(\n        (bodyRef?.current?.getBoundingClientRect().bottom ?? 0) -\n        window.innerHeight +\n        (ref?.current?.offsetHeight ?? 0)\n      );\n      const transform =\n        calculatedTransform >= 0 ? \"\" : `translateY(${calculatedTransform}px)`;\n      if (ref.current) {\n        ref.current.style.transform = transform;\n        if (calculatedTransform < 0 && transformValue >= 0) {\n          ref.current.classList.add(classes.raised);\n        } else if (calculatedTransform >= 0 && transformValue < 0) {\n          ref.current.classList.remove(classes.raised);\n        }\n      }\n      transformValue = calculatedTransform;\n      timeout = setTimeout(() => {\n        timeout = null;\n        if (queuedUpdate) {\n          queuedUpdate = false;\n          update();\n        }\n      }, 1000 / fps);\n    };\n\n    // Throttle the update\n    const triggerUpdate = () => {\n      if (timeout === null) {\n        update();\n      } else {\n        queuedUpdate = true;\n      }\n    };\n\n    // Set event listeners\n    win?.addEventListener(\"scroll\", triggerUpdate);\n    win?.addEventListener(\"resize\", triggerUpdate);\n    triggerUpdate();\n\n    // Remove event listeners\n    return () => {\n      win?.removeEventListener(\"scroll\", triggerUpdate);\n      win?.removeEventListener(\"resize\", triggerUpdate);\n    };\n  }, [bodyRef, classes.raised, children]);\n\n  return (\n    <TableFooter {...props} className={classes.footer} ref={ref}>\n      {children}\n    </TableFooter>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  totalsSelectCell: {\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none !important\",\n      boxShadow: \"none !important\",\n    },\n  },\n});\n","import { TableCell, TableFooter, TableRow } from \"@mui/material\";\nimport React, { RefObject, useCallback } from \"react\";\nimport { HeaderGroup } from \"react-table\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport MpTableStickyTotalsFooter from \"../MpTableStickyTotalsFooter/MpTableStickyTotalsFooter\";\nimport useStyles from \"./MpTableTotals.styles\";\nimport clsx from \"clsx\";\n\ninterface Props {\n  footerGroups: HeaderGroup<{}>[];\n  hasSelection?: boolean;\n  stickyTotals?: boolean;\n  classes?: MpTableClasses;\n  bodyRef: RefObject<HTMLTableSectionElement>;\n}\n\nexport default function MpTableTotals({\n  footerGroups,\n  hasSelection,\n  stickyTotals,\n  classes: overrideClasses,\n  bodyRef,\n}: Props) {\n  const classes = useStyles();\n\n  const handleFixedWidth = useCallback((column) => {\n    const cellWidth = column.mpColumn?.width;\n    return cellWidth\n      ? {\n          minWidth: cellWidth,\n          width: cellWidth,\n          maxWidth: cellWidth,\n        }\n      : undefined;\n  }, []);\n\n  const groups = footerGroups.map((group) => (\n    <TableRow {...group.getFooterGroupProps()}>\n      {hasSelection && (\n        <TableCell\n          className={clsx(\n            classes.totalsSelectCell,\n            overrideClasses?.totalsSelectCell\n          )}\n        />\n      )}\n      {group.headers.map((column) => (\n        <TableCell\n          style={handleFixedWidth(column)}\n          {...column.getFooterProps()}\n        >\n          {(column as any).Footer != null && column.render(\"Footer\")}\n        </TableCell>\n      ))}\n    </TableRow>\n  ));\n\n  return stickyTotals ? (\n    <MpTableStickyTotalsFooter bodyRef={bodyRef}>\n      {groups}\n    </MpTableStickyTotalsFooter>\n  ) : (\n    <TableFooter>{groups}</TableFooter>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  selectCell: {\n    maxWidth: 42,\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none\",\n    },\n    \"tr:last-child &\": {\n      overflow: \"hidden\",\n    },\n  },\n  cellCheckbox: {\n    margin: -12,\n  },\n});\n","import { Box, Checkbox, TableCell } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport { Row, UseRowSelectRowProps } from \"react-table\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport useStyles from \"./MpTableSelectCell.styles\";\nimport clsx from \"clsx\";\ninterface Props {\n  row: Row & UseRowSelectRowProps<{}>;\n  classes?: MpTableClasses;\n  selection: \"single\" | \"multiple\";\n  toggleAllRowsSelected: (value?: boolean) => void;\n}\n\nexport default function MpTableSelectCell({\n  row,\n  selection,\n  toggleAllRowsSelected,\n  classes: overrideClasses,\n}: Props) {\n  const props = row.getToggleRowSelectedProps();\n  const classes = useStyles();\n\n  const handleCheck = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (selection === \"single\") {\n        toggleAllRowsSelected(false);\n      }\n\n      row.toggleRowSelected(e.target.checked);\n    },\n    [row, selection, toggleAllRowsSelected]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>) =>\n      e.stopPropagation(),\n    []\n  );\n\n  return (\n    <TableCell\n      className={clsx(classes.selectCell, overrideClasses?.selectCell)}\n      onClick={handlePropagation}\n    >\n      <Box display=\"flex\">\n        <Checkbox\n          color=\"primary\"\n          {...props}\n          className={clsx(\n            classes.cellCheckbox,\n            overrideClasses?.selectCellCheckbox\n          )}\n          onChange={handleCheck}\n        />\n      </Box>\n    </TableCell>\n  );\n}\n","import { darken, lighten, Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  renderedCell: {\n    paddingTop: 2,\n    paddingBottom: 2,\n  },\n  highlightedPrimary: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.primary.main, 0.7)\n        : lighten(theme.palette.primary.main, 0.9),\n  },\n  highlightedSecondary: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.secondary.main, 0.7)\n        : lighten(theme.palette.secondary.main, 0.9),\n  },\n  highlightedInactive: {\n    background: theme.palette.background.default,\n    color: theme.palette.text.secondary,\n  },\n  cell: {\n    color: \"inherit\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n}));\n","import { TableCell, TableRow } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport { Row, UseRowSelectRowProps } from \"react-table\";\nimport MpTableSelectCell from \"../MpTableSelectCell/MpTableSelectCell\";\nimport clsx from \"clsx\";\nimport useStyles from \"./MpTableRow.styles\";\nimport {\n  MpTableClasses,\n  MpTableHighlights,\n  RtMpColumnInstance,\n} from \"../../types/Table\";\nimport { useRowHighlights } from \"../../utils/Highlights/Highlights\";\n\ninterface Props {\n  row: Row & UseRowSelectRowProps<{}>;\n  selection?: \"single\" | \"multiple\";\n  classes?: MpTableClasses;\n  highlights?: MpTableHighlights;\n  toggleAllRowsSelected: (value?: boolean) => void;\n  onRowClick?: (row?: Row & UseRowSelectRowProps<{}>) => void;\n}\n\nexport default function MpTableRow({\n  row,\n  selection,\n  classes: overrideClasses,\n  toggleAllRowsSelected,\n  highlights,\n  onRowClick,\n}: Props) {\n  const { inactive, primary, secondary } = useRowHighlights(row, highlights);\n  const classes = useStyles();\n\n  const handleRowClick = useCallback(() => {\n    onRowClick?.(row);\n  }, [onRowClick, row]);\n\n  const handleFixedWidth = useCallback((cell) => {\n    const cellWidth = (cell.column as RtMpColumnInstance).mpColumn?.width;\n    return cellWidth\n      ? {\n          minWidth: cellWidth,\n          width: cellWidth,\n          maxWidth: cellWidth,\n        }\n      : undefined;\n  }, []);\n\n  return (\n    <TableRow\n      {...row.getRowProps()}\n      className={clsx({\n        [overrideClasses?.row ?? \"\"]: overrideClasses?.row != null,\n        [overrideClasses?.highlightedInactive ?? classes.highlightedInactive]:\n          inactive,\n        [overrideClasses?.highlightedPrimary ?? classes.highlightedPrimary]:\n          primary,\n        [overrideClasses?.highlightedSecondary ?? classes.highlightedSecondary]:\n          secondary,\n        [classes.pointer]: onRowClick,\n        [overrideClasses?.rowSelected ?? \"\"]:\n          overrideClasses?.rowSelected != null && row.isSelected,\n      })}\n      onClick={handleRowClick}\n    >\n      {selection != null && (\n        <MpTableSelectCell\n          classes={overrideClasses}\n          row={row}\n          selection={selection}\n          toggleAllRowsSelected={toggleAllRowsSelected}\n        />\n      )}\n      {row.cells.map((cell) => {\n        return (\n          <TableCell\n            {...cell.getCellProps()}\n            className={clsx(classes.cell, {\n              [classes.renderedCell]:\n                (cell.column as any).mpColumn.render != null,\n            })}\n            style={handleFixedWidth(cell)}\n          >\n            {cell.render(\"Cell\")}\n          </TableCell>\n        );\n      })}\n    </TableRow>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Row } from \"react-table\";\nimport { MpTableHighlights } from \"../../types/Table\";\n\nexport function useRowHighlights(row: Row, highlights?: MpTableHighlights) {\n  const { original } = row;\n  return useMemo(\n    () => ({\n      inactive: highlights?.inactive\n        ? !!original?.[highlights?.inactive]\n        : false,\n      primary: highlights?.primary ? !!original?.[highlights?.primary] : false,\n      secondary: highlights?.secondary\n        ? !!original?.[highlights?.secondary]\n        : false,\n    }),\n    [original, highlights]\n  );\n}\n","import { useMemo, useCallback, useState, useEffect } from \"react\";\n\nexport const getFromStorage = (\n  key: string,\n  storage: Storage = localStorage\n) => {\n  try {\n    const raw = storage.getItem(key);\n    return raw != null && raw !== \"\" ? JSON.parse(raw ?? \"\") : null;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n    return null;\n  }\n};\n\nexport const useStorage = <T>(\n  key: string,\n  storage: Storage = localStorage\n): [T | undefined, (value: T) => void] => {\n  const cache: T | undefined = useMemo(() => {\n    const item = getFromStorage(key, storage);\n    try {\n      return JSON.parse(item);\n    } catch (e) {\n      return item;\n    }\n  }, [key, storage]);\n\n  const setCache = useCallback(\n    (value: T) => {\n      storage.setItem(key, JSON.stringify(value));\n    },\n    [key, storage]\n  );\n\n  return [cache, setCache];\n};\n\nexport const useStoredState = <T = any>(key: string, defaultValue: T) => {\n  const [cache, setCache] = useStorage<T>(key);\n\n  const tuple = useState<T>(cache ?? defaultValue);\n  const [value] = tuple;\n\n  useEffect(() => {\n    setCache(value);\n  }, [setCache, value]);\n\n  return tuple;\n};\n","import React, { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport clsx from \"clsx\";\nimport { MpTableProps, RtMpColumnInstance } from \"../../types/Table\";\nimport {\n  Column,\n  Filters,\n  Row,\n  SortingRule,\n  TableInstance,\n  TableOptions,\n  TableState,\n  useFilters,\n  UseFiltersInstanceProps,\n  UseFiltersOptions,\n  UseFiltersState,\n  usePagination,\n  UsePaginationInstanceProps,\n  UsePaginationOptions,\n  UsePaginationState,\n  useRowSelect,\n  UseRowSelectInstanceProps,\n  UseRowSelectRowProps,\n  UseRowSelectState,\n  useSortBy,\n  UseSortByInstanceProps,\n  UseSortByState,\n  useTable,\n} from \"react-table\";\nimport { Box, Table, TableBody, TableHead, TableRow } from \"@mui/material\";\nimport { convertMpToColumn } from \"../../utils/ColumnAdapter/ColumnAdapter\";\nimport { useDataFormatters } from \"../../utils/DataFormatter/DataFormatter\";\nimport { useDataArguments } from \"../../utils/DataArguments/DataArguments\";\nimport MpTableHeadCell from \"../MpTableHeadCell/MpTableHeadCell\";\nimport useStyles from \"./MpTable.styles\";\nimport MpTableEmptyBody from \"../MpTableEmptyBody/MpTableEmptyBody\";\nimport MpTableHeadSelectCell from \"../MpTableHeadSelectCell/MpTableHeadSelectCell\";\nimport { useOverridables } from \"../../utils/Overridables/Overridables\";\nimport MpTableTotals from \"../MpTableTotals/MpTableTotals\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { Meta } from \"../../types/Meta\";\nimport { MpBulkActionMethods, MpActions } from \"../../types/Actions\";\nimport MpTableRow from \"../MpTableRow/MpTableRow\";\nimport { useStorage } from \"../../utils/Storage/Storage\";\nimport { MpGlobalFilters } from \"../../types/Filter\";\nimport { useGlobalFilters, useRemoteFilters } from \"../../utils/Filter/Filter\";\n\nconst emptyData: any[] = [];\n\nexport default function MpTable<ItemType extends Object = any>({\n  columns: mpColumns,\n  data = emptyData,\n  loading,\n  size,\n  onGetData,\n  dataCount,\n  storageIdentifier,\n  cacheFilters,\n  cacheSorting,\n  cacheGlobalFilter,\n  filterVariant = \"head\",\n  localPagination = false,\n  localSorting = false,\n  localFiltering = false,\n  translations,\n  pageSize = 10,\n  overridables: partialOverridables,\n  rowIdKey,\n  selection,\n  totals,\n  stickyTotals,\n  totalsData,\n  bulkActions,\n  bulkMethods,\n  rowMethods,\n  highlights,\n  clearColumnFilters = false,\n  classes: overrideClasses,\n  asyncGetMethods,\n  locale,\n  disablePagination,\n  disableSorting,\n  onRowClick,\n  enableGlobalActions,\n  breadcrumbFilterData,\n  onEdit,\n  onRowsSelected,\n  emptyChildren,\n  loadingComponent,\n  clearFiltersEvent,\n  resetSelectedRows = true,\n}: MpTableProps<ItemType>) {\n  const columns: Column<any>[] = useMemo(\n    () => mpColumns.map(convertMpToColumn(partialOverridables, disableSorting)),\n    [mpColumns, partialOverridables, disableSorting]\n  );\n  const remoteFiltersColumns = useRemoteFilters(mpColumns);\n  const classes = useStyles();\n  const bodyRef = useRef<HTMLTableSectionElement>(null);\n\n  const pageCount = useMemo(\n    () =>\n      dataCount && !disablePagination\n        ? Math.ceil((dataCount ?? 0) / pageSize)\n        : undefined,\n    [dataCount, pageSize, disablePagination]\n  );\n  const [filtersCache, setFiltersCache] = useStorage<Filters<{}>>(\n    `${storageIdentifier}-filters`\n  );\n  const [sortingCache, setSortingCache] = useStorage<SortingRule<{}>[]>(\n    `${storageIdentifier}-sorting`\n  );\n  const [globalFiltersCache, setGlobalFiltersCache] = useStorage<\n    MpGlobalFilters | undefined\n  >(`${storageIdentifier}-globalFilter`);\n  const [globalFilters, { setGlobalFilters }] = useGlobalFilters(\n    cacheGlobalFilter ? globalFiltersCache : undefined\n  );\n\n  const initialState = useMemo(\n    () =>\n      ({\n        pageIndex: 0,\n        filters: cacheFilters ? filtersCache ?? [] : [],\n        sortBy: cacheSorting ? sortingCache ?? [] : [],\n        pageSize: disablePagination ? undefined : pageSize,\n      } as Partial<TableState & UsePaginationState<{}>>),\n    [\n      filtersCache,\n      cacheFilters,\n      sortingCache,\n      cacheSorting,\n      pageSize,\n      disablePagination,\n    ]\n  );\n\n  const overridables = useOverridables(partialOverridables);\n  const [dataState, setDataState] = useDataFormatters<ItemType>(\n    data,\n    mpColumns,\n    locale\n  );\n\n  const getRowId = useCallback((row: Row) => row?.[rowIdKey], [rowIdKey]);\n\n  const tableOptions = useMemo(\n    () =>\n      ({\n        columns,\n        data: dataState,\n        initialState,\n        manualPagination: !localPagination,\n        manualSortBy: !localSorting,\n        manualFilters: !localFiltering,\n        autoResetFilters: !(localFiltering && !!remoteFiltersColumns?.length),\n        getRowId,\n        autoResetPage: false,\n        pageCount,\n        autoResetSelectedRows: resetSelectedRows,\n      } as TableOptions<{}> & UsePaginationOptions<{}> & UseFiltersOptions<{}>),\n    [\n      columns,\n      dataState,\n      initialState,\n      localPagination,\n      localSorting,\n      localFiltering,\n      remoteFiltersColumns?.length,\n      getRowId,\n      pageCount,\n    ]\n  );\n\n  const tableInstance = useTable(\n    tableOptions,\n    useFilters,\n    useSortBy,\n    usePagination,\n    useRowSelect\n  );\n  const {\n    visibleColumns,\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    page,\n    prepareRow,\n    nextPage,\n    previousPage,\n    gotoPage,\n    getToggleAllRowsSelectedProps,\n    toggleAllRowsSelected,\n    selectedFlatRows,\n    setAllFilters,\n    setFilter,\n  } = tableInstance as TableInstance &\n    UsePaginationInstanceProps<{}> &\n    UseSortByInstanceProps<{}> &\n    UseFiltersInstanceProps<{}> &\n    UseRowSelectInstanceProps<{}>;\n  const state = tableInstance.state as TableState &\n    UsePaginationState<{}> &\n    UseSortByState<{}> &\n    UseFiltersState<{}> &\n    UseRowSelectState<{}>;\n\n  const dataArguments = useDataArguments({\n    state,\n    visibleColumns,\n    localFiltering,\n    localPagination,\n    localSorting,\n    rowIdKey,\n    globalFilters,\n    remoteFiltersColumns,\n  });\n\n  useEffect(() => {\n    onGetData(dataArguments);\n  }, [onGetData, dataArguments]);\n\n  useEffect(() => {\n    if (cacheFilters) {\n      setFiltersCache(state.filters);\n    }\n  }, [cacheFilters, state.filters, setFiltersCache]);\n\n  useEffect(() => {\n    if (cacheSorting) {\n      setSortingCache(state.sortBy);\n    }\n  }, [cacheSorting, state.sortBy, setSortingCache]);\n\n  useEffect(() => {\n    if (cacheGlobalFilter) {\n      setGlobalFiltersCache(globalFilters);\n    }\n  }, [cacheGlobalFilter, setGlobalFiltersCache, globalFilters]);\n\n  useEffect(() => {\n    onEdit?.(dataState);\n  }, [dataState, onEdit]);\n\n  useEffect(() => {\n    if (typeof onRowsSelected === \"function\") {\n      onRowsSelected(selectedFlatRows);\n    }\n  }, [selectedFlatRows, onRowsSelected]);\n\n  useEffect(() => {\n    if (clearFiltersEvent != null) {\n      if (!clearFiltersEvent?.length) setAllFilters([]);\n      if (!!clearFiltersEvent?.length) {\n        clearFiltersEvent.forEach((filter) => setFilter(filter, []));\n      }\n    }\n  }, [clearFiltersEvent, setAllFilters, setFilter]);\n\n  const bodyStyle = useMemo(\n    () => ({\n      opacity: loading ? 0.5 : undefined,\n    }),\n    [loading]\n  );\n\n  const cellCount = useMemo(() => {\n    return columns.length + (!!selection ? 1 : 0);\n  }, [columns, selection]);\n\n  const meta: Meta<ItemType> = useMemo(\n    () => ({\n      totalsData,\n      size,\n      rowMethods,\n      translations,\n      locale,\n      asyncGetMethods,\n      localPagination,\n      localSorting,\n      localFiltering,\n      onInputChange: setDataState,\n    }),\n    [\n      totalsData,\n      size,\n      rowMethods,\n      translations,\n      locale,\n      asyncGetMethods,\n      localPagination,\n      localSorting,\n      localFiltering,\n      setDataState,\n    ]\n  );\n\n  return (\n    <MetaContext.Provider value={meta}>\n      <Box className={classes.parent}>\n        {enableGlobalActions && (\n          <overridables.globalActions\n            selectedRows={selectedFlatRows}\n            selectedRowIds={state.selectedRowIds}\n            actions={bulkActions as MpActions}\n            methods={bulkMethods as MpBulkActionMethods}\n            translations={translations}\n            onGlobalFilter={setGlobalFilters}\n            globalFilters={globalFilters}\n            breadcrumbFilterData={breadcrumbFilterData}\n          />\n        )}\n        <Box\n          className={clsx(classes.wrapper, overrideClasses?.tableWrapper, {\n            [classes.stickyTotalsWrapper]: stickyTotals,\n          })}\n        >\n          <Table\n            size={size}\n            {...getTableProps()}\n            className={clsx(classes.table, overrideClasses?.table)}\n          >\n            <TableHead>\n              {headerGroups.map((headerGroup: any) => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                  {selection != null && (\n                    <MpTableHeadSelectCell\n                      classes={overrideClasses}\n                      selection={selection}\n                      {...getToggleAllRowsSelectedProps()}\n                    />\n                  )}\n                  {headerGroup.headers.map((column: RtMpColumnInstance) => (\n                    <MpTableHeadCell\n                      {...column.getHeaderProps()}\n                      overridables={overridables}\n                      variant={filterVariant === \"head\" ? \"extended\" : \"simple\"}\n                      column={column}\n                      clearFiltersEvent={clearFiltersEvent}\n                      clearColumnFilters={clearColumnFilters}\n                      classes={overrideClasses}\n                    />\n                  ))}\n                </TableRow>\n              ))}\n            </TableHead>\n            <TableBody {...getTableBodyProps()} style={bodyStyle} ref={bodyRef}>\n              {page.length < 1 && (\n                <MpTableEmptyBody\n                  cellCount={cellCount}\n                  loading={loading}\n                  emptyChildren={emptyChildren}\n                  loadingComponent={loadingComponent}\n                />\n              )}\n              {page.map((row: Row & UseRowSelectRowProps<{}>) => {\n                prepareRow(row);\n                return (\n                  <MpTableRow\n                    key={row.getRowProps().key}\n                    row={row}\n                    highlights={highlights}\n                    classes={overrideClasses}\n                    selection={selection}\n                    toggleAllRowsSelected={toggleAllRowsSelected}\n                    onRowClick={onRowClick}\n                  />\n                );\n              })}\n            </TableBody>\n            {!!totals && !!totalsData && (\n              <MpTableTotals\n                footerGroups={footerGroups}\n                hasSelection={selection != null}\n                classes={overrideClasses}\n                bodyRef={bodyRef}\n                stickyTotals={stickyTotals}\n              />\n            )}\n          </Table>\n        </Box>\n        {!disablePagination && (\n          <overridables.paginator\n            pageSize={state.pageSize}\n            itemCount={dataCount}\n            pageCount={pageCount}\n            pageIndex={state.pageIndex}\n            previousPage={previousPage}\n            nextPage={nextPage}\n            gotoPage={gotoPage}\n            loading={loading}\n            translations={translations}\n            selectedCount={selectedFlatRows.length}\n          />\n        )}\n      </Box>\n    </MetaContext.Provider>\n  );\n}\n","import { useMemo } from \"react\";\nimport { defaultOverridables } from \"../../overridables/Overridables\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\n\nexport function useOverridables(\n  overridables?: Partial<MpTableOverridablesMap>\n) {\n  return useMemo(\n    () => ({\n      ...defaultOverridables,\n      ...(overridables ?? {}),\n    }),\n    [overridables]\n  );\n}\n","import { MpColumn } from \"./../../types/Table\";\nimport { MpGlobalFilters } from \"./../../types/Filter\";\nimport { useMemo, useRef } from \"react\";\nimport {\n  ColumnInstance,\n  TableState,\n  UseFiltersState,\n  UsePaginationState,\n  UseSortByState,\n} from \"react-table\";\nimport { MpTableDataArguments } from \"../../types/Table\";\n\ninterface Options {\n  state: TableState &\n    UsePaginationState<{}> &\n    UseSortByState<{}> &\n    UseFiltersState<{}>;\n  visibleColumns: ColumnInstance<any>[];\n  rowIdKey: string;\n  localFiltering?: boolean;\n  localPagination?: boolean;\n  localSorting?: boolean;\n  globalFilters?: MpGlobalFilters;\n  remoteFiltersColumns?: MpColumn[];\n}\n\nfunction shallowEqual(a?: Record<string, any>, b?: Record<string, any>) {\n  return ![...Object.keys(a ?? {}), ...Object.keys(b ?? {})].find((key) => {\n    return a?.[key] !== b?.[key];\n  });\n}\n\nexport function useDataArguments({\n  state,\n  visibleColumns,\n  localFiltering,\n  localSorting,\n  rowIdKey,\n  localPagination,\n  globalFilters,\n  remoteFiltersColumns,\n}: Options): MpTableDataArguments {\n  const sortBy = useMemo(() => (localSorting ? undefined : state.sortBy), [\n    localSorting,\n    state,\n  ]);\n  const pageSize = useMemo(\n    () => (localPagination ? undefined : state.pageSize),\n    [state, localPagination]\n  );\n  const pageIndex = useMemo(\n    () => (localPagination ? undefined : state.pageIndex),\n    [state, localPagination]\n  );\n\n  const hybridFilterCache = useRef<any>();\n  const filters = useMemo(() => {\n    if (localFiltering && !remoteFiltersColumns?.length) {\n      return undefined;\n    } else if (!localFiltering && !remoteFiltersColumns?.length) {\n      return state.filters;\n    } else {\n      const hybridFilters = state.filters\n        ?.filter((filter) => {\n          return !!remoteFiltersColumns?.find(({ key }) => key === filter.id);\n        })\n        ?.reduce((acc, filter) => {\n          acc[filter.id] = filter.value;\n          return acc;\n        }, {} as Record<string, any>);\n      if (!shallowEqual(hybridFilterCache.current, hybridFilters)) {\n        hybridFilterCache.current = hybridFilters;\n        return hybridFilters;\n      } else {\n        return hybridFilterCache.current;\n      }\n    }\n  }, [localFiltering, remoteFiltersColumns, state]);\n\n  const columnIds = useMemo(() => visibleColumns.map((column) => column.id), [\n    visibleColumns,\n  ]);\n  const globalFilterData = useMemo(() => globalFilters, [globalFilters]);\n\n  return useMemo(() => {\n    const result: MpTableDataArguments = {\n      columns: [rowIdKey, ...columnIds],\n    };\n    if (pageSize != null && pageIndex != null) {\n      result.cursor = pageIndex * pageSize;\n    }\n    if (pageSize != null) {\n      result.limit = pageSize;\n    }\n    if (sortBy != null) {\n      result.sort = sortBy.map((rule) => ({\n        key: rule.id,\n        desc: rule.desc,\n      }));\n    }\n    if (filters != null) {\n      result.filters = filters;\n    }\n    if (globalFilterData != null) {\n      result.globalFilters = globalFilterData;\n    }\n\n    return result;\n  }, [\n    pageSize,\n    pageIndex,\n    columnIds,\n    sortBy,\n    filters,\n    rowIdKey,\n    globalFilterData,\n  ]);\n}\n","import { useStoredState } from \"./../Storage/Storage\";\nimport moment from \"moment\";\nimport {\n  Datepicker,\n  DatepickerListItem,\n  Months,\n} from \"./../../types/Datepicker\";\nimport { useCallback, useMemo } from \"react\";\n\nexport const getMonths = (year: number): Months => ({\n  q1: [\n    {\n      key: \"month\",\n      label: \"January\",\n      value: `Jan, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"February\",\n      value: `Feb, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"March\",\n      value: `Mar, ${year}`,\n    },\n  ],\n  q2: [\n    {\n      key: \"month\",\n      label: \"April\",\n      value: `Apr, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"May\",\n      value: `May, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"June\",\n      value: `Jun, ${year}`,\n    },\n  ],\n  q3: [\n    {\n      key: \"month\",\n      label: \"July\",\n      value: `Jul, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"August\",\n      value: `Aug, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"September\",\n      value: `Sep, ${year}`,\n    },\n  ],\n  q4: [\n    {\n      key: \"month\",\n      label: \"October\",\n      value: `Oct, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"November\",\n      value: `Nov, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"December\",\n      value: `Dec, ${year}`,\n    },\n  ],\n});\n\nexport const getQuarters = (year: number, months: Months) => {\n  const { q1, q2, q3, q4 } = months;\n  return [\n    {\n      key: \"quarter\",\n      label: \"Q1\",\n      value: `Q1, ${year}`,\n      items: q1,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q2\",\n      value: `Q2, ${year}`,\n      items: q2,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q3\",\n      value: `Q3, ${year}`,\n      items: q3,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q4\",\n      value: `Q4, ${year}`,\n      items: q4,\n    },\n  ];\n};\n\nexport const useDatepickerData = () => {\n  let year = 2021;\n  const years = useMemo((): DatepickerListItem[] => {\n    const items = [];\n\n    while (year > 2015) {\n      const stringifiedYear = year.toString();\n      const months = getMonths(year);\n      const quarters = getQuarters(year, months);\n      items.push({\n        key: \"year\",\n        label: stringifiedYear,\n        value: stringifiedYear,\n        items: quarters,\n      });\n      year--;\n    }\n\n    return items;\n  }, [year]);\n\n  return years;\n};\n\nexport default function useDatepicker() {\n  const [date, setDate] = useStoredState<string | null>(\"datepicker\", null);\n  const [dateFilter, setDateFilter] = useStoredState<Datepicker | null>(\n    \"datepickerISO\",\n    null\n  );\n  const [dateFrom, setDateFrom] = useStoredState<string | null>(\n    \"datepickerDateFrom\",\n    null\n  );\n  const [dateTo, setDateTo] = useStoredState<string | null>(\n    \"datepickerDateTo\",\n    null\n  );\n\n  const parseQuarter = useCallback((quarterString: string): Datepicker => {\n    const quarterNum: number = Number(quarterString.charAt(1));\n    const year: string = quarterString.substr(3);\n    const date = moment(year).quarter(quarterNum);\n    return {\n      dateFrom: date.startOf(\"quarter\").toISOString(),\n      dateTo: date.endOf(\"quarter\").toISOString(),\n    };\n  }, []);\n\n  const parseYear = useCallback((yearString: string): Datepicker => {\n    const date = moment(yearString);\n    return {\n      dateFrom: date.startOf(\"year\").toISOString(),\n      dateTo: date.endOf(\"year\").toISOString(),\n    };\n  }, []);\n\n  const parseMonth = useCallback((monthString: string): Datepicker => {\n    const date = moment(monthString);\n    return {\n      dateFrom: date.startOf(\"month\").toISOString(),\n      dateTo: date.endOf(\"month\").toISOString(),\n    };\n  }, []);\n\n  const parseDate = useCallback(\n    (dateString: string | null) =>\n      !!dateString && moment(dateString).format(\"YYYY MMM\"),\n    []\n  );\n\n  const setDatepickerValues = useCallback(\n    (\n      value: string,\n      key: string,\n      callback: (data: Datepicker | null) => void\n    ) => {\n      if (key === \"dateFrom\") {\n        const dateFromLabel = parseDate(value);\n        const dateToLabel = parseDate(dateTo) ?? \"\";\n        const label = `${dateFromLabel} - ${dateToLabel}`;\n        callback({\n          dateFrom: dateFrom ?? \"\",\n          dateTo: dateTo ?? \"\",\n        });\n        setDate(label);\n      } else if (key === \"dateTo\") {\n        callback({\n          dateFrom: dateFrom ?? \"\",\n          dateTo: dateTo ?? \"\",\n        });\n        const dateFromLabel = parseDate(dateFrom) ?? \"\";\n        const dateToLabel = parseDate(value);\n        const label = `${dateFromLabel} - ${dateToLabel}`;\n        setDate(label);\n      } else {\n        setDate(value);\n      }\n\n      let filter: Datepicker | null = null;\n      switch (key) {\n        case \"month\":\n          filter = parseMonth(value);\n          break;\n        case \"quarter\":\n          filter = parseQuarter(value);\n          break;\n        case \"year\":\n          filter = parseYear(value);\n          break;\n        case \"dateFrom\":\n          setDateFrom(moment(value).toISOString());\n          break;\n        case \"dateTo\":\n          setDateTo(moment(value).toISOString());\n      }\n      if (!!filter) {\n        callback(filter);\n        setDateFilter(filter);\n      }\n    },\n    [\n      dateFrom,\n      dateTo,\n      parseDate,\n      parseMonth,\n      parseQuarter,\n      parseYear,\n      setDate,\n      setDateFilter,\n      setDateFrom,\n      setDateTo,\n    ]\n  );\n\n  const handleFilterClick = useCallback(() => {\n    if (!!dateFrom && !!dateTo)\n      setDateFilter({\n        dateFrom,\n        dateTo,\n      });\n  }, [dateFrom, dateTo, setDateFilter]);\n\n  const clearSelected = useCallback(\n    (callback: (data: Datepicker | null) => void) => {\n      setDate(null);\n      setDateFilter(null);\n      callback(null);\n    },\n    [setDate, setDateFilter]\n  );\n\n  return {\n    date,\n    setDatepickerValues,\n    dateFilter,\n    clearSelected,\n    handleFilterClick,\n    dateFrom,\n    dateTo,\n  };\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  endItem: {\n    paddingTop: 14,\n    paddingBottom: 12,\n    paddingLeft: 0,\n    paddingRight: 0,\n    minWidth: 130,\n  },\n  paper: {\n    maxWidth: 340,\n    maxHeight: 580,\n    overflowY: \"auto\",\n    position: \"relative\",\n    paddingTop: 50,\n    \"-ms-overflow-style\": \"none\", // IE and Edge\n    scrollbarWidth: \"none\", // Firefox\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  toggle: {\n    height: 44,\n    maxWidth: 195,\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    paddingLeft: 14,\n    paddingRight: 38,\n    position: \"relative\",\n    color: \"#69717D\",\n  },\n  selected: {\n    color: \"black\",\n  },\n  arrow: {\n    position: \"absolute\",\n    right: 14,\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  noPadding: {\n    padding: 0,\n    alignItems: \"center\",\n  },\n  typography: {\n    padding: \"0 35px\",\n    width: \"100%\",\n  },\n  fullWidth: {\n    width: \"100%\",\n    position: \"relative\",\n    paddingLeft: 40,\n  },\n  listItem: {\n    background: \"white\",\n    flexDirection: \"row-reverse\",\n    \"&:hover\": {\n      background: \"white\",\n      \"& > .MuiTypography-root\": {\n        fontWeight: \"bold\",\n      },\n    },\n    border: \"1px solid rgba(0, 0, 0, 0.1)\",\n    borderTop: 0,\n    borderLeft: 0,\n    \"&:last-child\": {\n      borderBottom: 0,\n    },\n  },\n  iconContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    left: 20,\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    \"& .MuiSvgIcon-root\": {\n      width: 12,\n      height: 9,\n    },\n  },\n  active: {\n    fontWeight: \"bold\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 50,\n    paddingLeft: 40,\n    paddingRight: 25,\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.1)\",\n    position: \"fixed\",\n    top: 0,\n    width: \"100%\",\n    zIndex: 1,\n    background: \"white\",\n  },\n  headerAction: {\n    color: \"#69717D\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"black\",\n      fontWeight: \"bold\",\n    },\n  },\n});\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function Check(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      width=\"12\"\n      height=\"9\"\n      viewBox=\"0 0 12 9\"\n      fill=\"none\"\n      {...props}\n      style={{ fill: \"none\", width: 12, height: 9, overflow: \"visible\" }}\n    >\n      <path d=\"M1 4L4.5 7.5L11 1\" stroke=\"#4DA621\" strokeWidth=\"2\" />\n    </SvgIcon>\n  );\n}\n","import React from \"react\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport clsx from \"clsx\";\nimport { DatepickerListItem } from \"../../types/Datepicker\";\nimport Check from \"../../icons/Check\";\nimport { List, ListItem, Typography } from \"@mui/material\";\n\ninterface IProps {\n  data: DatepickerListItem[];\n  onClick: (value: string, key: string) => void;\n  date: string | null;\n}\n\nexport default function MpDatepickerItem({ data, onClick, date }: IProps) {\n  const classes = useStyles();\n\n  return (\n    <List disablePadding>\n      {data.map((item) => {\n        const isActive = date === item.value;\n        return (\n          <ListItem\n            classes={{\n              root: clsx({\n                [classes.listItem]: true,\n                [classes.noPadding]: !!item?.items,\n                [classes.endItem]: !item?.items,\n              }),\n            }}\n            onClick={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n              e.stopPropagation();\n              onClick(item.value, item.key);\n            }}\n            button\n            key={item.value}\n            disableRipple\n          >\n            <Typography\n              className={clsx({\n                [classes.typography]: item?.items,\n                [classes.fullWidth]: true,\n                [classes.active]: isActive,\n              })}\n              variant=\"body2\"\n            >\n              {isActive && <Check className={classes.iconContainer} />}\n              {item.label}\n            </Typography>\n            {item?.items && (\n              <MpDatepickerItem\n                data={item.items}\n                onClick={onClick}\n                date={date}\n              />\n            )}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Check from \"../../icons/Check\";\nimport { MpTableTranslations } from \"../../types/Table\";\nimport { FromToFilterProps } from \"../../types/Datepicker\";\n\ninterface Props {\n  onSelectAll: () => void;\n  date: string | null;\n  translations?: MpTableTranslations;\n  FromToFilter?: React.ComponentType<FromToFilterProps>;\n  filterProps: FromToFilterProps;\n}\n\nexport default function MpDatepickerHeader({\n  date,\n  onSelectAll,\n  translations,\n  FromToFilter,\n  filterProps,\n}: Props) {\n  const classes = useStyles();\n\n  const [isFromTo, setIsFromTo] = useState<boolean>(false);\n\n  const switchView = useCallback(() => setIsFromTo(true), []);\n\n  if (isFromTo && !!FromToFilter) return <FromToFilter {...filterProps} />;\n\n  return (\n    <Box className={classes.header}>\n      {!date && <Check className={classes.iconContainer} />}\n      <Typography\n        onClick={onSelectAll}\n        classes={{ root: classes.headerAction }}\n        variant=\"body2\"\n      >\n        {translations?.allTime ?? \"All time\"}\n      </Typography>\n      {!!FromToFilter && (\n        <Typography\n          onClick={(e) => {\n            e.stopPropagation();\n            switchView();\n          }}\n          classes={{ root: classes.headerAction }}\n          variant=\"body2\"\n        >{`${translations?.from ?? \"From\"} - ${\n          translations?.to ?? \"To\"\n        }`}</Typography>\n      )}\n    </Box>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function DatepickerArrowDown(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      width=\"10\"\n      height=\"5\"\n      viewBox=\"0 0 10 5\"\n      {...props}\n      style={{ fill: \"none\", width: 10, height: 5, overflow: \"visible\" }}\n    >\n      <path\n        d=\"M1.5 1.5L6.5 6.5L11.5 1.5\"\n        stroke=\"#69717D\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function DatepickerArrowUp(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      fill=\"none\"\n      width=\"10\"\n      height=\"5\"\n      viewBox=\"0 0 10 5\"\n      {...props}\n      style={{ fill: \"none\", width: 10, height: 5, overflow: \"visible\" }}\n    >\n      <path\n        d=\"M11.5 6.5L6.5 1.5L1.5 6.5\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </SvgIcon>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport DatepickerArrowDown from \"../../icons/DatepickerArrowDown\";\nimport DatepickerArrowUp from \"../../icons/DatepickerArrowUp\";\n\ninterface Props {\n  anchorEl: null | HTMLElement;\n}\n\nexport default function MpDatepickerArrow({ anchorEl }: Props) {\n  const classes = useStyles();\n\n  const Arrow = useMemo(\n    () => (anchorEl === null ? DatepickerArrowDown : DatepickerArrowUp),\n    [anchorEl]\n  );\n\n  return <Arrow className={classes.arrow} />;\n}\n","import {\n  Box,\n  ClickAwayListener,\n  Fade,\n  Paper,\n  Popper,\n  PopperProps,\n} from \"@mui/material\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Datepicker,\n  DatepickerListItem,\n  FromToFilterProps,\n} from \"../../types/Datepicker\";\nimport useDatepicker, {\n  useDatepickerData,\n} from \"../../utils/Datepicker/Datepicker\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport MpDatepickerItem from \"./MpDatepickerItem\";\nimport MpDatepickerHeader from \"./MpDatepickerHeader\";\nimport { MpTableTranslations } from \"../../types/Table\";\nimport MpDatepickerArrow from \"./MpDatepickerArrow\";\n\ninterface Props {\n  items?: DatepickerListItem[];\n  placement?: PopperProps[\"placement\"];\n  translations?: MpTableTranslations;\n  FromToFilter?: React.ComponentType<FromToFilterProps>;\n  onGetData: (data: Datepicker) => void;\n}\n\nexport default function MpDatepicker({\n  items,\n  placement,\n  translations,\n  FromToFilter,\n  onGetData,\n}: Props) {\n  const classes = useStyles();\n  const {\n    setDatepickerValues,\n    clearSelected,\n    date,\n    handleFilterClick,\n    dateFrom,\n    dateTo,\n  } = useDatepicker();\n  const defaultData = useDatepickerData();\n  const data = useMemo(() => items ?? defaultData, [defaultData, items]);\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const open = useMemo(() => !!anchorEl, [anchorEl]);\n  const id = useMemo(() => (open ? \"datepicker-popper\" : undefined), [open]);\n  const filterProps = useMemo(\n    (): FromToFilterProps => ({\n      onFilter: () => {\n        handleFilterClick();\n        setAnchorEl(null);\n      },\n      onDateChange: setDatepickerValues,\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n      onGetData: onGetData,\n    }),\n    [dateFrom, dateTo, handleFilterClick, onGetData, setDatepickerValues]\n  );\n\n  const togglePopper = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      setAnchorEl(anchorEl ? null : event.currentTarget);\n    },\n    [anchorEl]\n  );\n\n  const handleDatepickerClick = useCallback(\n    (value: string, key: string) => {\n      setAnchorEl(null);\n      setDatepickerValues(value, key, onGetData);\n    },\n    [onGetData, setDatepickerValues]\n  );\n\n  const handleSelectAll = useCallback(() => {\n    clearSelected(onGetData);\n    setAnchorEl(null);\n  }, [clearSelected, onGetData]);\n\n  return (\n    <ClickAwayListener onClickAway={() => setAnchorEl(null)}>\n      <Box>\n        <Paper\n          className={clsx({\n            [classes.toggle]: true,\n            [classes.selected]: !!date,\n          })}\n          aria-describedby={id}\n          onClick={togglePopper}\n        >\n          {date ?? \"All time\"}\n          <MpDatepickerArrow anchorEl={anchorEl} />\n        </Paper>\n        <Popper\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          style={{ zIndex: 1299 }}\n          placement={placement ?? \"bottom-end\"}\n          transition\n        >\n          {({ TransitionProps }) => (\n            <Fade {...TransitionProps} timeout={350}>\n              <Paper elevation={4} className={classes.paper}>\n                <MpDatepickerHeader\n                  translations={translations}\n                  date={date}\n                  onSelectAll={handleSelectAll}\n                  FromToFilter={FromToFilter}\n                  filterProps={filterProps}\n                />\n                <MpDatepickerItem\n                  date={date}\n                  data={data}\n                  onClick={handleDatepickerClick}\n                />\n              </Paper>\n            </Fade>\n          )}\n        </Popper>\n      </Box>\n    </ClickAwayListener>\n  );\n}\n"],"names":["useDebounce","ms","handle","useRef","useCallback","cb","current","clearTimeout","setTimeout","apply","concat","slice","call","arguments","useUnmounted","ref","useEffect","MetaContext","createContext","useFilterOptions","_ref","filter","useMemo","type","executeMethod","method","search","resultSetter","loadingSetter","latestRequest","unmounted","filterItems","request","Date","now","then","result","Array","isArray","useFilterItems","column","useContext","asyncGetMethods","localFiltering","_useContext","preFilteredRows","id","_useState","useState","items","setItems","_useState2","asyncGet","loading","setLoading","debounce","getItems","searchText","_filter$items$length","_filter$items","_filter$items$length2","_filter$items2","rows","key","length","localItems","map","row","values","val","i","arr","indexOf","item","toLowerCase","text","value","label","useGlobalFilters","initialValue","globalFilters","_useState3","setGlobalFilters","prevState","_extends2","_ref2","_extends","handleSetGlobalFilter","useStyles$i","makeStyles","emptyAnchor","cursor","userSelect","empty","Select","_ref$value","setValue","doFiltering","mpColumn","translations","classes","useStyles","_useFilterItems","handleChange","event","target","checked","includes","name","handleClear","preventDefault","React","createElement","Box","display","flexDirection","paddingLeft","justifyContent","alignItems","Typography","variant","paddingX","paddingY","Link","color","onClick","className","clear","_translations$clear","Divider","_items$length","maxHeight","overflow","FormControl","component","FormGroup","FormControlLabel","onChange","control","Checkbox","_value$includes","padding","minHeight","CircularProgress","_items$length2","TabUnselected","fontSize","MpFilterType","naked","width","Text","_filter$label","InputBase","placeholder","_translations$search","autoFocus","endAdornment","unitLabel","useStyles$g","theme","searchIcon","marginRight","spacing","SearchSelect","setSearchText","handleSearchText","startAdornment","Search","NumberInput","forwardRef","inputRef","props","replace","m","s","match","_s$match","_s$match$","Object","assign","inputMode","NumberRange","handleChangeMin","evVal","min","max","_translations$from","from","inputComponent","_value$max","handleChangeMax","to","_translations$to","toPercent","MpColumnFormat","MpColumnRender","parseInt","undefined","Math","round","number","toCurrency","options","toLocaleString","locale","modifier","style","currency","_value$toLocaleString","formatDate","moment","_ref$locale","d","format","formatDatetime","_ref2$locale","mapFormatter","_options$valueMap$val","_options$valueMap","valueMap","getRawValue","_item$rawValueKey","rawValueKey","_filterMap","_filterTypeMap","percent","date","dateTime","_formatMap","matchArray","columnIds","filterValue","find","original","filterMap","select","searchSelect","numberRange","MpTableFilter","overridables","filterType","_column$mpColumn","_column$mpColumn2","_column$mpColumn3","_column$mpColumn3$fil","FilterComponent","filters","_overridables$filters2","toVal","mix","k","y","str","clsx","tmp","x","getColumnAction","action","Error","params","rowId","slug","methods","methodsParams","selectedRows","selectedIds","selectedRowIds","useStyles$e","small","Button","rowMethods","size","icon","handleClick","stopPropagation","handleRowAction","IconButton","Icon","MUIButton","sizeSmall","Toggle","defaultValue","toggle","setToggle","newToggle","textColor","inner","ToggleButton","backgroundColor","ToggleButtonGroup","exclusive","mapToggles","Switch","iconLeft","iconRight","labelLeft","labelRight","innerRight","setChecked","handlePropagation","e","innerLeft","MUISwitch","useRendererOptions","cell","renderOptions","render","_renderOptions$styleM","_renderOptions$styleM2","_cell$value","styleMap","_renderOptions$valueM2","_cell$value2","columnId","columnIndex","index","inputProps","StatusPill","_useRendererOptions","createPalette","primary","main","getContrastText","textAlign","Chip","chipStyle","root","input","height","rendererMap","_rendererMap","statusPill","button","Input","onInputChange","inputValue","setInputValue","handleInputChange","getFooterValue","totalsData","_totalsData$key","noOpFilter","convertMpToColumn","disableSorting","_column$label","_column$filter","_column$filter2","col","Header","accessor","disableSortBy","sort","remote","_overridables$filterF","_overridables$filterF2","filterTypeMap","filterFunctions","totals","Footer","_overridables$rendere","_overridables$rendere2","Cell","renderers","useDataFormatters","data","columns","dataState","setDataState","formattedData","formattableColumns","reduce","acc","_format$type","formatMap","stateCopy","useStyles$c","_theme$palette","_theme$palette$text","wrapper","whiteSpace","position","disabledSort","palette","secondary","fixedWidth","minWidth","fixedColumnWidth","maxWidth","hoveredCellWithFilters","background","mode","darken","lighten","light","MpTableHeadCellOptions","anchorEl","canSort","onClose","isSortedDesc","doSorting","clearFiltersEvent","immediateValue","setFilter","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","headFilter","_excluded","MpTableHeadCell","_column$filterValue","_overrideClasses$hove","_clsx","_clsx2","_ref$variant","clearColumnFilters","overrideClasses","getSortByToggleProps","sortProps","_objectWithoutPropertiesLoose","_column$getSortByTogg","cellRef","isHovered","setIsHovered","hasWidth","_column$mpColumn4","fixedHeadWidth","isExtended","hasFilter","optionsAnchor","setOptionsAnchor","closeOptions","handleClearFilters","handleMouseLeave","filterSet","highlightCell","Fragment","TableCell","onMouseEnter","handleMouseEnter","onMouseLeave","headIndicator","isHoveredCell","hasClear","clearFilters","useStyles$b","parent","borderRadius","overflowX","borderTopLeftRadius","borderTopRightRadius","table","stickyTotalsWrapper","zIndex","renderedCell","paddingTop","paddingBottom","MpTableEmptyBody","cellCount","emptyChildren","loadingComponent","renderLoader","HourglassEmpty","renderChildren","TableRow","colSpan","useStyles$a","headSelectCell","paddingRight","borderRight","cellCheckbox","margin","MpTableHeadSelectCell","selection","handleCheck","headSelectCellCheckbox","MpTableHeadFilter","handleSubmit","onSubmit","SortByAlpha","flexGrow","useStyles$9","spacer","MpTablePaginator","pageIndex","previousPage","itemCount","nextPage","pageCount","pageSize","selectedCount","hasPrevious","hasNext","infoText","_translations$total","_translations$selecte","total","selected","join","of","_translations$of","Tooltip","title","disabled","ChevronLeft","_translations$nextPag","ChevronRight","Filter","SvgIcon","viewBox","fill","FilterArrowDown","FilterArrowUp","FilterOutline","iconWrapper","clearIcon","contrastText","left","MpTableHeadIndicator","handleClearClick","ArrowDropDown","ArrowDropUp","Clear","ExpandMore","useStyles$7","transition","transitions","create","duration","complex","iconSpacer","menuPaper","marginTop","menuItem","overlay","itemDivider","borderBottom","marginLeft","noBorder","MpTableBulkActions","actions","hasSelectedRows","setOpen","anchorRef","handleToggle","prevOpen","handleClose","_anchorRef$current","contains","handleListKeyDown","handleBulkAction","actionsMap","MenuItem","Close","Menu","Popper","role","disablePortal","TransitionProps","Grow","placement","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","disablePadding","onGlobalFilter","handleGlobalFilter","TextField","InputProps","BreadcrumbFilterDown","xmlns","BreadcrumbSeparator","stroke","strokeWidth","strokeLinecap","getNestedElementsMapReduce","entries","accumulator","_selection$key","filteredValue","breadcrumb","_selection$key2","BreadcrumbList","_translations$breadcr5","_translations$breadcr6","selectedKey","selectedId","breadcrumbMap","ListItem","_translations$breadcr","_translations$breadcr2","_onMouseEnter","breadcrumbs","_translations$breadcr4","Grid","List","useStyles$5","dropdownIconRoot","seperator","pointer","MpTableBreadcrumb","_globalFilters$breadc","setSelection","setBreadcrumbs","containerRef","_useState4","setAnchorEl","popoverId","updateNestedElements","handleBreadcrumbHover","itemKeys","keys","itemEntries","selectionDepth","_breadcrumbs$selected","_selectedPath","selectionObject","selectedPath","prevSelectedObject","_breadcrumbs$key","_itemEntries$i","selectionKeys","_extends3","_extends4","_breadcrumbs$selected2","handleBreadcrumbClick","isLastClick","slicedArray","selectionEntries","slicedObject","fromEntries","_Object$keys","breadcrumbGridMap","gridItems","_i","_entries","push","_entries$_i","breadcrumbSelectionMap","_translations$all","lastItem","breadcrumbItems","all","_loop","_entries2$_i","_entries2","_i2","Breadcrumbs","separator","PaperProps","container","MpTableGlobalActions","breadcrumbFilterData","MpTableGlobalFilter","paginator","globalActions","footer","boxShadow","raised","paper","shadows","win","window","MpTableStickyTotalsFooter","children","bodyRef","useLayoutEffect","timeout","transformValue","update","_bodyRef$current$getB","_bodyRef$current","_ref$current$offsetHe","_ref$current","getBoundingClientRect","bottom","innerHeight","offsetHeight","transform","calculatedTransform","classList","add","remove","queuedUpdate","addEventListener","triggerUpdate","removeEventListener","TableFooter","totalsSelectCell","MpTableTotals","footerGroups","hasSelection","stickyTotals","handleFixedWidth","cellWidth","groups","group","getFooterGroupProps","headers","getFooterProps","useStyles$2","selectCell","MpTableSelectCell","toggleAllRowsSelected","getToggleRowSelectedProps","toggleRowSelected","selectCellCheckbox","useStyles$1","highlightedPrimary","highlightedSecondary","highlightedInactive","_overrideClasses$row","_overrideClasses$high","_overrideClasses$high2","_overrideClasses$high3","_overrideClasses$rowS","onRowClick","useRowHighlights","highlights","inactive","_useRowHighlights","handleRowClick","_cell$column$mpColumn","getRowProps","rowSelected","isSelected","cells","getCellProps","getFromStorage","storage","localStorage","raw","getItem","JSON","parse","console","warn","useStorage","setItem","stringify","useStoredState","_useStorage","cache","setCache","tuple","emptyData","MpTable","mpColumns","onGetData","dataCount","storageIdentifier","cacheFilters","cacheSorting","cacheGlobalFilter","filterVariant","_ref$filterVariant","localPagination","_ref$localPagination","localSorting","_ref$localSorting","_ref$localFiltering","_ref$pageSize","partialOverridables","rowIdKey","bulkActions","bulkMethods","_ref$clearColumnFilte","disablePagination","enableGlobalActions","onEdit","onRowsSelected","_ref$resetSelectedRow","resetSelectedRows","useRemoteFilters","ceil","filtersCache","setFiltersCache","_useStorage2","sortingCache","setSortingCache","setGlobalFiltersCache","_useGlobalFilters","initialState","sortBy","defaultOverridables","useOverridables","_useDataFormatters","tableOptions","manualPagination","manualSortBy","manualFilters","autoResetFilters","remoteFiltersColumns","getRowId","autoResetPage","autoResetSelectedRows","useTable","useFilters","useSortBy","usePagination","useRowSelect","getTableProps","tableInstance","getTableBodyProps","headerGroups","page","prepareRow","gotoPage","getToggleAllRowsSelectedProps","selectedFlatRows","setAllFilters","state","dataArguments","useDataArguments","visibleColumns","hybridFilterCache","_state$filters","_state$filters$filter","hybridFilters","a","b","globalFilterData","limit","rule","desc","forEach","opacity","meta","Provider","tableWrapper","Table","TableHead","headerGroup","getHeaderGroupProps","getHeaderProps","TableBody","bodyStyle","MpTableRow","getMonths","year","q1","q2","q3","q4","getQuarters","months","endItem","overflowY","scrollbarWidth","arrow","right","top","noPadding","typography","fullWidth","listItem","fontWeight","border","borderTop","borderLeft","iconContainer","active","header","headerAction","Check","MpDatepickerItem","isActive","disableRipple","_translations$allTime","onSelectAll","FromToFilter","filterProps","isFromTo","setIsFromTo","switchView","allTime","DatepickerArrowDown","DatepickerArrowUp","MpDatepickerArrow","Arrow","MpDatepicker","useDatepicker","_useStoredState","setDate","_useStoredState2","dateFilter","setDateFilter","_useStoredState3","dateFrom","setDateFrom","_useStoredState4","dateTo","setDateTo","parseQuarter","quarterString","quarterNum","Number","charAt","substr","quarter","startOf","toISOString","endOf","parseYear","yearString","parseMonth","monthString","parseDate","dateString","setDatepickerValues","callback","_parseDate","dateToLabel","_parseDate2","dateFromLabel","handleFilterClick","clearSelected","_useDatepicker","defaultData","stringifiedYear","toString","quarters","onFilter","onDateChange","togglePopper","currentTarget","handleDatepickerClick","handleSelectAll","Fade","elevation","MpDatepickerHeader","useClearFilters","setEmptyInstance"],"mappings":"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"}