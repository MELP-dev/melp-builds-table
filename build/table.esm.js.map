{"version":3,"file":"table.esm.js","sources":["../../lib/src/utils/Debounce/Debounce.ts","../../lib/src/utils/MetaContext/MetaContext.ts","../../lib/src/utils/Filter/Filter.ts","../../lib/src/filters/Select/Select.styles.ts","../../lib/src/filters/Select/Select.tsx","../../lib/src/filters/Text/Text.styles.ts","../../lib/src/types/Filter.ts","../../lib/src/filters/Text/Text.tsx","../../lib/src/filters/SearchSelect/SearchSelect.styles.ts","../../lib/src/filters/SearchSelect/SearchSelect.tsx","../../lib/src/filters/NumberRange/NumberRange.styles.ts","../../lib/src/filters/NumberRange/NumberRange.tsx","../../lib/src/formats/Numbers/Numbers.ts","../../lib/src/formats/Currency/Currency.ts","../../lib/src/formats/Date/Date.ts","../../lib/src/types/Table.ts","../../lib/src/formats/Map/Map.ts","../../lib/src/formats/Formats.ts","../../lib/src/filters/Filters.ts","../../lib/src/components/MpTableFilter/MpTableFilter.tsx","../../lib/node_modules/clsx/dist/clsx.m.js","../../lib/src/utils/Actions/Actions.ts","../../lib/src/renderers/actions/Button/Button.styles.ts","../../lib/src/renderers/actions/Button/Button.tsx","../../lib/src/renderers/actions/Toggle/Toggle.tsx","../../lib/src/renderers/actions/Switch/Switch.tsx","../../lib/src/utils/Renderer/Renderer.ts","../../lib/src/renderers/StatusPill/StatusPill.tsx","../../lib/src/renderers/Input/Input.styles.ts","../../lib/src/renderers/Renderers.ts","../../lib/src/renderers/Input/Input.tsx","../../lib/src/utils/ColumnAdapter/ColumnAdapter.ts","../../lib/src/utils/DataFormatter/DataFormatter.ts","../../lib/src/components/MpTableHeadCell/MpTableHeadCell.styles.ts","../../lib/src/components/MpTableHeadCellOptions/MpTableHeadCellOptions.tsx","../../lib/src/components/MpTableHeadCell/MpTableHeadCell.tsx","../../lib/src/components/MpTable/MpTable.styles.ts","../../lib/src/components/MpTableEmptyBody/MpTableEmptyBody.tsx","../../lib/src/components/MpTableHeadSelectCell/MpTableHeadSelectCell.styles.ts","../../lib/src/components/MpTableHeadSelectCell/MpTableHeadSelectCell.tsx","../../lib/src/overridables/MpTableHeadFilter/MpTableHeadFilter.tsx","../../lib/src/overridables/MpTablePaginator/MpTablePaginator.styles.ts","../../lib/src/overridables/MpTablePaginator/MpTablePaginator.tsx","../../lib/src/icons/Filter.tsx","../../lib/src/icons/FilterArrowDown.tsx","../../lib/src/icons/FilterArrowUp.tsx","../../lib/src/icons/FilterOutline.tsx","../../lib/src/overridables/MpTableHeadIndicator/MpTableHeadIndicator.styles.ts","../../lib/src/overridables/MpTableHeadIndicator/MpTableHeadIndicator.tsx","../../lib/src/overridables/MpTableGlobalActions/MpTableGlobalActions.styles.ts","../../lib/src/components/MpTableBulkActions/MpTableBulkActions.styles.ts","../../lib/src/components/MpTableBulkActions/MpTableBulkActions.tsx","../../lib/src/components/MpTableGlobalFilter/MpTableGlobalFilter.tsx","../../lib/src/icons/BreadcrumbFilterDown.tsx","../../lib/src/icons/BreadcrumbSeparator.tsx","../../lib/src/utils/Breadcrumbs/Breadcrumbs.ts","../../lib/src/components/MpTableBreadcrumb/BreadcrumbList.tsx","../../lib/src/components/MpTableBreadcrumb/MpTableBreadcrumb.styles.ts","../../lib/src/components/MpTableBreadcrumb/MpTableBreadcrumb.tsx","../../lib/src/overridables/MpTableGlobalActions/MpTableGlobalActions.tsx","../../lib/src/overridables/Overridables.ts","../../lib/src/components/MpTableStickyTotalsFooter/MpTableStickyTotalsFooter.styles.ts","../../lib/src/components/MpTableStickyTotalsFooter/MpTableStickyTotalsFooter.tsx","../../lib/src/components/MpTableTotals/MpTableTotals.styles.ts","../../lib/src/components/MpTableTotals/MpTableTotals.tsx","../../lib/src/components/MpTableSelectCell/MpTableSelectCell.styles.ts","../../lib/src/components/MpTableSelectCell/MpTableSelectCell.tsx","../../lib/src/components/MpTableRow/MpTableRow.styles.ts","../../lib/src/components/MpTableRow/MpTableRow.tsx","../../lib/src/utils/Highlights/Highlights.ts","../../lib/src/utils/Storage/Storage.ts","../../lib/src/components/MpTable/MpTable.tsx","../../lib/src/utils/Overridables/Overridables.ts","../../lib/src/utils/DataArguments/DataArguments.ts","../../lib/src/utils/Datepicker/Datepicker.ts","../../lib/src/components/MpDatepicker/MpDatepicker.styles.ts","../../lib/src/icons/Check.tsx","../../lib/src/components/MpDatepicker/MpDatepickerItem.tsx","../../lib/src/components/MpDatepicker/MpDatepickerHeader.tsx","../../lib/src/icons/DatepickerArrowDown.tsx","../../lib/src/icons/DatepickerArrowUp.tsx","../../lib/src/components/MpDatepicker/MpDatepickerArrow.tsx","../../lib/src/components/MpDatepicker/MpDatepicker.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\n\nexport function useDebounce(ms: number = 500) {\n  const handle = useRef<number | null>(null);\n\n  const debounce = useCallback(\n    (cb: Function, ...args: any[]) => {\n      if (handle.current) {\n        clearTimeout(handle.current);\n      }\n      handle.current = setTimeout(cb, ms, ...args);\n    },\n    [ms]\n  );\n\n  return debounce;\n}\n\nexport function useUnmounted() {\n  const ref = useRef<boolean>(false);\n  useEffect(\n    () => () => {\n      ref.current = true;\n    },\n    []\n  );\n  return ref;\n}\n","import { createContext } from \"react\";\nimport { Meta } from \"../../types/Meta\";\n\nexport const MetaContext = createContext({} as Meta);\n","import {\n  MpGlobalFilter,\n  MpGlobalFilters,\n  MpUseGlobalFilters,\n} from \"./../../types/Filter\";\nimport {\n  Dispatch,\n  MutableRefObject,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Row } from \"react-table\";\nimport { MpFilter, MpFilterItem } from \"../../types/Filter\";\nimport {\n  MpAsyncGetMethod,\n  MpColumn,\n  RtMpColumnInstance,\n} from \"../../types/Table\";\nimport { useDebounce, useUnmounted } from \"../Debounce/Debounce\";\nimport { MetaContext } from \"../MetaContext/MetaContext\";\n\nexport function useFilterOptions({ filter }: MpColumn): MpFilter | undefined {\n  return useMemo(\n    () => (typeof filter === \"string\" ? { type: filter } : filter),\n    [filter]\n  );\n}\n\nconst getAvailableValues = (rows: Row<{}>[], key: string): string[] =>\n  rows\n    .map((row) => row.values[key])\n    .filter((val, i, arr) => arr.indexOf(val) === i);\n\nconst executeMethod = (\n  method: MpAsyncGetMethod,\n  search: string,\n  resultSetter: Dispatch<SetStateAction<MpFilterItem[]>>,\n  loadingSetter: Dispatch<SetStateAction<boolean>>,\n  latestRequest: MutableRefObject<number | null>,\n  unmounted: MutableRefObject<boolean>,\n  filterItems?: MpFilterItem[]\n) => {\n  const request = Date.now();\n  latestRequest.current = request;\n  loadingSetter(true);\n  method({ search }).then((result: any) => {\n    if (latestRequest.current === request && !unmounted.current) {\n      loadingSetter(false);\n      if (Array.isArray(result)) {\n        resultSetter([...(filterItems ?? []), ...(result ?? [])]);\n      }\n    }\n  });\n};\n\nexport function useFilterItems(\n  column: RtMpColumnInstance,\n  filter?: MpFilter\n): {\n  loading?: boolean;\n  items?: MpFilterItem[];\n  getItems(search?: string): void;\n} {\n  const { asyncGetMethods, localFiltering } = useContext(MetaContext);\n  const { preFilteredRows, id } = column;\n  const unmounted = useUnmounted();\n  const [items, setItems] = useState<MpFilterItem[]>();\n  const [loading, setLoading] = useState<boolean>(\n    !localFiltering &&\n      filter?.asyncGet != null &&\n      typeof asyncGetMethods?.[filter.asyncGet] === \"function\"\n  );\n  const latestRequest = useRef<number | null>(null);\n  const debounce = useDebounce(500);\n\n  const getItems = useCallback(\n    (searchText?: string) => {\n      if (localFiltering && (filter?.items?.length ?? 0) < 1) {\n        const localItems = getAvailableValues(preFilteredRows, id)\n          .filter((item) =>\n            searchText != null && searchText !== \"\"\n              ? (item + \"\").toLowerCase().indexOf(searchText.toLowerCase()) !==\n                -1\n              : true\n          )\n          .map(\n            (text: string): MpFilterItem => ({\n              value: text,\n              label: text,\n            })\n          );\n        setItems(localItems);\n      } else if (localFiltering && (filter?.items?.length ?? 0) > 0) {\n        setItems(filter?.items);\n      } else if (\n        filter?.asyncGet != null &&\n        typeof asyncGetMethods?.[filter.asyncGet] === \"function\"\n      ) {\n        debounce(\n          executeMethod,\n          asyncGetMethods?.[filter.asyncGet],\n          searchText,\n          setItems,\n          setLoading,\n          latestRequest,\n          unmounted,\n          filter.items\n        );\n      }\n    },\n    [\n      asyncGetMethods,\n      filter?.asyncGet,\n      filter?.items,\n      id,\n      setLoading,\n      localFiltering,\n      preFilteredRows,\n      debounce,\n      unmounted,\n      latestRequest,\n    ]\n  );\n\n  return useMemo(\n    () => ({\n      items,\n      getItems,\n      loading,\n    }),\n    [items, getItems, loading]\n  );\n}\n\nexport const useGlobalFilters = (\n  initialValue: MpGlobalFilters | undefined\n): MpUseGlobalFilters => {\n  const [globalFilters, setGlobalFilters] = useState<\n    MpGlobalFilters | undefined\n  >(initialValue);\n\n  const handleSetGlobalFilter = useCallback((filter: MpGlobalFilter) => {\n    setGlobalFilters((prevState) => {\n      if (!!prevState)\n        return {\n          ...prevState,\n          [filter.key]: filter.value,\n        };\n\n      return { [filter.key]: filter.value };\n    });\n  }, []);\n\n  return useMemo(\n    () => [\n      globalFilters as MpGlobalFilters,\n      { setGlobalFilters: handleSetGlobalFilter },\n    ],\n    [globalFilters, handleSetGlobalFilter]\n  );\n};\n\nexport const useRemoteFilters = (mpColumns: MpColumn[]): MpColumn[] => {\n  return useMemo(() => {\n    return mpColumns.filter((column) => {\n      return typeof column.filter !== \"string\" && column.filter?.remote;\n    });\n  }, [mpColumns]);\n};\n\nexport function useClearFilters() {\n  const [emptyInstance, setEmptyInstance] = useState<string[] | undefined>(\n    undefined\n  );\n  const clearFilters = useCallback(\n    (filters?: string[]) => setEmptyInstance(filters ?? []),\n    []\n  );\n\n  return { clearFiltersEvent: emptyInstance, clearFilters };\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import {\n  Box,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport { TabUnselected } from \"@mui/icons-material\";\nimport React, { MouseEvent, useCallback, useContext, useEffect } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterItems, useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./Select.styles\";\n\nconst empty: any[] = [];\n\nexport default function Select({\n  column,\n  value = empty,\n  setValue,\n  doFiltering,\n}: MpFilterProps) {\n  const { mpColumn } = column;\n  const { translations } = useContext(MetaContext);\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { loading, items, getItems } = useFilterItems(column, filter);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.checked) {\n        if (!value?.includes(event.target.name)) {\n          setValue([...(value ?? []), event.target.name]);\n        }\n      } else {\n        setValue(value?.filter((val: any) => val !== event.target.name));\n      }\n    },\n    [setValue, value]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  useEffect(() => {\n    getItems();\n  }, [getItems]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      {!loading && (items?.length ?? 0) > 0 && (\n        <Box paddingX={2} paddingY={1} maxHeight={300} overflow=\"auto\">\n          <FormControl component=\"fieldset\" color=\"primary\">\n            <FormGroup>\n              {items?.map((item, i) => (\n                <FormControlLabel\n                  key={i}\n                  onChange={handleChange}\n                  name={item.value + \"\"}\n                  control={\n                    <Checkbox\n                      color=\"primary\"\n                      checked={value?.includes(item.value + \"\") ?? false}\n                    />\n                  }\n                  label={item.label}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Box>\n      )}\n      {loading && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n      {!loading && (items?.length ?? 0) < 1 && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <TabUnselected fontSize=\"large\" color=\"disabled\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import { Dispatch, SetStateAction } from \"react\";\nimport { Row } from \"react-table\";\nimport { RtMpColumnInstance } from \"./Table\";\n\nexport enum MpFilterType {\n  text = \"text\",\n  select = \"select\",\n  searchSelect = \"searchSelect\",\n  numberRange = \"numberRange\",\n}\n\nexport type FilterFunction = (\n  rows: Row[],\n  columnIds: string[],\n  filterValue: any\n) => Row[];\n\nexport interface MpFilterItem {\n  // Value of the filter item\n  value: string | number | boolean;\n  // User-readable label for the item\n  label: string;\n}\n\nexport interface MpFilter {\n  // Get/Set filter value using the key\n  key?: string;\n  // Type of the filter\n  type: MpFilterType;\n  // (Optional) Display title of the filter\n  label?: string;\n  // Placeholder\n  placeholder?: string;\n  // (Optional) Display unit in an input adornment\n  unitLabel?: string;\n  // (Optional) Override the items available in the filter\n  items?: MpFilterItem[];\n  // (Optional) Async Get Method key\n  asyncGet?: string;\n  // Format (i.e date, number, etc.)\n  format?: string;\n  // Locale override\n  locale?: string;\n  // Separate from localFiltering\n  remote?: boolean;\n}\n\nexport interface MpFilterProps {\n  column: RtMpColumnInstance;\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n  doFiltering(immediateValue?: any): void;\n}\n\nexport interface MpGlobalFilter {\n  key: string;\n  value: any;\n}\n\nexport interface MpGlobalFilters {\n  [key: string]: any;\n}\n\nexport type MpUseGlobalFilters = [\n  MpGlobalFilters,\n  { setGlobalFilters: (filter: MpGlobalFilter) => void }\n];\n\nexport interface MpBreadcrumbFilterData {\n  id?: string;\n  name?: string;\n  [key: string]: MpBreadcrumbFilterData[] | string | undefined;\n}\n","import { Box, Divider, InputBase, Link, Typography } from \"@mui/material\";\nimport React, { MouseEvent, useCallback, useContext } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./Text.styles\";\n\nexport default function Text({\n  value,\n  setValue,\n  doFiltering,\n  column: { mpColumn },\n}: MpFilterProps) {\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { translations } = useContext(MetaContext);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      setValue(evVal);\n    },\n    [setValue]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value ?? \"\"}\n          onChange={handleChange}\n          placeholder={translations?.search ?? \"Search\"}\n          autoFocus={true}\n          className={classes.naked}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n  searchIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n","import {\n  Box,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputBase,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport { Search, TabUnselected } from \"@mui/icons-material\";\nimport React, {\n  MouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterItems, useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./SearchSelect.styles\";\n\nconst empty: any[] = [];\n\nexport default function SearchSelect({\n  column,\n  value = empty,\n  setValue,\n  doFiltering,\n}: MpFilterProps) {\n  const { mpColumn } = column;\n  const { translations } = useContext(MetaContext);\n  const [searchText, setSearchText] = useState<string>();\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { loading, items, getItems } = useFilterItems(column, filter);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.checked) {\n        if (!value?.includes(event.target.name)) {\n          setValue([...(value ?? []), event.target.name]);\n        }\n      } else {\n        setValue(value?.filter((val: any) => val !== event.target.name));\n      }\n    },\n    [setValue, value]\n  );\n\n  const handleSearchText = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchText(event.target.value);\n    },\n    [setSearchText]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  useEffect(() => {\n    getItems(searchText);\n  }, [getItems, searchText]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          startAdornment={\n            <Search className={classes.searchIcon} color=\"action\" />\n          }\n          value={searchText ?? \"\"}\n          onChange={handleSearchText}\n          placeholder={translations?.search ?? \"Search\"}\n          autoFocus={true}\n          className={classes.naked}\n        />\n      </Box>\n      <Divider />\n      {!loading && (items?.length ?? 0) > 0 && (\n        <Box paddingX={2} paddingY={1} maxHeight={300} overflow=\"auto\">\n          <FormControl component=\"fieldset\" color=\"primary\">\n            <FormGroup>\n              {items?.map((item, i) => (\n                <FormControlLabel\n                  key={i}\n                  onChange={handleChange}\n                  name={item.value + \"\"}\n                  control={\n                    <Checkbox\n                      color=\"primary\"\n                      checked={value?.includes(item.value + \"\") ?? false}\n                    />\n                  }\n                  label={item.label}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Box>\n      )}\n      {loading && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n      {!loading && (items?.length ?? 0) < 1 && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <TabUnselected fontSize=\"large\" color=\"disabled\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import {\n  Box,\n  Divider,\n  InputBase,\n  InputBaseComponentProps,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport React, { forwardRef, MouseEvent, useCallback, useContext } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./NumberRange.styles\";\n\nconst NumberInput = forwardRef<HTMLInputElement>(\n  ({ onChange, inputRef, ...props }: InputBaseComponentProps, ref) => {\n    const handleChange = useCallback(\n      (event: React.ChangeEvent<HTMLInputElement>) => {\n        let val = event.target.value;\n        // Allow only leading -\n        val = val.replace(/-/g, (m, i) => (i > 0 ? \"\" : m));\n        // Remove additional . or ,\n        val = val.replace(/[.,]/g, (m, i: number, s: string) =>\n          s.indexOf(s.match(/[.,]/g)?.[0] ?? \".\") !== i || i === 0 ? \"\" : m\n        );\n        // Leave only numbers and . , -\n        val = val.replace(/[^\\d.,-]/g, \"\");\n        // Write to event\n        event.target.value = val;\n        if (typeof onChange === \"function\") {\n          onChange(event);\n        }\n      },\n      [onChange]\n    );\n    return (\n      <input\n        ref={ref ?? inputRef}\n        {...props}\n        onChange={handleChange}\n        inputMode=\"decimal\"\n      />\n    );\n  }\n);\n\nexport default function NumberRange({\n  value,\n  setValue,\n  doFiltering,\n  column: { mpColumn },\n}: MpFilterProps) {\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { translations } = useContext(MetaContext);\n\n  const handleChangeMin = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      if (evVal != null && evVal !== \"\") {\n        setValue((val: any) => ({ ...(val ?? {}), min: evVal }));\n      } else {\n        setValue((val: any) =>\n          val?.max != null && val?.max !== \"\" ? { max: val?.max } : null\n        );\n      }\n    },\n    [setValue]\n  );\n\n  const handleChangeMax = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      if (evVal != null && evVal !== \"\") {\n        setValue((val: any) => ({ ...(val ?? {}), max: evVal }));\n      } else {\n        setValue((val: any) =>\n          val?.min != null && val?.min !== \"\" ? { min: val?.min } : null\n        );\n      }\n    },\n    [setValue]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value?.min ?? \"\"}\n          onChange={handleChangeMin}\n          placeholder={translations?.from ?? \"From\"}\n          autoFocus={true}\n          className={classes.naked}\n          inputComponent={NumberInput}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value?.max ?? \"\"}\n          onChange={handleChangeMax}\n          placeholder={translations?.to ?? \"To\"}\n          className={classes.naked}\n          inputComponent={NumberInput}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const toPercent: MpColumnFormatter = ({ value }) => {\n  const number: number =\n    typeof value === \"string\" ? parseInt(value, 10) : value;\n\n  return value !== undefined ? `${Math.round(number * 100)}%` : null;\n};\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const toCurrency: MpColumnFormatter = ({ value, locale, options }) => {\n  return (\n    value?.toLocaleString(\n      locale,\n      !!options?.modifier\n        ? { style: \"currency\", currency: options?.modifier }\n        : undefined\n    ) ?? null\n  );\n};\n","import moment from \"moment\";\nimport \"moment/min/locales\";\nimport { MpColumnFormatter } from \"../../types/Table\";\n\nexport const formatDate: MpColumnFormatter = ({\n  value,\n  locale = \"en\",\n  options,\n}) => {\n  moment.locale(locale);\n\n  const d = new Date(value);\n  const m = moment(d);\n\n  return m.format(\"L\" || options?.modifier);\n};\n\nexport const formatDatetime: MpColumnFormatter = ({\n  value,\n  locale = \"en\",\n  options,\n}) => {\n  moment.locale(locale);\n\n  const d = new Date(value);\n  const m = moment(d);\n\n  return `${formatDate({ value, locale, options })} ${m.format(\n    \"LT\" || options?.modifier\n  )}`;\n};\n","import { InputBaseProps } from \"@mui/material\";\nimport {\n  ColumnInstance,\n  DefaultFilterTypes,\n  Row,\n  UseFiltersColumnProps,\n  UseRowSelectRowProps,\n  UseSortByColumnProps,\n} from \"react-table\";\nimport {\n  MpBulkActionMethods,\n  MpActions,\n  MpRowActionMethods,\n  MpRowAction,\n} from \"./Actions\";\nimport {\n  MpBreadcrumbFilterData,\n  MpFilter,\n  MpFilterType,\n  MpGlobalFilters,\n} from \"./Filter\";\nimport { MpTableOverridablesMap } from \"./Overridables\";\n\nexport enum MpColumnFormat {\n  currency = \"currency\",\n  percent = \"percent\",\n  date = \"date\",\n  dateTime = \"dateTime\",\n  map = \"map\",\n}\n\nexport interface MpColumnFormatOptions {\n  type: MpColumnFormat;\n  // (Optional) Map values for rendering\n  valueMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n  modifier?: string;\n}\n\nexport enum MpColumnRender {\n  statusPill = \"statusPill\",\n  toggle = \"toggle\",\n  switch = \"switch\",\n  button = \"button\",\n  input = \"input\",\n}\n\nexport interface MpColumnRenderOptions {\n  type: MpColumnRender;\n  // (Optional) Map values for rendering\n  valueMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n  // (Optional) Map values for rendering\n  styleMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n}\n\nexport interface RtMpColumnInstance\n  extends ColumnInstance,\n    UseSortByColumnProps<{}>,\n    UseFiltersColumnProps<{}> {\n  mpColumn: MpColumn;\n}\n\nexport interface MpColumn {\n  // Get value from the row using the key\n  key: string;\n  // Display value in the head cell\n  label?: string;\n  // (Optional) Filter type\n  filter?: MpFilterType | MpFilter;\n  // (Optional) Override footer enabled\n  totals?: boolean;\n  // (Optional) Override enable/disable sorting\n  sort?: boolean;\n  // (Optional) Format data before passing to the table\n  format?: MpColumnFormat | MpColumnFormatOptions;\n  // (Optional) Custom cell render type\n  render?: MpColumnRender | MpColumnRenderOptions;\n  // (Optional) Specify column action. If specified, no data is shown\n  action?: MpRowAction;\n  // (Optional) Input props that will be assigned to to the TextField component if field is being used\n  inputProps?: Omit<\n    InputBaseProps,\n    \"inputComponent\" | \"inputRef\" | \"onBlur\" | \"onChange\"\n  >;\n  // (Optional) Set fixed column width\n  width?: number | string;\n  // (Optional) Set fixed column width to head column\n  fixedHeadWidth?: boolean;\n}\n\nexport interface MpTableType {\n  // Array of MpColumns\n  columns: MpColumn[];\n  // Row identifier key\n  rowIdKey: string;\n  // Unique table identifier to use with storage caching\n  storageIdentifier?: string;\n  // Cache filters in local storage\n  cacheFilters?: boolean;\n  // Cache sorting in local storage\n  cacheSorting?: boolean;\n  // Cache global filter in local storage\n  cacheGlobalFilter?: boolean;\n  // Paginate locally\n  localPagination?: boolean;\n  // Sort locally\n  localSorting?: boolean;\n  // Filter locally\n  localFiltering?: boolean;\n  // Disable pagination\n  disablePagination?: boolean;\n  // Disable sorting\n  disableSorting?: boolean;\n  // Enable global actions\n  enableGlobalActions?: boolean;\n  // Selection\n  selection?: \"single\" | \"multiple\";\n  // Footer\n  totals?: boolean;\n  // Sticky footer - HIC SUNT DRACONES !!!\n  stickyTotals?: boolean;\n  // Number of rows per page\n  pageSize?: number;\n  // Conndensed or regular spacing\n  size?: \"small\" | \"medium\";\n  // Where do display filters\n  filterVariant?: \"head\" | \"pill\";\n  // Bulk actions\n  bulkActions?: MpActions;\n  // For values formatters\n  locale?: string;\n  // Highlight rows based on the boolean value of these fields\n  highlights?: MpTableHighlights;\n  // Clear column filters from head cell\n  clearColumnFilters?: boolean;\n}\n\nexport interface MpTableHighlights {\n  inactive?: string;\n  primary?: string;\n  secondary?: string;\n}\n\nexport interface MpSortRule {\n  // Sort using this key\n  key: string;\n  // Ascending if falsy, descending if true\n  desc?: boolean;\n}\n\nexport interface MpTableDataArguments {\n  // Number of items to take\n  limit?: number;\n  // Start from this item (cursor / item index /etc.)\n  cursor?: number;\n  // Fetch only the columns that are visible\n  columns: string[];\n  // Sorting rules (can be multiple)\n  sort?: MpSortRule[];\n  // Filters object\n  filters?: Record<string, any>;\n  // Global filter value\n  globalFilters?: MpGlobalFilters;\n}\n\nexport type OnGetData = (args: MpTableDataArguments) => void;\n\nexport interface MpTableProps<ItemType = any>\n  extends MpTableType,\n    MpTableInputProps<ItemType> {}\n\ninterface MpAsyncGetMethodArguments {\n  search?: string;\n}\n\nexport type MpAsyncGetMethod = (\n  options?: MpAsyncGetMethodArguments\n) => Promise<any>;\n\nexport interface MpTableInputProps<ItemType = any> {\n  data?: ItemType[];\n  onGetData: OnGetData;\n  totalsData?: Partial<Record<keyof ItemType, string>>;\n  loading?: boolean;\n  dataCount?: number;\n  classes?: MpTableClasses;\n  translations?: MpTableTranslations;\n  overridables?: Partial<MpTableOverridablesMap>;\n  bulkMethods?: MpBulkActionMethods;\n  rowMethods?: MpRowActionMethods;\n  asyncGetMethods?: Record<string, MpAsyncGetMethod>;\n  onRowClick?: (row?: Row & UseRowSelectRowProps<{}>) => void;\n  breadcrumbFilterData?: MpBreadcrumbFilterData;\n  onEdit?: (data: ItemType[]) => void;\n  onRowsSelected?: (selectedRows: Array<Row<{}>>) => void;\n  emptyChildren?: React.ReactNode;\n  loadingComponent?: React.ReactNode;\n  clearFiltersEvent?: string[];\n  resetSelectedRows?: boolean;\n}\n\nexport interface MpTableClasses {\n  tableWrapper?: string;\n  table?: string;\n  headSelectCellCheckbox?: string;\n  headSelectCell?: string;\n  selectCell?: string;\n  selectCellCheckbox?: string;\n  totalsSelectCell?: string;\n  highlightedInactive?: string;\n  highlightedPrimary?: string;\n  highlightedSecondary?: string;\n  row?: string;\n  rowSelected?: string;\n  hoveredCellWithFilters?: string;\n}\n\nexport interface MpTableTranslations {\n  of?: string;\n  total?: string;\n  previousPage?: string;\n  nextPage?: string;\n  selected?: string;\n  actions?: string;\n  from?: string;\n  to?: string;\n  all?: string;\n  clear?: string;\n  search?: string;\n  allTime?: string;\n  breadcrumbs?: { [key: string]: string | undefined };\n}\n\nexport type MpFilterTypes = DefaultFilterTypes;\n\nexport type MpColumnFormatter = (params: {\n  value: any;\n  locale?: string;\n  options?: MpColumnFormatOptions;\n}) => string | number | null;\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const mapFormatter: MpColumnFormatter = ({ value, options }) => {\n  return options?.valueMap?.[value] ?? value;\n};\n","import { toPercent } from \"./Numbers/Numbers\";\nimport { toCurrency } from \"./Currency/Currency\";\nimport { formatDate, formatDatetime } from \"./Date/Date\";\nimport { MpColumnFormat, MpColumnFormatter } from \"./../types/Table\";\nimport { mapFormatter } from \"./Map/Map\";\n\nexport function rawValueKey(key: string) {\n  return `__raw_${key}`;\n}\n\nexport function getRawValue(item: any, key: string) {\n  return item[rawValueKey(key)] ?? item[key];\n}\n\nexport const formatMap: Record<MpColumnFormat, MpColumnFormatter> = {\n  [MpColumnFormat.currency]: toCurrency,\n  [MpColumnFormat.percent]: toPercent,\n  [MpColumnFormat.date]: formatDate,\n  [MpColumnFormat.dateTime]: formatDatetime,\n  [MpColumnFormat.map]: mapFormatter,\n};\n","import { ComponentType } from \"react\";\nimport { MpFilterTypes } from \"../types/Table\";\nimport Select from \"./Select/Select\";\nimport Text from \"./Text/Text\";\nimport { FilterFunction, MpFilterProps, MpFilterType } from \"../types/Filter\";\nimport SearchSelect from \"./SearchSelect/SearchSelect\";\nimport NumberRange from \"./NumberRange/NumberRange\";\nimport { getRawValue } from \"../formats/Formats\";\n\nconst matchArray: FilterFunction = (rows, columnIds, filterValue) => {\n  if (!Array.isArray(filterValue) || filterValue.length < 1) {\n    return rows;\n  } else {\n    return rows.filter(\n      (row) =>\n        !!columnIds.find((id) =>\n          filterValue.includes(getRawValue(row.original, id))\n        )\n    );\n  }\n};\n\nconst matchRange: FilterFunction = (rows, columnIds, filterValue) => {\n  if (filterValue == null || typeof filterValue !== \"object\") {\n    return rows;\n  }\n  return rows.filter(\n    (row) =>\n      !!columnIds.find((id) => {\n        if (\n          filterValue?.min != null &&\n          filterValue?.min !== \"\" &&\n          +getRawValue(row.original, id) < +filterValue?.min\n        ) {\n          return false;\n        } else if (\n          filterValue?.max != null &&\n          filterValue?.max !== \"\" &&\n          +getRawValue(row.original, id) > +filterValue?.max\n        ) {\n          return false;\n        }\n        return true;\n      })\n  );\n};\n\nexport const filterMap: Record<MpFilterType, ComponentType<MpFilterProps>> = {\n  [MpFilterType.select]: Select,\n  [MpFilterType.searchSelect]: SearchSelect,\n  [MpFilterType.text]: Text,\n  [MpFilterType.numberRange]: NumberRange,\n};\n\n// export type DefaultFilterTypes =\n//     | 'text'\n//     | 'exactText'\n//     | 'exactTextCase'\n//     | 'includes'\n//     | 'includesAll'\n//     | 'exact'\n//     | 'equals'\n//     | 'between';\n\nexport const filterTypeMap: Record<\n  MpFilterType,\n  MpFilterTypes | FilterFunction\n> = {\n  [MpFilterType.select]: matchArray,\n  [MpFilterType.searchSelect]: matchArray,\n  [MpFilterType.text]: \"text\",\n  [MpFilterType.numberRange]: matchRange,\n};\n","import { Box } from \"@mui/material\";\nimport React, { Dispatch, SetStateAction, useMemo } from \"react\";\nimport { filterMap } from \"../../filters/Filters\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { RtMpColumnInstance } from \"../../types/Table\";\n\ninterface Props {\n  column: RtMpColumnInstance;\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n  overridables: MpTableOverridablesMap;\n  doFiltering(immediateValue?: any): void;\n}\n\nexport default function MpTableFilter({\n  column,\n  value,\n  setValue,\n  overridables,\n  doFiltering,\n}: Props) {\n  const filterType = useMemo(\n    () =>\n      typeof column?.mpColumn?.filter === \"string\"\n        ? column?.mpColumn?.filter\n        : column?.mpColumn?.filter?.type,\n    [column]\n  );\n  const FilterComponent = useMemo(\n    () =>\n      filterType\n        ? overridables?.filters?.[filterType as string] ??\n          filterMap[filterType as string]\n        : null,\n    [filterType, overridables]\n  );\n  return FilterComponent ? (\n    <Box>\n      <FilterComponent\n        column={column}\n        value={value}\n        setValue={setValue}\n        doFiltering={doFiltering}\n      />\n    </Box>\n  ) : null;\n}\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import { RtMpColumnInstance } from \"./../../types/Table\";\nimport {\n  MpBulkActionClickParams,\n  MpBulkActionParameters,\n  MpRowActionHandlerParams,\n  MpRowAction,\n  MpRowActionParameters,\n} from \"./../../types/Actions\";\n\nexport const getColumnAction = (column: RtMpColumnInstance) => {\n  const action = column?.mpColumn?.action;\n  if (!action) throw new Error(\"Missing action property from column.\");\n\n  return action as MpRowAction;\n};\n\nexport const handleRowAction = (params: MpRowActionHandlerParams) => {\n  const { row, rowId, slug, value, methods } = params;\n  if (!methods)\n    throw new Error(\n      `No row methods provided. Please provide them in order to use them.`\n    );\n  const method = methods[slug];\n  const methodsParams: MpRowActionParameters = {\n    value: value as any,\n    row,\n    rowId,\n  };\n  if (method) method(methodsParams);\n  else\n    throw new Error(\n      `A method for action '${slug}' does not exist. Either add it or remove this action.`\n    );\n};\n\nexport const handleBulkAction = (params: MpBulkActionClickParams) => {\n  const { methods, selectedRowIds, selectedRows, slug } = params;\n  const method = methods[slug];\n  const methodsParams: MpBulkActionParameters = {\n    selectedRows,\n    selectedIds: selectedRowIds,\n  };\n  if (method) method(methodsParams);\n  else\n    throw new Error(\n      `A method for action '${slug}' does not exist. Either add it or remove this action.`\n    );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  small: {\n    maxHeight: 28,\n  },\n}));\n","import React, { useCallback, useContext, useMemo } from \"react\";\nimport {\n  Button as MUIButton,\n  ButtonProps,\n  Icon,\n  IconButton,\n  IconButtonProps,\n} from \"@mui/material\";\nimport { CellProps } from \"react-table\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\nimport { MpRowActionMethods } from \"../../../types/Actions\";\nimport useStyles from \"./Button.styles\";\n\nexport function Button(props: CellProps<{}>) {\n  const classes = useStyles();\n  const { column, row } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n  const { color, icon, label, variant } = action;\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      event.stopPropagation();\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        row: row,\n        rowId: row.id,\n      });\n    },\n    [row, action, rowMethods]\n  );\n\n  if (icon) {\n    return (\n      <IconButton\n        color={color as IconButtonProps[\"color\"]}\n        onClick={handleClick}\n        size=\"large\"\n      >\n        <Icon>icon</Icon>\n      </IconButton>\n    );\n  }\n\n  return (\n    <MUIButton\n      size={size}\n      color={color as ButtonProps[\"color\"]}\n      variant={variant as ButtonProps[\"variant\"]}\n      onClick={handleClick}\n      classes={{ sizeSmall: classes.small }}\n    >\n      {label}\n    </MUIButton>\n  );\n}\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport { Icon } from \"@mui/material\";\nimport { MpRowActionItem, MpRowActionMethods } from \"../../../types/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\n\nexport function Toggle(props: CellProps<{}>) {\n  const { column, row, value } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n\n  const { items, defaultValue } = action;\n  const [toggle, setToggle] = useState<string | number | null | undefined>(\n    value ?? defaultValue\n  );\n\n  const handleChange = useCallback(\n    (event: React.MouseEvent<HTMLElement>, newToggle: string | null) => {\n      event.stopPropagation();\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        value: newToggle as string,\n        row: row,\n        rowId: row.id,\n      });\n      setToggle(newToggle);\n    },\n    [setToggle, action, row, rowMethods]\n  );\n\n  const mapToggles = useMemo(\n    () =>\n      (items ? items : []).map((item: MpRowActionItem) => {\n        const { value, icon, label, color, textColor } = item;\n        const inner = icon ? <Icon>{icon}</Icon> : label;\n        const maxHeight = size === \"small\" ? 24 : undefined;\n\n        const style =\n          toggle === value\n            ? {\n                color: textColor,\n                backgroundColor: color,\n                maxHeight,\n              }\n            : {\n                maxHeight,\n              };\n\n        return (\n          <ToggleButton\n            key={value}\n            size={size}\n            value={value}\n            aria-label=\"toggle-action\"\n            style={style}\n          >\n            {inner}\n          </ToggleButton>\n        );\n      }),\n    [size, items, toggle]\n  );\n\n  return (\n    <ToggleButtonGroup\n      value={toggle}\n      exclusive\n      onChange={handleChange}\n      aria-label=\"row-toggle\"\n    >\n      {mapToggles}\n    </ToggleButtonGroup>\n  );\n}\n","import {\n  Box,\n  Icon,\n  Switch as MUISwitch,\n  SwitchProps,\n  Typography,\n} from \"@mui/material\";\nimport React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MpRowActionMethods } from \"../../../types/Actions\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\n\nexport function Switch(props: CellProps<{}>) {\n  const { column, row, value } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n  const { iconLeft, iconRight, labelLeft, labelRight, color } = action;\n  const innerLeft = iconLeft ? <Icon>{iconLeft}</Icon> : labelLeft;\n  const innerRight = iconRight ? <Icon>{iconRight}</Icon> : labelRight;\n\n  const [checked, setChecked] = useState<boolean>(value);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.stopPropagation();\n      const value = event.target.checked;\n      setChecked(value);\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        row: row,\n        rowId: row.id,\n        value: value,\n      });\n    },\n    [rowMethods, row, action]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => e.stopPropagation(),\n    []\n  );\n\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      onClick={handlePropagation}\n    >\n      <Typography component=\"span\">{innerLeft}</Typography>\n      <MUISwitch\n        size={size}\n        onChange={handleChange}\n        color={color as SwitchProps[\"color\"]}\n        checked={checked}\n      />\n      <Typography component=\"span\">{innerRight}</Typography>\n    </Box>\n  );\n}\n","import { useMemo } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MpColumn, MpColumnRenderOptions } from \"../../types/Table\";\n\nexport function useRendererOptions({ cell }: CellProps<{}>) {\n  const column: MpColumn | undefined = (cell.column as any).mpColumn;\n  const renderOptions: MpColumnRenderOptions | undefined = useMemo(\n    () =>\n      typeof column?.render === \"string\"\n        ? { type: column.render }\n        : column?.render,\n    [column?.render]\n  );\n  const style = useMemo(\n    () => renderOptions?.styleMap?.[cell.value ?? \"\"] ?? undefined,\n    [renderOptions, cell]\n  );\n  const value = useMemo(\n    () => renderOptions?.valueMap?.[cell.value ?? \"\"] ?? cell.value,\n    [renderOptions, cell]\n  );\n\n  const columnId = useMemo(() => cell.column.id, [cell.column.id]);\n\n  const columnIndex = useMemo(() => cell.row.index, [cell.row.index]);\n\n  const inputProps = useMemo(() => column?.inputProps, [column?.inputProps]);\n\n  return {\n    column,\n    renderOptions,\n    style,\n    value,\n    columnId,\n    columnIndex,\n    inputProps,\n  };\n}\n","import { Box, Chip } from \"@mui/material\";\nimport createPalette from \"@mui/material/styles/createPalette\";\nimport React, { useContext, useMemo } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { useRendererOptions } from \"../../utils/Renderer/Renderer\";\n\nexport default function StatusPill(props: CellProps<{}>) {\n  const { style, value } = useRendererOptions(props);\n  const { size } = useContext(MetaContext);\n\n  const chipStyle = useMemo(\n    () => ({\n      backgroundColor: style != null ? style + \"\" : undefined,\n      color:\n        style != null\n          ? createPalette({ primary: { main: style + \"\" } }).getContrastText(\n              style + \"\"\n            )\n          : undefined,\n    }),\n    [style]\n  );\n  return (\n    <Box textAlign=\"center\">\n      <Chip size={size} style={chipStyle} label={value} />\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  root: {\n    padding: 0,\n    maxHeight: 29,\n    width: \"100%\",\n    fontSize: \"inherit\",\n  },\n  input: {\n    height: \"auto\",\n    maxHeight: 29,\n    padding: 0,\n    fontSize: \"inherit\",\n  },\n}));\n","import { ComponentType } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { Button, Switch, Toggle } from \"./actions/Actions\";\nimport { MpColumnRender } from \"../types/Table\";\nimport StatusPill from \"./StatusPill/StatusPill\";\nimport Input from \"./Input/Input\";\n\nexport const rendererMap: Record<\n  MpColumnRender,\n  ComponentType<CellProps<{}>>\n> = {\n  [MpColumnRender.statusPill]: StatusPill,\n  [MpColumnRender.button]: Button,\n  [MpColumnRender.toggle]: Toggle,\n  [MpColumnRender.switch]: Switch,\n  [MpColumnRender.input]: Input,\n};\n","import { InputBase } from \"@mui/material\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { useDebounce } from \"../../utils/Debounce/Debounce\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { useRendererOptions } from \"../../utils/Renderer/Renderer\";\nimport useStyles from \"./Input.styles\";\n\nexport default function Input(props: CellProps<{}>) {\n  const classes = useStyles();\n  const debounce = useDebounce();\n  const { value, inputProps, columnId, columnIndex } =\n    useRendererOptions(props);\n  const { onInputChange } = useContext(MetaContext);\n\n  const [inputValue, setInputValue] = useState<string>(value);\n\n  useEffect(() => setInputValue(value), [value]);\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => e.stopPropagation(),\n    []\n  );\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      const { value } = e.target;\n      setInputValue(value);\n      debounce(() => onInputChange?.(e, columnIndex, columnId));\n    },\n    [columnId, columnIndex, debounce, onInputChange]\n  );\n\n  return (\n    <InputBase\n      onChange={handleInputChange}\n      value={inputValue}\n      classes={{ root: classes.root, input: classes.input }}\n      onClick={handlePropagation}\n      {...inputProps}\n    />\n  );\n}\n","import { useContext } from \"react\";\nimport {\n  Column,\n  UseFiltersColumnOptions,\n  UseSortByColumnOptions,\n} from \"react-table\";\nimport { filterTypeMap } from \"../../filters/Filters\";\nimport { rendererMap } from \"../../renderers/Renderers\";\nimport { MpFilter } from \"../../types/Filter\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { MpColumn } from \"../../types/Table\";\nimport { MetaContext } from \"../MetaContext/MetaContext\";\n\nexport const getFooterValue = (key: string) => () => {\n  const { totalsData } = useContext(MetaContext);\n  return totalsData?.[key] ?? null;\n};\n\nconst noOpFilter = (rows: Array<any>) => rows;\n\nexport const convertMpToColumn = (\n  overridables?: Partial<MpTableOverridablesMap>,\n  disableSorting?: boolean\n) => <ItemType extends Object = any>(column: MpColumn) => {\n  const col: Column<ItemType> &\n    UseSortByColumnOptions<{}> &\n    UseFiltersColumnOptions<{}> & {\n      mpColumn: MpColumn;\n      Footer?: any;\n    } = {\n    Header: column.label ?? column.key,\n    accessor: column.key as any,\n    mpColumn: column,\n    disableSortBy: disableSorting || column.sort === false,\n  };\n  if (column?.filter != null && !(column?.filter as MpFilter)?.remote) {\n    const type =\n      typeof column.filter === \"string\" ? column.filter : column.filter.type;\n    col.filter =\n      overridables?.filterFunctions?.[type as string] ??\n      filterTypeMap[type as string];\n  }\n  if (column?.filter != null && (column?.filter as MpFilter)?.remote === true) {\n    col.filter = noOpFilter;\n  }\n  if (column.totals !== false) {\n    col.Footer = getFooterValue(column.key);\n  }\n  if (column.render != null) {\n    const type =\n      typeof column.render === \"string\" ? column.render : column.render.type;\n    col.Cell = overridables?.renderers?.[type] ?? rendererMap[type];\n  }\n  return col;\n};\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { MpColumnFormatOptions, MpColumn } from \"../../types/Table\";\nimport { formatMap, rawValueKey } from \"./../../formats/Formats\";\n\nexport function useDataFormatters<ItemType>(\n  data: ItemType[],\n  columns: MpColumn[],\n  locale?: string\n): [\n  ItemType[],\n  (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    index: number,\n    id: string | number\n  ) => void\n] {\n  const [dataState, setDataState] = useState<ItemType[]>([]);\n\n  const formattedData = useMemo(() => {\n    const formattableColumns: MpColumn[] = columns.filter((col) => col.format);\n    return data.map((item: any) =>\n      formattableColumns.reduce(\n        (acc, column) => {\n          const { key, format } = column;\n          acc[rawValueKey(key)] = item[rawValueKey(key)];\n          acc[key] = formatMap[\n            (format as MpColumnFormatOptions)?.type ?? format\n          ]({\n            value: item[key],\n            locale,\n            options: typeof format === \"string\" ? undefined : format,\n          });\n          return acc;\n        },\n        { ...item }\n      )\n    );\n  }, [data, columns, locale]);\n\n  useEffect(() => setDataState(formattedData), [formattedData]);\n\n  const changeData = useCallback(\n    (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n      index: number,\n      id: string | number\n    ) => {\n      const { value } = e.target;\n      setDataState((prevState) => {\n        const stateCopy: ItemType[] = [...prevState];\n        stateCopy[index][id] = value;\n        return stateCopy;\n      });\n    },\n    []\n  );\n\n  return [dataState, changeData];\n}\n","import { lighten, darken, Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    display: \"inline-flex\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    userSelect: \"none\",\n    whiteSpace: \"pre\",\n    cursor: \"pointer\",\n    position: \"relative\",\n  },\n  disabledSort: {\n    color: theme?.palette?.text?.secondary,\n    cursor: \"default\",\n  },\n  fixedWidth: {\n    minWidth: (props: any) => props.fixedColumnWidth,\n    width: (props: any) => props.fixedColumnWidth,\n    maxWidth: (props: any) => props.fixedColumnWidth,\n  },\n  hoveredCellWithFilters: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.background.default, 0.1)\n        : lighten(theme.palette.primary.light, 0.9),\n  },\n}));\n","import { Popover } from \"@mui/material\";\nimport React, { useCallback, useEffect, Dispatch, SetStateAction } from \"react\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { RtMpColumnInstance } from \"../../types/Table\";\n\ninterface Props {\n  column: RtMpColumnInstance;\n  anchorEl?: Element | null;\n  canSort?: boolean;\n  onClose(): void;\n  isSortedDesc?: boolean;\n  doSorting(): void;\n  overridables: MpTableOverridablesMap;\n  clearFiltersEvent?: string[];\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n}\n\nexport default function MpTableHeadCellOptions({\n  column,\n  anchorEl,\n  canSort,\n  onClose,\n  isSortedDesc,\n  doSorting,\n  overridables,\n  clearFiltersEvent,\n  value,\n  setValue,\n}: Props) {\n  const doFiltering = useCallback(\n    (immediateValue: any = value) => {\n      column.setFilter(immediateValue);\n      setValue(immediateValue);\n      onClose();\n    },\n    [value, column, onClose]\n  );\n\n  useEffect(() => {\n    if (\n      clearFiltersEvent != null &&\n      (!clearFiltersEvent?.length || clearFiltersEvent?.includes(column.id))\n    ) {\n      setValue(null);\n    }\n    // eslint-disable-next-line\n  }, [clearFiltersEvent]);\n\n  return (\n    <Popover\n      open={!!anchorEl}\n      anchorEl={anchorEl ?? undefined}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <overridables.headFilter\n        canSort={canSort}\n        isSortedDesc={isSortedDesc}\n        overridables={overridables}\n        doSorting={doSorting}\n        doFiltering={doFiltering}\n        value={value}\n        setValue={setValue}\n        column={column}\n      />\n    </Popover>\n  );\n}\n","import { TableCell } from \"@mui/material\";\nimport React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport useStyles from \"./MpTableHeadCell.styles\";\nimport clsx from \"clsx\";\nimport { TableCommonProps } from \"react-table\";\nimport MpTableHeadCellOptions from \"../MpTableHeadCellOptions/MpTableHeadCellOptions\";\nimport { MpTableClasses, RtMpColumnInstance } from \"../../types/Table\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\n\ninterface Props extends TableCommonProps {\n  column: RtMpColumnInstance;\n  variant?: \"simple\" | \"extended\";\n  overridables: MpTableOverridablesMap;\n  clearFiltersEvent?: string[];\n  clearColumnFilters?: boolean;\n  classes?: MpTableClasses;\n}\n\nexport default function MpTableHeadCell({\n  column,\n  variant = \"simple\",\n  overridables,\n  clearFiltersEvent,\n  clearColumnFilters,\n  classes: overrideClasses,\n}: // style,\n// className,\n// role,\nProps) {\n  const {\n    onClick: doSorting,\n    title,\n    ...sortProps\n  } = column.getSortByToggleProps() as any;\n  const { isSortedDesc } = column;\n  const { width: fixedColumnWidth } = column?.mpColumn;\n  const classes = useStyles({ fixedColumnWidth });\n  const cellRef = useRef<HTMLDivElement>(null);\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n  const [value, setValue] = useState<any | undefined>(column.filterValue);\n\n  const hasFilter = useMemo(() => !!column.mpColumn?.filter, [column]);\n  const hasWidth = useMemo(\n    () => !!column.mpColumn?.width && !!column.mpColumn?.fixedHeadWidth,\n    [column]\n  );\n  const isExtended = useMemo(\n    () => variant === \"extended\" && hasFilter,\n    [variant, hasFilter]\n  );\n\n  const [optionsAnchor, setOptionsAnchor] = useState<Element | null>(null);\n\n  const closeOptions = useCallback(\n    () => setOptionsAnchor(null),\n    [setOptionsAnchor]\n  );\n\n  const handleClick = useCallback(\n    (event?: React.MouseEvent<Element>) => {\n      if (isExtended) {\n        setOptionsAnchor(cellRef.current);\n      } else if (column.canSort) {\n        doSorting(event);\n      }\n    },\n    [doSorting, isExtended, column]\n  );\n\n  const handleClearFilters = useCallback(\n    (e: React.MouseEvent<SVGElement>) => {\n      e.stopPropagation();\n      column.setFilter(null);\n      setValue(null);\n    },\n    [column]\n  );\n\n  const handleMouseEnter = useCallback(() => setIsHovered(true), []);\n\n  const handleMouseLeave = useCallback(() => setIsHovered(false), []);\n\n  const filterSet =\n    column.filterValue != null &&\n    column.filterValue !== \"\" &&\n    (!Array.isArray(column.filterValue) || column.filterValue?.length > 0);\n\n  const highlightCell = useMemo(\n    () => filterSet && isHovered && clearColumnFilters,\n    [filterSet, isHovered, clearColumnFilters]\n  );\n\n  return (\n    <>\n      <TableCell\n        className={clsx({\n          [classes.fixedWidth]: hasWidth,\n          [overrideClasses?.hoveredCellWithFilters ??\n          classes.hoveredCellWithFilters]: highlightCell,\n        })}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...sortProps}\n      >\n        <div\n          ref={cellRef}\n          className={clsx(classes.wrapper, {\n            [classes.disabledSort]: !column.canSort && !isExtended,\n          })}\n        >\n          {column.render(\"Header\")}{\" \"}\n          <overridables.headIndicator\n            canSort={column.canSort}\n            isExtended={isExtended}\n            filterSet={filterSet}\n            isSortedDesc={isSortedDesc}\n            isHoveredCell={isHovered}\n            hasClear={clearColumnFilters}\n            clearFilters={handleClearFilters}\n          />\n        </div>\n      </TableCell>\n      {isExtended}\n      <MpTableHeadCellOptions\n        anchorEl={optionsAnchor}\n        overridables={overridables}\n        onClose={closeOptions}\n        canSort={column.canSort}\n        isSortedDesc={isSortedDesc}\n        doSorting={doSorting}\n        column={column}\n        clearFiltersEvent={clearFiltersEvent}\n        value={value}\n        setValue={setValue}\n      />\n    </>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  parent: {\n    borderRadius: \"inherit\",\n  },\n  wrapper: {\n    maxWidth: \"100%\",\n    overflowX: \"auto\",\n    borderTopLeftRadius: \"inherit\",\n    borderTopRightRadius: \"inherit\",\n  },\n  table: {\n    borderTopLeftRadius: \"inherit\",\n    borderTopRightRadius: \"inherit\",\n    overflow: \"hidden\",\n  },\n  stickyTotalsWrapper: {\n    position: \"relative\",\n    overflow: \"auto\",\n    zIndex: 1,\n  },\n  renderedCell: {\n    paddingTop: 2,\n    paddingBottom: 2,\n  },\n});\n","import { Box, TableCell, TableRow } from \"@mui/material\";\nimport { HourglassEmpty, TabUnselected } from \"@mui/icons-material\";\nimport React, { useMemo } from \"react\";\n\ninterface Props {\n  cellCount?: number;\n  loading?: boolean;\n  emptyChildren?: React.ReactNode;\n  loadingComponent?: React.ReactNode;\n}\n\nexport default function MpTableEmptyBody({\n  cellCount,\n  loading,\n  emptyChildren,\n  loadingComponent,\n}: Props) {\n  const renderLoader = useMemo(() => {\n    if (loading) {\n      return (\n        loadingComponent || <HourglassEmpty fontSize=\"large\" color=\"disabled\" />\n      );\n    }\n\n    return null;\n  }, [loading, loadingComponent]);\n\n  const renderChildren = useMemo(() => {\n    if (emptyChildren) {\n      return (\n        <>\n          {renderLoader}\n\n          {!loading && emptyChildren}\n        </>\n      );\n    }\n\n    return (\n      <Box\n        height={200}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        {renderLoader}\n\n        {!loading && <TabUnselected fontSize=\"large\" color=\"disabled\" />}\n      </Box>\n    );\n  }, [loading, renderLoader, emptyChildren]);\n\n  return (\n    <TableRow>\n      <TableCell colSpan={cellCount}>{renderChildren}</TableCell>\n    </TableRow>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  headSelectCell: {\n    maxWidth: 42,\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none\",\n    },\n  },\n  cellCheckbox: {\n    margin: -12,\n  },\n});\n","import { Box, Checkbox, TableCell } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport useStyles from \"./MpTableHeadSelectCell.styles\";\nimport { TableToggleRowsSelectedProps } from \"react-table\";\n\ninterface Props extends TableToggleRowsSelectedProps {\n  classes?: MpTableClasses;\n  selection: \"single\" | \"multiple\";\n}\n\nexport default function MpTableHeadSelectCell({\n  classes: overrideClasses,\n  selection,\n  onChange,\n  ...props\n}: Props) {\n  const classes = useStyles();\n\n  const handleCheck = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      e.stopPropagation();\n\n      onChange?.(e);\n    },\n    [onChange]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>) =>\n      e.stopPropagation(),\n    []\n  );\n\n  if (selection === \"single\") return <TableCell />;\n\n  return (\n    <TableCell\n      className={clsx(classes.headSelectCell, overrideClasses?.headSelectCell)}\n      onClick={handlePropagation}\n    >\n      <Box display=\"flex\">\n        <Checkbox\n          color=\"primary\"\n          {...props}\n          className={clsx(\n            classes.cellCheckbox,\n            overrideClasses?.headSelectCellCheckbox\n          )}\n          onChange={handleCheck}\n        />\n      </Box>\n    </TableCell>\n  );\n}\n","import { Box, Button, Divider } from \"@mui/material\";\nimport { SortByAlpha } from \"@mui/icons-material\";\nimport React, { useCallback } from \"react\";\nimport MpTableFilter from \"../../components/MpTableFilter/MpTableFilter\";\nimport { MpTableHeadFilterProps } from \"../../types/Overridables\";\n\nexport default function MpTableHeadFilter({\n  column,\n  canSort,\n  isSortedDesc,\n  doSorting,\n  doFiltering,\n  value,\n  setValue,\n  overridables,\n}: MpTableHeadFilterProps) {\n  const handleSubmit = useCallback(\n    (event: React.FormEvent) => {\n      event.preventDefault();\n      doFiltering();\n    },\n    [doFiltering]\n  );\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box minWidth={150}>\n        <MpTableFilter\n          column={column}\n          value={value}\n          setValue={setValue}\n          doFiltering={doFiltering}\n          overridables={overridables}\n        />\n        <Divider />\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          {canSort && (\n            <Box\n              paddingX={2}\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              style={{ cursor: \"pointer\" }}\n              onClick={doSorting}\n            >\n              <SortByAlpha\n                fontSize=\"small\"\n                color={isSortedDesc == null ? \"action\" : \"primary\"}\n              />\n            </Box>\n          )}\n          <Box flexGrow={1} />\n          <Button color=\"primary\" type=\"submit\">\n            Filter\n          </Button>\n        </Box>\n      </Box>\n    </form>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  wrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    position: \"relative\",\n    minHeight: 48,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n});\n","import clsx from \"clsx\";\nimport React, { useMemo } from \"react\";\nimport useStyles from \"./MpTablePaginator.styles\";\n\nimport {\n  Box,\n  Tooltip,\n  Typography,\n  IconButton,\n  CircularProgress,\n} from \"@mui/material\";\nimport { ChevronLeft, ChevronRight } from \"@mui/icons-material\";\nimport { MpTablePaginatorProps } from \"../../types/Overridables\";\n\nexport default function MpTablePaginator({\n  pageIndex,\n  previousPage,\n  itemCount,\n  nextPage,\n  pageCount,\n  pageSize,\n  loading,\n  translations,\n  selectedCount,\n}: MpTablePaginatorProps) {\n  const classes = useStyles();\n  const hasPrevious = useMemo(() => pageIndex > 0, [pageIndex]);\n  const hasNext = useMemo(\n    () => (pageCount == null ? true : pageIndex < pageCount - 1),\n    [pageIndex, pageCount]\n  );\n  const infoText = useMemo(\n    () =>\n      [\n        itemCount != null\n          ? `${itemCount} ${translations?.total ?? \"total\"}`\n          : null,\n        selectedCount != null && selectedCount > 0\n          ? `${selectedCount} ${translations?.selected ?? \"selected\"}`\n          : null,\n      ]\n        .filter((item) => item != null)\n        .join(\" • \"),\n    [itemCount, selectedCount, translations]\n  );\n\n  return (\n    <Box paddingY={1} paddingX={2} className={clsx(classes.wrapper)}>\n      <Typography color=\"textSecondary\" variant=\"body2\">\n        {infoText}\n      </Typography>\n      {loading && (\n        <Box\n          paddingX={1}\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <CircularProgress size=\"1.5em\" data-qa=\"TableProgress\" />\n        </Box>\n      )}\n      <Box className={classes.spacer} />\n      <Box paddingX={1}>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          {pageIndex * pageSize + 1} - {(pageIndex + 1) * pageSize}\n          {pageCount != null ? ` ${translations?.of ?? \"of\"} ${pageCount}` : \"\"}\n        </Typography>\n      </Box>\n      <Tooltip title={translations?.previousPage ?? \"Previous\"}>\n        <div>\n          <IconButton\n            size=\"small\"\n            onClick={previousPage}\n            disabled={!hasPrevious}\n          >\n            <ChevronLeft />\n          </IconButton>\n        </div>\n      </Tooltip>\n      <Tooltip title={translations?.nextPage ?? \"Next\"}>\n        <div>\n          <IconButton size=\"small\" onClick={nextPage} disabled={!hasNext}>\n            <ChevronRight />\n          </IconButton>\n        </div>\n      </Tooltip>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const Filter = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterArrowDown = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M11 11L16.76 3.62A1 1 0 0 0 16.59 2.22A1 1 0 0 0 16 2H2A1 1 0 0 0 1.38 2.22A1 1 0 0 0 1.21 3.62L7 11V16.87A1 1 0 0 0 7.29 17.7L9.29 19.7A1 1 0 0 0 10.7 19.7A1 1 0 0 0 11 18.87V11M13 16L18 21L23 16Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterArrowUp = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        d=\"M11 11L16.76 3.62C16.9224 3.41153 16.9957 3.14726 16.9638 2.88493C16.932 2.6226 16.7976 2.38355 16.59 2.22C16.4221 2.08505 16.2152 2.00789 16 2H1.99999C1.77443 2.00131 1.55593 2.07884 1.37999 2.22C1.17243 2.38355 1.03804 2.6226 1.00618 2.88493C0.974328 3.14726 1.0476 3.41153 1.20999 3.62L6.99999 11V16.87C6.9819 17.0213 6.99862 17.1747 7.04888 17.3186C7.09914 17.4624 7.18161 17.5929 7.28999 17.7L9.28999 19.7C9.47736 19.8863 9.73081 19.9908 9.99499 19.9908C10.2592 19.9908 10.5126 19.8863 10.7 19.7C10.8102 19.5938 10.8945 19.4638 10.9465 19.3199C10.9985 19.176 11.0168 19.0221 11 18.87V11ZM13 21L18 16L23 21H13Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterOutline = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M15,19.88C15.04,20.18 14.94,20.5 14.71,20.71C14.32,21.1 13.69,21.1 13.3,20.71L9.29,16.7C9.06,16.47 8.96,16.16 9,15.87V10.75L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L15,10.75V19.88M7.04,5L11,10.06V15.58L13,17.58V10.05L16.96,5H7.04Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst width = 18;\n\nexport default makeStyles((theme: Theme) => ({\n  iconWrapper: {\n    display: \"inline-flex\",\n    maxHeight: \"1em\",\n    justifyContent: \"center\",\n    maxWidth: width,\n    width: width,\n    minWidth: width,\n    alignItems: \"center\",\n  },\n  clearIcon: {\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    width: 19,\n    height: 19,\n    borderRadius: \"3px\",\n    position: \"absolute\",\n    left: 0,\n  },\n}));\n","import { Box } from \"@mui/material\";\nimport {\n  ArrowDropDown,\n  ArrowDropUp,\n  Clear,\n  ExpandMore,\n} from \"@mui/icons-material\";\nimport React, { useCallback } from \"react\";\nimport { Filter } from \"../../icons/Filter\";\nimport { FilterArrowDown } from \"../../icons/FilterArrowDown\";\nimport { FilterArrowUp } from \"../../icons/FilterArrowUp\";\nimport { FilterOutline } from \"../../icons/FilterOutline\";\nimport { MpTableHeadIndicatorProps } from \"../../types/Overridables\";\nimport useStyles from \"./MpTableHeadIndicator.styles\";\n\nexport default function MpTableHeadIndicator({\n  canSort,\n  isExtended,\n  filterSet,\n  isSortedDesc,\n  isHoveredCell,\n  hasClear,\n  clearFilters,\n}: MpTableHeadIndicatorProps) {\n  const classes = useStyles();\n\n  const handleClearClick = useCallback(\n    (e: React.MouseEvent<SVGElement>) => clearFilters && clearFilters(e),\n    [clearFilters]\n  );\n\n  return !!canSort || !!isExtended ? (\n    <Box className={classes.iconWrapper}>\n      {isSortedDesc === true ? (\n        isExtended && filterSet ? (\n          <FilterArrowDown fontSize=\"small\" color=\"primary\" />\n        ) : (\n          <ArrowDropDown color=\"primary\" />\n        )\n      ) : isSortedDesc === false ? (\n        isExtended && filterSet ? (\n          <FilterArrowUp fontSize=\"small\" color=\"primary\" />\n        ) : (\n          <ArrowDropUp color=\"primary\" />\n        )\n      ) : isExtended && !filterSet ? (\n        <FilterOutline fontSize=\"small\" color=\"disabled\" />\n      ) : isExtended && filterSet ? (\n        <>\n          <Filter fontSize=\"small\" color=\"primary\" />\n          {hasClear && isHoveredCell && (\n            <Clear className={classes.clearIcon} onClick={handleClearClick} />\n          )}\n        </>\n      ) : (\n        <ExpandMore fontSize=\"small\" color=\"disabled\" />\n      )}\n    </Box>\n  ) : null;\n}\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(2),\n  },\n}));\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    transition: `${theme.transitions.create([\"max-width\"], {\n      duration: theme.transitions.duration.complex,\n    })}`,\n  },\n  iconSpacer: {\n    marginRight: 10,\n  },\n  menuPaper: {\n    padding: \"10px 0\",\n    marginTop: 4,\n  },\n  menuItem: {\n    paddingTop: 14,\n    paddingBottom: 0,\n    paddingRight: 0,\n    minWidth: 150,\n  },\n  overlay: {\n    zIndex: 1,\n  },\n  itemDivider: {\n    borderBottom: \"rgba(0, 0, 0, 0.1) solid 1px\",\n    marginLeft: 20,\n    paddingRight: 20,\n    width: \"100%\",\n    paddingBottom: 14,\n  },\n  noBorder: {\n    borderBottom: 0,\n  },\n}));\n","import {\n  MenuItem,\n  Box,\n  Grow,\n  Button,\n  Popper,\n  Paper,\n  ClickAwayListener,\n  MenuList,\n} from \"@mui/material\";\nimport { Close, Menu } from \"@mui/icons-material\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { MpTableBulkActionProps } from \"../../types/Overridables\";\nimport useStyles from \"./MpTableBulkActions.styles\";\nimport clsx from \"clsx\";\nimport { MpBulkActionClickParams } from \"../../types/Actions\";\nimport { handleBulkAction } from \"../../utils/Actions/Actions\";\n\nexport default function MpTableBulkActions({\n  selectedRowIds,\n  selectedRows,\n  actions,\n  methods,\n  translations,\n}: MpTableBulkActionProps) {\n  const classes = useStyles();\n  const hasSelectedRows = useMemo(\n    () => selectedRows.length > 0,\n    [selectedRows]\n  );\n  const maxWidth = useMemo(\n    () => (hasSelectedRows ? \"100%\" : 0),\n    [hasSelectedRows]\n  );\n  const [open, setOpen] = useState<boolean>(false);\n  const anchorRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (!hasSelectedRows) {\n      setOpen(false);\n    }\n  }, [hasSelectedRows]);\n\n  const handleToggle = useCallback(() => {\n    setOpen((prevOpen) => !prevOpen);\n  }, [setOpen]);\n\n  const handleClose = <E extends { target?: any | null }>(event: E) => {\n    if (anchorRef.current?.contains(event.target as HTMLElement)) {\n      return;\n    }\n  };\n\n  const handleListKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  };\n\n  const handleClick = useCallback(\n    (slug: string) => {\n      const bulkActionParams: MpBulkActionClickParams = {\n        selectedRowIds,\n        selectedRows,\n        slug,\n        methods,\n      };\n      handleBulkAction(bulkActionParams);\n    },\n    [selectedRowIds, selectedRows, methods]\n  );\n\n  const actionsMap = actions.map((action, i) => (\n    <MenuItem\n      classes={{ root: classes.menuItem }}\n      onClick={(e) => {\n        handleClose(e);\n        handleClick(action.slug);\n      }}\n      key={action.slug}\n    >\n      <Box\n        className={clsx(classes.itemDivider, {\n          [classes.noBorder]: actions.length === i + 1,\n        })}\n      >\n        {action.label}\n      </Box>\n    </MenuItem>\n  ));\n\n  return (\n    <Box maxWidth={maxWidth} overflow=\"hidden\" className={classes.wrapper}>\n      <Box width=\"fit-content\">\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? \"bulk-actions-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {open ? (\n            <Close className={classes.iconSpacer} />\n          ) : (\n            <Menu className={classes.iconSpacer} />\n          )}\n          {translations?.total ?? \"Actions\"}\n        </Button>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n          className={classes.overlay}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"left top\" : \"left bottom\",\n              }}\n            >\n              <Paper classes={{ root: classes.menuPaper }}>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList\n                    autoFocusItem={open}\n                    id=\"bulk-actions-list-grow\"\n                    onKeyDown={handleListKeyDown}\n                    disablePadding\n                  >\n                    {actionsMap}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Box>\n    </Box>\n  );\n}\n","import { TextField } from \"@mui/material\";\nimport { Search } from \"@mui/icons-material\";\nimport React, { useCallback, useState } from \"react\";\nimport { MpTableGlobalFilterProps } from \"../../types/Overridables\";\nimport { useDebounce } from \"../../utils/Debounce/Debounce\";\n\nexport default function MpTableGlobalFilter({\n  onGlobalFilter,\n  translations,\n  globalFilters,\n}: MpTableGlobalFilterProps) {\n  const [value, setValue] = useState<string>(globalFilters?.search);\n  const debounce = useDebounce(200);\n  const handleGlobalFilter = useCallback(\n    (e: any) => {\n      setValue(e.target.value);\n      const filter = {\n        key: \"search\",\n        value: e.target.value,\n      };\n      debounce(() => onGlobalFilter(filter));\n    },\n    [onGlobalFilter, debounce]\n  );\n\n  return (\n    <TextField\n      onChange={handleGlobalFilter}\n      label={translations?.search ?? \"Search\"}\n      InputProps={{\n        endAdornment: <Search />,\n      }}\n      value={value}\n      variant=\"outlined\"\n    />\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function BreadcrumbFilterDown(props: SvgIconProps) {\n  return (\n    <SvgIcon viewBox=\"0 0 8 6\" width=\"8\" height=\"6\" {...props}>\n      <svg\n        width=\"8\"\n        height=\"6\"\n        viewBox=\"0 0 8 6\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M4.71074 5.28189C4.3194 5.67729 3.6806 5.67729 3.28926 5.28189L0.489829 2.45345C-0.135134 1.82201 0.31215 0.75 1.20057 0.75L6.79943 0.75C7.68785 0.75 8.13513 1.82201 7.51017 2.45345L4.71074 5.28189Z\"\n          fill=\"black\"\n        />\n      </svg>\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function BreadcrumbSeparator(props: SvgIconProps) {\n  return (\n    <SvgIcon width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\n      <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M10.5 16.5L15.5 11.5L10.5 6.5\"\n          stroke=\"black\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    </SvgIcon>\n  );\n}\n","import { MpBreadcrumbFilterData } from \"../../types/Filter\";\n\nexport const getNestedElementsMapReduce = (\n  data: MpBreadcrumbFilterData,\n  selection: {\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }\n): {\n  [key: string]: MpBreadcrumbFilterData[];\n} | void => {\n  if (!!data)\n    return Object.entries(data).reduce(\n      (accumulator, [key, value]) => {\n        if (Array.isArray(value)) {\n          accumulator[key] = value;\n          if (selection[key]?.id !== undefined) {\n            const filteredValue = value.filter(\n              (breadcrumb) => breadcrumb.id === selection[key]?.id\n            );\n            if (filteredValue.length > 0) {\n              return {\n                ...accumulator,\n                ...getNestedElementsMapReduce(filteredValue[0], selection),\n              };\n            }\n          }\n        }\n        return accumulator;\n      },\n      {} as {\n        [key: string]: MpBreadcrumbFilterData[];\n      }\n    );\n};\n","import { Grid, Typography, List, ListItem, Divider, Box } from \"@mui/material\";\nimport React, { useMemo } from \"react\";\nimport { MpBreadcrumbFilterData } from \"../../types/Filter\";\nimport { MpTableTranslations } from \"../../types/Table\";\n\ninterface IProps {\n  selectedKey: string;\n  items: MpBreadcrumbFilterData[];\n  onMouseEnter: (key: string, id: string, name: string) => void;\n  onClick: (selectedKey: string) => void;\n  selectedId: string | undefined;\n  translations?: MpTableTranslations;\n}\n\nexport default function BreadcrumbList({\n  selectedKey,\n  items,\n  onMouseEnter,\n  selectedId,\n  translations,\n  onClick,\n}: IProps) {\n  const breadcrumbMap = useMemo(\n    () =>\n      items.map((item) => (\n        <ListItem\n          button\n          key={item.id}\n          onMouseEnter={() =>\n            onMouseEnter(\n              selectedKey,\n              item.id as string,\n              translations?.breadcrumbs?.[item.name as string] ??\n                (item.name as string)\n            )\n          }\n          onClick={() => onClick(selectedKey)}\n          selected={selectedId === item.id}\n        >\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {translations?.breadcrumbs?.[item.name as string] ?? item.name}\n          </Typography>\n        </ListItem>\n      )),\n    [items, onClick, onMouseEnter, selectedId, selectedKey, translations]\n  );\n\n  return (\n    <Grid component={Box} minWidth=\"200px\" item>\n      <Box paddingX={2} paddingY={1}>\n        <Typography color=\"textPrimary\" variant=\"subtitle2\">\n          {translations?.breadcrumbs?.[selectedKey] ?? selectedKey}\n        </Typography>\n      </Box>\n      <Divider />\n      <List>{breadcrumbMap}</List>\n    </Grid>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  dropdownIconRoot: {\n    width: 13,\n    height: 8,\n    marginLeft: 7,\n    cursor: \"pointer\",\n  },\n\n  seperator: {\n    margin: \"0 10px\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n}));\n","import { Box, Breadcrumbs, Grid, Link, Popover } from \"@mui/material\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport BreadcrumbFilterDown from \"../../icons/BreadcrumbFilterDown\";\nimport BreadcrumbSeparator from \"../../icons/BreadcrumbSeparator\";\nimport { MpBreadcrumbFilterData } from \"../../types/Filter\";\nimport { MpTableGlobalFilterProps } from \"../../types/Overridables\";\nimport { getNestedElementsMapReduce } from \"../../utils/Breadcrumbs/Breadcrumbs\";\nimport BreadcrumbList from \"./BreadcrumbList\";\nimport useStyles from \"./MpTableBreadcrumb.styles\";\n\ninterface IProps extends MpTableGlobalFilterProps {\n  data: MpBreadcrumbFilterData;\n}\n\nexport default function MpTableBreadcrumb({\n  data,\n  translations,\n  onGlobalFilter,\n  globalFilters,\n}: IProps) {\n  const classes = useStyles();\n  const [selection, setSelection] = useState<{\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }>({});\n  const [items, setItems] = useState<{\n    [key: string]: MpBreadcrumbFilterData[];\n  }>({});\n  const [breadcrumbs, setBreadcrumbs] = useState<{\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }>(globalFilters?.breadcrumb ?? {});\n  const containerRef = useRef<HTMLElement>(null);\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const open = useMemo(() => !!anchorEl, [anchorEl]);\n  const popoverId = useMemo(\n    () => (open ? \"breadcrumb-popover\" : undefined),\n    [open]\n  );\n\n  const updateNestedElements = useCallback(\n    (data: MpBreadcrumbFilterData) => {\n      setItems({ ...getNestedElementsMapReduce(data, selection) });\n    },\n    [selection]\n  );\n\n  const handleBreadcrumbHover = useCallback(\n    (selectedKey: string, id: string, name: string) => {\n      const itemKeys = Object.keys(items);\n      const itemEntries = Object.entries(items);\n      const selectionKeys = Object.keys(selection);\n      const selectionDepth = itemKeys.indexOf(selectedKey);\n\n      if (selectionDepth !== 0) {\n        let selectionObject = {};\n        let selectedPath: string[] =\n          breadcrumbs[selectedKey]?.id === id ? [selectedKey] : [];\n        let prevSelectedObject = {};\n        for (let i = 0; i < selectionDepth; i++) {\n          const [key, value] = itemEntries[i];\n          if (breadcrumbs[key]?.id === selection[key].id) {\n            selectedPath = [...selectedPath, key];\n          } else selectedPath = [];\n          if (selectionKeys.indexOf(key) !== -1) {\n            prevSelectedObject = {\n              ...prevSelectedObject,\n              [key]: {\n                id: selection[key].id,\n                name: selection[key].name,\n              },\n            };\n          }\n          if (selectionKeys.indexOf(key) === -1) {\n            selectionObject = {\n              ...selectionObject,\n              [key]: {\n                id: value[0].id,\n                name: value[0].name,\n              },\n            };\n          }\n        }\n        if (selectedPath?.length - 1 === selectionDepth)\n          prevSelectedObject = breadcrumbs;\n        setSelection(() => {\n          return {\n            ...prevSelectedObject,\n            ...selectionObject,\n            [selectedKey]: {\n              id,\n              name,\n            },\n          };\n        });\n      } else {\n        setSelection(() => {\n          if (breadcrumbs[selectedKey]?.id === id) return breadcrumbs;\n          return {\n            [selectedKey]: {\n              id,\n              name,\n            },\n          };\n        });\n      }\n    },\n    [items, selection, breadcrumbs]\n  );\n\n  const handleBreadcrumbClick = useCallback(\n    (selectedKey: string, isLastClick?: boolean) => {\n      const selectionEntries = Object.entries(selection);\n      const selectionDepth = Object.keys(selection).indexOf(selectedKey) + 1;\n      if (isLastClick) {\n        setAnchorEl(containerRef.current);\n        setSelection(breadcrumbs);\n      } else {\n        const slicedArray = selectionEntries.slice(0, selectionDepth);\n        const slicedObject = Object.fromEntries(slicedArray);\n        onGlobalFilter({\n          key: \"breadcrumb\",\n          value: slicedObject,\n        });\n        setBreadcrumbs(slicedObject);\n        setSelection(slicedObject);\n        setAnchorEl(null);\n      }\n    },\n    [breadcrumbs, onGlobalFilter, selection]\n  );\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n    setSelection(breadcrumbs);\n  }, [breadcrumbs]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => updateNestedElements(data), [selection, data]);\n\n  useEffect(() => {\n    if (Object.keys(selection)?.length < 1) setSelection(breadcrumbs);\n  }, [breadcrumbs, selection]);\n\n  useEffect(\n    () => setBreadcrumbs(globalFilters?.breadcrumb ?? {}),\n    [globalFilters?.breadcrumb]\n  );\n\n  const breadcrumbGridMap = useMemo(() => {\n    const entries = Object.entries(items);\n    const gridItems = [];\n    for (const [key, value] of entries) {\n      gridItems.push(\n        <BreadcrumbList\n          key={key}\n          selectedKey={key}\n          items={value}\n          onMouseEnter={handleBreadcrumbHover}\n          onClick={handleBreadcrumbClick}\n          selectedId={selection[key]?.id}\n          translations={translations ?? {}}\n        />\n      );\n    }\n\n    return gridItems;\n  }, [\n    handleBreadcrumbClick,\n    handleBreadcrumbHover,\n    items,\n    selection,\n    translations,\n  ]);\n\n  const breadcrumbSelectionMap = useMemo(() => {\n    const entries = Object.entries(breadcrumbs);\n    const lastItem = entries[entries.length - 1];\n    const breadcrumbItems = [\n      <Link\n        color=\"textPrimary\"\n        variant=\"h6\"\n        onClick={() => handleBreadcrumbClick(\"\", entries.length === 0)}\n        key=\"initial-table-breadcrumb\"\n        classes={{ root: classes.pointer }}\n      >\n        {translations?.all ?? \"All\"}\n      </Link>,\n    ];\n    for (const [key, value] of entries) {\n      breadcrumbItems.push(\n        <Link\n          color=\"textPrimary\"\n          variant=\"h6\"\n          key={value.id}\n          onClick={() => handleBreadcrumbClick(key, key === lastItem[0])}\n          aria-describedby={popoverId}\n          classes={{ root: classes.pointer }}\n        >\n          {value.name}\n        </Link>\n      );\n    }\n\n    return breadcrumbItems;\n  }, [\n    breadcrumbs,\n    classes.pointer,\n    handleBreadcrumbClick,\n    popoverId,\n    translations?.all,\n  ]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box display=\"flex\" alignItems=\"center\">\n        <Breadcrumbs\n          separator={<BreadcrumbSeparator />}\n          classes={{ separator: classes.seperator }}\n          ref={containerRef}\n        >\n          {breadcrumbSelectionMap}\n        </Breadcrumbs>\n        <BreadcrumbFilterDown\n          classes={{ root: classes.dropdownIconRoot }}\n          onClick={() => handleBreadcrumbClick(\"\", true)}\n        />\n      </Box>\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        PaperProps={{\n          style: { height: \"400px\" },\n        }}\n      >\n        <Box padding={1} height=\"100%\">\n          <Grid container height=\"100%\">\n            {breadcrumbGridMap}\n          </Grid>\n        </Box>\n      </Popover>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport useStyles from \"./MpTableGlobalActions.styles\";\nimport { MpTableGlobalActionProps } from \"../../types/Overridables\";\nimport MpTableBulkActions from \"../../components/MpTableBulkActions/MpTableBulkActions\";\nimport { Box } from \"@mui/material\";\nimport MpTableGlobalFilter from \"../../components/MpTableGlobalFilter/MpTableGlobalFilter\";\nimport MpTableBreadcrumb from \"../../components/MpTableBreadcrumb/MpTableBreadcrumb\";\n\nexport default function MpTableGlobalActions({\n  selectedRowIds,\n  selectedRows,\n  actions,\n  methods,\n  translations,\n  onGlobalFilter,\n  globalFilters,\n  breadcrumbFilterData,\n}: MpTableGlobalActionProps) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.wrapper}>\n      {!!actions && (\n        <MpTableBulkActions\n          selectedRowIds={selectedRowIds}\n          selectedRows={selectedRows}\n          actions={actions}\n          methods={methods}\n          translations={translations}\n        />\n      )}\n      {!!breadcrumbFilterData && (\n        <MpTableBreadcrumb\n          onGlobalFilter={onGlobalFilter}\n          translations={translations}\n          globalFilters={globalFilters}\n          data={breadcrumbFilterData}\n        />\n      )}\n      <MpTableGlobalFilter\n        onGlobalFilter={onGlobalFilter}\n        translations={translations}\n        globalFilters={globalFilters}\n      />\n    </Box>\n  );\n}\n","import MpTableHeadFilter from \"./MpTableHeadFilter/MpTableHeadFilter\";\nimport MpTablePaginator from \"./MpTablePaginator/MpTablePaginator\";\nimport { MpTableOverridablesMap } from \"../types/Overridables\";\nimport MpTableHeadIndicator from \"./MpTableHeadIndicator/MpTableHeadIndicator\";\nimport MpTableGlobalActions from \"./MpTableGlobalActions/MpTableGlobalActions\";\n\nexport const defaultOverridables: Omit<\n  MpTableOverridablesMap,\n  \"renderers\" | \"filters\" | \"filterFunctions\"\n> = {\n  paginator: MpTablePaginator,\n  headFilter: MpTableHeadFilter,\n  headIndicator: MpTableHeadIndicator,\n  globalActions: MpTableGlobalActions,\n};\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  footer: {\n    transition: theme.transitions.create([\"background\", \"box-shadow\"]),\n    background: \"rgba(0,0,0,0)\",\n    boxShadow: \"none\",\n  },\n  raised: {\n    background: theme.palette.background.paper,\n    boxShadow: theme.shadows[15],\n  },\n}));\n","import { TableFooter, TableFooterProps } from \"@mui/material\";\nimport React, {\n  PropsWithChildren,\n  RefObject,\n  useLayoutEffect,\n  useRef,\n} from \"react\";\nimport useStyles from \"./MpTableStickyTotalsFooter.styles\";\n\nconst win = typeof window === \"undefined\" ? null : window;\n\nexport default function MpTableStickyTotalsFooter({\n  children,\n  bodyRef,\n  ...props\n}: PropsWithChildren<TableFooterProps> & {\n  bodyRef: RefObject<HTMLTableSectionElement>;\n}) {\n  const classes = useStyles();\n  const ref = useRef<HTMLTableSectionElement>(null);\n\n  useLayoutEffect(() => {\n    let timeout: any = null;\n    let queuedUpdate: boolean = false;\n    let transformValue: number = 0;\n    const fps = 120;\n\n    // Update the styles\n    const update = () => {\n      const calculatedTransform = -(\n        (bodyRef?.current?.getBoundingClientRect().bottom ?? 0) -\n        window.innerHeight +\n        (ref?.current?.offsetHeight ?? 0)\n      );\n      const transform =\n        calculatedTransform >= 0 ? \"\" : `translateY(${calculatedTransform}px)`;\n      if (ref.current) {\n        ref.current.style.transform = transform;\n        if (calculatedTransform < 0 && transformValue >= 0) {\n          ref.current.classList.add(classes.raised);\n        } else if (calculatedTransform >= 0 && transformValue < 0) {\n          ref.current.classList.remove(classes.raised);\n        }\n      }\n      transformValue = calculatedTransform;\n      timeout = setTimeout(() => {\n        timeout = null;\n        if (queuedUpdate) {\n          queuedUpdate = false;\n          update();\n        }\n      }, 1000 / fps);\n    };\n\n    // Throttle the update\n    const triggerUpdate = () => {\n      if (timeout === null) {\n        update();\n      } else {\n        queuedUpdate = true;\n      }\n    };\n\n    // Set event listeners\n    win?.addEventListener(\"scroll\", triggerUpdate);\n    win?.addEventListener(\"resize\", triggerUpdate);\n    triggerUpdate();\n\n    // Remove event listeners\n    return () => {\n      win?.removeEventListener(\"scroll\", triggerUpdate);\n      win?.removeEventListener(\"resize\", triggerUpdate);\n    };\n  }, [bodyRef, classes.raised, children]);\n\n  return (\n    <TableFooter {...props} className={classes.footer} ref={ref}>\n      {children}\n    </TableFooter>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  totalsSelectCell: {\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none !important\",\n      boxShadow: \"none !important\",\n    },\n  },\n});\n","import { TableCell, TableFooter, TableRow } from \"@mui/material\";\nimport React, { RefObject, useCallback } from \"react\";\nimport { HeaderGroup } from \"react-table\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport MpTableStickyTotalsFooter from \"../MpTableStickyTotalsFooter/MpTableStickyTotalsFooter\";\nimport useStyles from \"./MpTableTotals.styles\";\nimport clsx from \"clsx\";\n\ninterface Props {\n  footerGroups: HeaderGroup<{}>[];\n  hasSelection?: boolean;\n  stickyTotals?: boolean;\n  classes?: MpTableClasses;\n  bodyRef: RefObject<HTMLTableSectionElement>;\n}\n\nexport default function MpTableTotals({\n  footerGroups,\n  hasSelection,\n  stickyTotals,\n  classes: overrideClasses,\n  bodyRef,\n}: Props) {\n  const classes = useStyles();\n\n  const handleFixedWidth = useCallback((column) => {\n    const cellWidth = column.mpColumn?.width;\n    return cellWidth\n      ? {\n          minWidth: cellWidth,\n          width: cellWidth,\n          maxWidth: cellWidth,\n        }\n      : undefined;\n  }, []);\n\n  const groups = footerGroups.map((group) => (\n    <TableRow {...group.getFooterGroupProps()}>\n      {hasSelection && (\n        <TableCell\n          className={clsx(\n            classes.totalsSelectCell,\n            overrideClasses?.totalsSelectCell\n          )}\n        />\n      )}\n      {group.headers.map((column) => (\n        <TableCell\n          style={handleFixedWidth(column)}\n          {...column.getFooterProps()}\n        >\n          {(column as any).Footer != null && column.render(\"Footer\")}\n        </TableCell>\n      ))}\n    </TableRow>\n  ));\n\n  return stickyTotals ? (\n    <MpTableStickyTotalsFooter bodyRef={bodyRef}>\n      {groups}\n    </MpTableStickyTotalsFooter>\n  ) : (\n    <TableFooter>{groups}</TableFooter>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  selectCell: {\n    maxWidth: 42,\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none\",\n    },\n    \"tr:last-child &\": {\n      overflow: \"hidden\",\n    },\n  },\n  cellCheckbox: {\n    margin: -12,\n  },\n});\n","import { Box, Checkbox, TableCell } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport { Row, UseRowSelectRowProps } from \"react-table\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport useStyles from \"./MpTableSelectCell.styles\";\nimport clsx from \"clsx\";\ninterface Props {\n  row: Row & UseRowSelectRowProps<{}>;\n  classes?: MpTableClasses;\n  selection: \"single\" | \"multiple\";\n  toggleAllRowsSelected: (value?: boolean) => void;\n}\n\nexport default function MpTableSelectCell({\n  row,\n  selection,\n  toggleAllRowsSelected,\n  classes: overrideClasses,\n}: Props) {\n  const props = row.getToggleRowSelectedProps();\n  const classes = useStyles();\n\n  const handleCheck = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (selection === \"single\") {\n        toggleAllRowsSelected(false);\n      }\n\n      row.toggleRowSelected(e.target.checked);\n    },\n    [row, selection, toggleAllRowsSelected]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>) =>\n      e.stopPropagation(),\n    []\n  );\n\n  return (\n    <TableCell\n      className={clsx(classes.selectCell, overrideClasses?.selectCell)}\n      onClick={handlePropagation}\n    >\n      <Box display=\"flex\">\n        <Checkbox\n          color=\"primary\"\n          {...props}\n          className={clsx(\n            classes.cellCheckbox,\n            overrideClasses?.selectCellCheckbox\n          )}\n          onChange={handleCheck}\n        />\n      </Box>\n    </TableCell>\n  );\n}\n","import { darken, lighten, Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  renderedCell: {\n    paddingTop: 2,\n    paddingBottom: 2,\n  },\n  highlightedPrimary: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.primary.main, 0.7)\n        : lighten(theme.palette.primary.main, 0.9),\n  },\n  highlightedSecondary: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.secondary.main, 0.7)\n        : lighten(theme.palette.secondary.main, 0.9),\n  },\n  highlightedInactive: {\n    background: theme.palette.background.default,\n    color: theme.palette.text.secondary,\n  },\n  cell: {\n    color: \"inherit\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n}));\n","import { TableCell, TableRow } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport { Row, UseRowSelectRowProps } from \"react-table\";\nimport MpTableSelectCell from \"../MpTableSelectCell/MpTableSelectCell\";\nimport clsx from \"clsx\";\nimport useStyles from \"./MpTableRow.styles\";\nimport {\n  MpTableClasses,\n  MpTableHighlights,\n  RtMpColumnInstance,\n} from \"../../types/Table\";\nimport { useRowHighlights } from \"../../utils/Highlights/Highlights\";\n\ninterface Props {\n  row: Row & UseRowSelectRowProps<{}>;\n  selection?: \"single\" | \"multiple\";\n  classes?: MpTableClasses;\n  highlights?: MpTableHighlights;\n  toggleAllRowsSelected: (value?: boolean) => void;\n  onRowClick?: (row?: Row & UseRowSelectRowProps<{}>) => void;\n}\n\nexport default function MpTableRow({\n  row,\n  selection,\n  classes: overrideClasses,\n  toggleAllRowsSelected,\n  highlights,\n  onRowClick,\n}: Props) {\n  const { inactive, primary, secondary } = useRowHighlights(row, highlights);\n  const classes = useStyles();\n\n  const handleRowClick = useCallback(() => {\n    onRowClick?.(row);\n  }, [onRowClick, row]);\n\n  const handleFixedWidth = useCallback((cell) => {\n    const cellWidth = (cell.column as RtMpColumnInstance).mpColumn?.width;\n    return cellWidth\n      ? {\n          minWidth: cellWidth,\n          width: cellWidth,\n          maxWidth: cellWidth,\n        }\n      : undefined;\n  }, []);\n\n  return (\n    <TableRow\n      {...row.getRowProps()}\n      className={clsx({\n        [overrideClasses?.row ?? \"\"]: overrideClasses?.row != null,\n        [overrideClasses?.highlightedInactive ?? classes.highlightedInactive]:\n          inactive,\n        [overrideClasses?.highlightedPrimary ?? classes.highlightedPrimary]:\n          primary,\n        [overrideClasses?.highlightedSecondary ?? classes.highlightedSecondary]:\n          secondary,\n        [classes.pointer]: onRowClick,\n        [overrideClasses?.rowSelected ?? \"\"]:\n          overrideClasses?.rowSelected != null && row.isSelected,\n      })}\n      onClick={handleRowClick}\n    >\n      {selection != null && (\n        <MpTableSelectCell\n          classes={overrideClasses}\n          row={row}\n          selection={selection}\n          toggleAllRowsSelected={toggleAllRowsSelected}\n        />\n      )}\n      {row.cells.map((cell) => {\n        return (\n          <TableCell\n            {...cell.getCellProps()}\n            className={clsx(classes.cell, {\n              [classes.renderedCell]:\n                (cell.column as any).mpColumn.render != null,\n            })}\n            style={handleFixedWidth(cell)}\n          >\n            {cell.render(\"Cell\")}\n          </TableCell>\n        );\n      })}\n    </TableRow>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Row } from \"react-table\";\nimport { MpTableHighlights } from \"../../types/Table\";\n\nexport function useRowHighlights(row: Row, highlights?: MpTableHighlights) {\n  const { original } = row;\n  return useMemo(\n    () => ({\n      inactive: highlights?.inactive\n        ? !!original?.[highlights?.inactive]\n        : false,\n      primary: highlights?.primary ? !!original?.[highlights?.primary] : false,\n      secondary: highlights?.secondary\n        ? !!original?.[highlights?.secondary]\n        : false,\n    }),\n    [original, highlights]\n  );\n}\n","import { useMemo, useCallback, useState, useEffect } from \"react\";\n\nexport const getFromStorage = (\n  key: string,\n  storage: Storage = localStorage\n) => {\n  try {\n    const raw = storage.getItem(key);\n    return raw != null && raw !== \"\" ? JSON.parse(raw ?? \"\") : null;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n    return null;\n  }\n};\n\nexport const useStorage = <T>(\n  key: string,\n  storage: Storage = localStorage\n): [T | undefined, (value: T) => void] => {\n  const cache: T | undefined = useMemo(() => {\n    const item = getFromStorage(key, storage);\n    try {\n      return JSON.parse(item);\n    } catch (e) {\n      return item;\n    }\n  }, [key, storage]);\n\n  const setCache = useCallback(\n    (value: T) => {\n      storage.setItem(key, JSON.stringify(value));\n    },\n    [key, storage]\n  );\n\n  return [cache, setCache];\n};\n\nexport const useStoredState = <T = any>(key: string, defaultValue: T) => {\n  const [cache, setCache] = useStorage<T>(key);\n\n  const tuple = useState<T>(cache ?? defaultValue);\n  const [value] = tuple;\n\n  useEffect(() => {\n    setCache(value);\n  }, [setCache, value]);\n\n  return tuple;\n};\n","import React, { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport clsx from \"clsx\";\nimport { MpTableProps, RtMpColumnInstance } from \"../../types/Table\";\nimport {\n  Column,\n  Filters,\n  Row,\n  SortingRule,\n  TableInstance,\n  TableOptions,\n  TableState,\n  useFilters,\n  UseFiltersInstanceProps,\n  UseFiltersOptions,\n  UseFiltersState,\n  usePagination,\n  UsePaginationInstanceProps,\n  UsePaginationOptions,\n  UsePaginationState,\n  useRowSelect,\n  UseRowSelectInstanceProps,\n  UseRowSelectRowProps,\n  UseRowSelectState,\n  useSortBy,\n  UseSortByInstanceProps,\n  UseSortByState,\n  useTable,\n} from \"react-table\";\nimport { Box, Table, TableBody, TableHead, TableRow } from \"@mui/material\";\nimport { convertMpToColumn } from \"../../utils/ColumnAdapter/ColumnAdapter\";\nimport { useDataFormatters } from \"../../utils/DataFormatter/DataFormatter\";\nimport { useDataArguments } from \"../../utils/DataArguments/DataArguments\";\nimport MpTableHeadCell from \"../MpTableHeadCell/MpTableHeadCell\";\nimport useStyles from \"./MpTable.styles\";\nimport MpTableEmptyBody from \"../MpTableEmptyBody/MpTableEmptyBody\";\nimport MpTableHeadSelectCell from \"../MpTableHeadSelectCell/MpTableHeadSelectCell\";\nimport { useOverridables } from \"../../utils/Overridables/Overridables\";\nimport MpTableTotals from \"../MpTableTotals/MpTableTotals\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { Meta } from \"../../types/Meta\";\nimport { MpBulkActionMethods, MpActions } from \"../../types/Actions\";\nimport MpTableRow from \"../MpTableRow/MpTableRow\";\nimport { useStorage } from \"../../utils/Storage/Storage\";\nimport { MpGlobalFilters } from \"../../types/Filter\";\nimport { useGlobalFilters, useRemoteFilters } from \"../../utils/Filter/Filter\";\n\nconst emptyData: any[] = [];\n\nexport default function MpTable<ItemType extends Object = any>({\n  columns: mpColumns,\n  data = emptyData,\n  loading,\n  size,\n  onGetData,\n  dataCount,\n  storageIdentifier,\n  cacheFilters,\n  cacheSorting,\n  cacheGlobalFilter,\n  filterVariant = \"head\",\n  localPagination = false,\n  localSorting = false,\n  localFiltering = false,\n  translations,\n  pageSize = 10,\n  overridables: partialOverridables,\n  rowIdKey,\n  selection,\n  totals,\n  stickyTotals,\n  totalsData,\n  bulkActions,\n  bulkMethods,\n  rowMethods,\n  highlights,\n  clearColumnFilters = false,\n  classes: overrideClasses,\n  asyncGetMethods,\n  locale,\n  disablePagination,\n  disableSorting,\n  onRowClick,\n  enableGlobalActions,\n  breadcrumbFilterData,\n  onEdit,\n  onRowsSelected,\n  emptyChildren,\n  loadingComponent,\n  clearFiltersEvent,\n  resetSelectedRows = true,\n}: MpTableProps<ItemType>) {\n  const columns: Column<any>[] = useMemo(\n    () => mpColumns.map(convertMpToColumn(partialOverridables, disableSorting)),\n    [mpColumns, partialOverridables, disableSorting]\n  );\n  const remoteFiltersColumns = useRemoteFilters(mpColumns);\n  const classes = useStyles();\n  const bodyRef = useRef<HTMLTableSectionElement>(null);\n\n  const pageCount = useMemo(\n    () =>\n      dataCount && !disablePagination\n        ? Math.ceil((dataCount ?? 0) / pageSize)\n        : undefined,\n    [dataCount, pageSize, disablePagination]\n  );\n  const [filtersCache, setFiltersCache] = useStorage<Filters<{}>>(\n    `${storageIdentifier}-filters`\n  );\n  const [sortingCache, setSortingCache] = useStorage<SortingRule<{}>[]>(\n    `${storageIdentifier}-sorting`\n  );\n  const [globalFiltersCache, setGlobalFiltersCache] = useStorage<\n    MpGlobalFilters | undefined\n  >(`${storageIdentifier}-globalFilter`);\n  const [globalFilters, { setGlobalFilters }] = useGlobalFilters(\n    cacheGlobalFilter ? globalFiltersCache : undefined\n  );\n\n  const initialState = useMemo(\n    () =>\n      ({\n        pageIndex: 0,\n        filters: cacheFilters ? filtersCache ?? [] : [],\n        sortBy: cacheSorting ? sortingCache ?? [] : [],\n        pageSize: disablePagination ? undefined : pageSize,\n      } as Partial<TableState & UsePaginationState<{}>>),\n    [\n      filtersCache,\n      cacheFilters,\n      sortingCache,\n      cacheSorting,\n      pageSize,\n      disablePagination,\n    ]\n  );\n\n  const overridables = useOverridables(partialOverridables);\n  const [dataState, setDataState] = useDataFormatters<ItemType>(\n    data,\n    mpColumns,\n    locale\n  );\n\n  const getRowId = useCallback((row: Row) => row?.[rowIdKey], [rowIdKey]);\n\n  const tableOptions = useMemo(\n    () =>\n      ({\n        columns,\n        data: dataState,\n        initialState,\n        manualPagination: !localPagination,\n        manualSortBy: !localSorting,\n        manualFilters: !localFiltering,\n        autoResetFilters: !(localFiltering && !!remoteFiltersColumns?.length),\n        getRowId,\n        autoResetPage: false,\n        pageCount,\n        autoResetSelectedRows: resetSelectedRows,\n      } as TableOptions<{}> & UsePaginationOptions<{}> & UseFiltersOptions<{}>),\n    [\n      columns,\n      dataState,\n      initialState,\n      localPagination,\n      localSorting,\n      localFiltering,\n      remoteFiltersColumns?.length,\n      getRowId,\n      pageCount,\n    ]\n  );\n\n  const tableInstance = useTable(\n    tableOptions,\n    useFilters,\n    useSortBy,\n    usePagination,\n    useRowSelect\n  );\n  const {\n    visibleColumns,\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    page,\n    prepareRow,\n    nextPage,\n    previousPage,\n    gotoPage,\n    getToggleAllRowsSelectedProps,\n    toggleAllRowsSelected,\n    selectedFlatRows,\n    setAllFilters,\n    setFilter,\n  } = tableInstance as TableInstance &\n    UsePaginationInstanceProps<{}> &\n    UseSortByInstanceProps<{}> &\n    UseFiltersInstanceProps<{}> &\n    UseRowSelectInstanceProps<{}>;\n  const state = tableInstance.state as TableState &\n    UsePaginationState<{}> &\n    UseSortByState<{}> &\n    UseFiltersState<{}> &\n    UseRowSelectState<{}>;\n\n  const dataArguments = useDataArguments({\n    state,\n    visibleColumns,\n    localFiltering,\n    localPagination,\n    localSorting,\n    rowIdKey,\n    globalFilters,\n    remoteFiltersColumns,\n  });\n\n  useEffect(() => {\n    onGetData(dataArguments);\n  }, [onGetData, dataArguments]);\n\n  useEffect(() => {\n    if (cacheFilters) {\n      setFiltersCache(state.filters);\n    }\n  }, [cacheFilters, state.filters, setFiltersCache]);\n\n  useEffect(() => {\n    if (cacheSorting) {\n      setSortingCache(state.sortBy);\n    }\n  }, [cacheSorting, state.sortBy, setSortingCache]);\n\n  useEffect(() => {\n    if (cacheGlobalFilter) {\n      setGlobalFiltersCache(globalFilters);\n    }\n  }, [cacheGlobalFilter, setGlobalFiltersCache, globalFilters]);\n\n  useEffect(() => {\n    onEdit?.(dataState);\n  }, [dataState, onEdit]);\n\n  useEffect(() => {\n    if (typeof onRowsSelected === \"function\") {\n      onRowsSelected(selectedFlatRows);\n    }\n  }, [selectedFlatRows, onRowsSelected]);\n\n  useEffect(() => {\n    if (clearFiltersEvent != null) {\n      if (!clearFiltersEvent?.length) setAllFilters([]);\n      if (!!clearFiltersEvent?.length) {\n        clearFiltersEvent.forEach((filter) => setFilter(filter, []));\n      }\n    }\n  }, [clearFiltersEvent, setAllFilters, setFilter]);\n\n  const bodyStyle = useMemo(\n    () => ({\n      opacity: loading ? 0.5 : undefined,\n    }),\n    [loading]\n  );\n\n  const cellCount = useMemo(() => {\n    return columns.length + (!!selection ? 1 : 0);\n  }, [columns, selection]);\n\n  const meta: Meta<ItemType> = useMemo(\n    () => ({\n      totalsData,\n      size,\n      rowMethods,\n      translations,\n      locale,\n      asyncGetMethods,\n      localPagination,\n      localSorting,\n      localFiltering,\n      onInputChange: setDataState,\n    }),\n    [\n      totalsData,\n      size,\n      rowMethods,\n      translations,\n      locale,\n      asyncGetMethods,\n      localPagination,\n      localSorting,\n      localFiltering,\n      setDataState,\n    ]\n  );\n\n  return (\n    <MetaContext.Provider value={meta}>\n      <Box className={classes.parent}>\n        {enableGlobalActions && (\n          <overridables.globalActions\n            selectedRows={selectedFlatRows}\n            selectedRowIds={state.selectedRowIds}\n            actions={bulkActions as MpActions}\n            methods={bulkMethods as MpBulkActionMethods}\n            translations={translations}\n            onGlobalFilter={setGlobalFilters}\n            globalFilters={globalFilters}\n            breadcrumbFilterData={breadcrumbFilterData}\n          />\n        )}\n        <Box\n          className={clsx(classes.wrapper, overrideClasses?.tableWrapper, {\n            [classes.stickyTotalsWrapper]: stickyTotals,\n          })}\n        >\n          <Table\n            size={size}\n            {...getTableProps()}\n            className={clsx(classes.table, overrideClasses?.table)}\n          >\n            <TableHead>\n              {headerGroups.map((headerGroup: any) => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                  {selection != null && (\n                    <MpTableHeadSelectCell\n                      classes={overrideClasses}\n                      selection={selection}\n                      {...getToggleAllRowsSelectedProps()}\n                    />\n                  )}\n                  {headerGroup.headers.map((column: RtMpColumnInstance) => (\n                    <MpTableHeadCell\n                      {...column.getHeaderProps()}\n                      overridables={overridables}\n                      variant={filterVariant === \"head\" ? \"extended\" : \"simple\"}\n                      column={column}\n                      clearFiltersEvent={clearFiltersEvent}\n                      clearColumnFilters={clearColumnFilters}\n                      classes={overrideClasses}\n                    />\n                  ))}\n                </TableRow>\n              ))}\n            </TableHead>\n            <TableBody {...getTableBodyProps()} style={bodyStyle} ref={bodyRef}>\n              {page.length < 1 && (\n                <MpTableEmptyBody\n                  cellCount={cellCount}\n                  loading={loading}\n                  emptyChildren={emptyChildren}\n                  loadingComponent={loadingComponent}\n                />\n              )}\n              {page.map((row: Row & UseRowSelectRowProps<{}>) => {\n                prepareRow(row);\n                return (\n                  <MpTableRow\n                    key={row.getRowProps().key}\n                    row={row}\n                    highlights={highlights}\n                    classes={overrideClasses}\n                    selection={selection}\n                    toggleAllRowsSelected={toggleAllRowsSelected}\n                    onRowClick={onRowClick}\n                  />\n                );\n              })}\n            </TableBody>\n            {!!totals && !!totalsData && (\n              <MpTableTotals\n                footerGroups={footerGroups}\n                hasSelection={selection != null}\n                classes={overrideClasses}\n                bodyRef={bodyRef}\n                stickyTotals={stickyTotals}\n              />\n            )}\n          </Table>\n        </Box>\n        {!disablePagination && (\n          <overridables.paginator\n            pageSize={state.pageSize}\n            itemCount={dataCount}\n            pageCount={pageCount}\n            pageIndex={state.pageIndex}\n            previousPage={previousPage}\n            nextPage={nextPage}\n            gotoPage={gotoPage}\n            loading={loading}\n            translations={translations}\n            selectedCount={selectedFlatRows.length}\n          />\n        )}\n      </Box>\n    </MetaContext.Provider>\n  );\n}\n","import { useMemo } from \"react\";\nimport { defaultOverridables } from \"../../overridables/Overridables\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\n\nexport function useOverridables(\n  overridables?: Partial<MpTableOverridablesMap>\n) {\n  return useMemo(\n    () => ({\n      ...defaultOverridables,\n      ...(overridables ?? {}),\n    }),\n    [overridables]\n  );\n}\n","import { MpColumn } from \"./../../types/Table\";\nimport { MpGlobalFilters } from \"./../../types/Filter\";\nimport { useMemo, useRef } from \"react\";\nimport {\n  ColumnInstance,\n  TableState,\n  UseFiltersState,\n  UsePaginationState,\n  UseSortByState,\n} from \"react-table\";\nimport { MpTableDataArguments } from \"../../types/Table\";\n\ninterface Options {\n  state: TableState &\n    UsePaginationState<{}> &\n    UseSortByState<{}> &\n    UseFiltersState<{}>;\n  visibleColumns: ColumnInstance<any>[];\n  rowIdKey: string;\n  localFiltering?: boolean;\n  localPagination?: boolean;\n  localSorting?: boolean;\n  globalFilters?: MpGlobalFilters;\n  remoteFiltersColumns?: MpColumn[];\n}\n\nfunction shallowEqual(a?: Record<string, any>, b?: Record<string, any>) {\n  return ![...Object.keys(a ?? {}), ...Object.keys(b ?? {})].find((key) => {\n    return a?.[key] !== b?.[key];\n  });\n}\n\nexport function useDataArguments({\n  state,\n  visibleColumns,\n  localFiltering,\n  localSorting,\n  rowIdKey,\n  localPagination,\n  globalFilters,\n  remoteFiltersColumns,\n}: Options): MpTableDataArguments {\n  const sortBy = useMemo(() => (localSorting ? undefined : state.sortBy), [\n    localSorting,\n    state,\n  ]);\n  const pageSize = useMemo(\n    () => (localPagination ? undefined : state.pageSize),\n    [state, localPagination]\n  );\n  const pageIndex = useMemo(\n    () => (localPagination ? undefined : state.pageIndex),\n    [state, localPagination]\n  );\n\n  const hybridFilterCache = useRef<any>();\n  const filters = useMemo(() => {\n    if (localFiltering && !remoteFiltersColumns?.length) {\n      return undefined;\n    } else if (!localFiltering && !remoteFiltersColumns?.length) {\n      return state.filters;\n    } else {\n      const hybridFilters = state.filters\n        ?.filter((filter) => {\n          return !!remoteFiltersColumns?.find(({ key }) => key === filter.id);\n        })\n        ?.reduce((acc, filter) => {\n          acc[filter.id] = filter.value;\n          return acc;\n        }, {} as Record<string, any>);\n      if (!shallowEqual(hybridFilterCache.current, hybridFilters)) {\n        hybridFilterCache.current = hybridFilters;\n        return hybridFilters;\n      } else {\n        return hybridFilterCache.current;\n      }\n    }\n  }, [localFiltering, remoteFiltersColumns, state]);\n\n  const columnIds = useMemo(() => visibleColumns.map((column) => column.id), [\n    visibleColumns,\n  ]);\n  const globalFilterData = useMemo(() => globalFilters, [globalFilters]);\n\n  return useMemo(() => {\n    const result: MpTableDataArguments = {\n      columns: [rowIdKey, ...columnIds],\n    };\n    if (pageSize != null && pageIndex != null) {\n      result.cursor = pageIndex * pageSize;\n    }\n    if (pageSize != null) {\n      result.limit = pageSize;\n    }\n    if (sortBy != null) {\n      result.sort = sortBy.map((rule) => ({\n        key: rule.id,\n        desc: rule.desc,\n      }));\n    }\n    if (filters != null) {\n      result.filters = filters;\n    }\n    if (globalFilterData != null) {\n      result.globalFilters = globalFilterData;\n    }\n\n    return result;\n  }, [\n    pageSize,\n    pageIndex,\n    columnIds,\n    sortBy,\n    filters,\n    rowIdKey,\n    globalFilterData,\n  ]);\n}\n","import { useStoredState } from \"./../Storage/Storage\";\nimport moment from \"moment\";\nimport {\n  Datepicker,\n  DatepickerListItem,\n  Months,\n} from \"./../../types/Datepicker\";\nimport { useCallback, useMemo } from \"react\";\n\nexport const getMonths = (year: number): Months => ({\n  q1: [\n    {\n      key: \"month\",\n      label: \"January\",\n      value: `Jan, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"February\",\n      value: `Feb, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"March\",\n      value: `Mar, ${year}`,\n    },\n  ],\n  q2: [\n    {\n      key: \"month\",\n      label: \"April\",\n      value: `Apr, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"May\",\n      value: `May, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"June\",\n      value: `Jun, ${year}`,\n    },\n  ],\n  q3: [\n    {\n      key: \"month\",\n      label: \"July\",\n      value: `Jul, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"August\",\n      value: `Aug, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"September\",\n      value: `Sep, ${year}`,\n    },\n  ],\n  q4: [\n    {\n      key: \"month\",\n      label: \"October\",\n      value: `Oct, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"November\",\n      value: `Nov, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"December\",\n      value: `Dec, ${year}`,\n    },\n  ],\n});\n\nexport const getQuarters = (year: number, months: Months) => {\n  const { q1, q2, q3, q4 } = months;\n  return [\n    {\n      key: \"quarter\",\n      label: \"Q1\",\n      value: `Q1, ${year}`,\n      items: q1,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q2\",\n      value: `Q2, ${year}`,\n      items: q2,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q3\",\n      value: `Q3, ${year}`,\n      items: q3,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q4\",\n      value: `Q4, ${year}`,\n      items: q4,\n    },\n  ];\n};\n\nexport const useDatepickerData = () => {\n  let year = 2021;\n  const years = useMemo((): DatepickerListItem[] => {\n    const items = [];\n\n    while (year > 2015) {\n      const stringifiedYear = year.toString();\n      const months = getMonths(year);\n      const quarters = getQuarters(year, months);\n      items.push({\n        key: \"year\",\n        label: stringifiedYear,\n        value: stringifiedYear,\n        items: quarters,\n      });\n      year--;\n    }\n\n    return items;\n  }, [year]);\n\n  return years;\n};\n\nexport default function useDatepicker() {\n  const [date, setDate] = useStoredState<string | null>(\"datepicker\", null);\n  const [dateFilter, setDateFilter] = useStoredState<Datepicker | null>(\n    \"datepickerISO\",\n    null\n  );\n  const [dateFrom, setDateFrom] = useStoredState<string | null>(\n    \"datepickerDateFrom\",\n    null\n  );\n  const [dateTo, setDateTo] = useStoredState<string | null>(\n    \"datepickerDateTo\",\n    null\n  );\n\n  const parseQuarter = useCallback((quarterString: string): Datepicker => {\n    const quarterNum: number = Number(quarterString.charAt(1));\n    const year: string = quarterString.substr(3);\n    const date = moment(year).quarter(quarterNum);\n    return {\n      dateFrom: date.startOf(\"quarter\").toISOString(),\n      dateTo: date.endOf(\"quarter\").toISOString(),\n    };\n  }, []);\n\n  const parseYear = useCallback((yearString: string): Datepicker => {\n    const date = moment(yearString);\n    return {\n      dateFrom: date.startOf(\"year\").toISOString(),\n      dateTo: date.endOf(\"year\").toISOString(),\n    };\n  }, []);\n\n  const parseMonth = useCallback((monthString: string): Datepicker => {\n    const date = moment(monthString);\n    return {\n      dateFrom: date.startOf(\"month\").toISOString(),\n      dateTo: date.endOf(\"month\").toISOString(),\n    };\n  }, []);\n\n  const parseDate = useCallback(\n    (dateString: string | null) =>\n      !!dateString && moment(dateString).format(\"YYYY MMM\"),\n    []\n  );\n\n  const setDatepickerValues = useCallback(\n    (\n      value: string,\n      key: string,\n      callback: (data: Datepicker | null) => void\n    ) => {\n      if (key === \"dateFrom\") {\n        const dateFromLabel = parseDate(value);\n        const dateToLabel = parseDate(dateTo) ?? \"\";\n        const label = `${dateFromLabel} - ${dateToLabel}`;\n        callback({\n          dateFrom: dateFrom ?? \"\",\n          dateTo: dateTo ?? \"\",\n        });\n        setDate(label);\n      } else if (key === \"dateTo\") {\n        callback({\n          dateFrom: dateFrom ?? \"\",\n          dateTo: dateTo ?? \"\",\n        });\n        const dateFromLabel = parseDate(dateFrom) ?? \"\";\n        const dateToLabel = parseDate(value);\n        const label = `${dateFromLabel} - ${dateToLabel}`;\n        setDate(label);\n      } else {\n        setDate(value);\n      }\n\n      let filter: Datepicker | null = null;\n      switch (key) {\n        case \"month\":\n          filter = parseMonth(value);\n          break;\n        case \"quarter\":\n          filter = parseQuarter(value);\n          break;\n        case \"year\":\n          filter = parseYear(value);\n          break;\n        case \"dateFrom\":\n          setDateFrom(moment(value).toISOString());\n          break;\n        case \"dateTo\":\n          setDateTo(moment(value).toISOString());\n      }\n      if (!!filter) {\n        callback(filter);\n        setDateFilter(filter);\n      }\n    },\n    [\n      dateFrom,\n      dateTo,\n      parseDate,\n      parseMonth,\n      parseQuarter,\n      parseYear,\n      setDate,\n      setDateFilter,\n      setDateFrom,\n      setDateTo,\n    ]\n  );\n\n  const handleFilterClick = useCallback(() => {\n    if (!!dateFrom && !!dateTo)\n      setDateFilter({\n        dateFrom,\n        dateTo,\n      });\n  }, [dateFrom, dateTo, setDateFilter]);\n\n  const clearSelected = useCallback(\n    (callback: (data: Datepicker | null) => void) => {\n      setDate(null);\n      setDateFilter(null);\n      callback(null);\n    },\n    [setDate, setDateFilter]\n  );\n\n  return {\n    date,\n    setDatepickerValues,\n    dateFilter,\n    clearSelected,\n    handleFilterClick,\n    dateFrom,\n    dateTo,\n  };\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  endItem: {\n    paddingTop: 14,\n    paddingBottom: 12,\n    paddingLeft: 0,\n    paddingRight: 0,\n    minWidth: 130,\n  },\n  paper: {\n    maxWidth: 340,\n    maxHeight: 580,\n    overflowY: \"auto\",\n    position: \"relative\",\n    paddingTop: 50,\n    \"-ms-overflow-style\": \"none\", // IE and Edge\n    scrollbarWidth: \"none\", // Firefox\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  toggle: {\n    height: 44,\n    maxWidth: 195,\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    paddingLeft: 14,\n    paddingRight: 38,\n    position: \"relative\",\n    color: \"#69717D\",\n  },\n  selected: {\n    color: \"black\",\n  },\n  arrow: {\n    position: \"absolute\",\n    right: 14,\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  noPadding: {\n    padding: 0,\n    alignItems: \"center\",\n  },\n  typography: {\n    padding: \"0 35px\",\n    width: \"100%\",\n  },\n  fullWidth: {\n    width: \"100%\",\n    position: \"relative\",\n    paddingLeft: 40,\n  },\n  listItem: {\n    background: \"white\",\n    flexDirection: \"row-reverse\",\n    \"&:hover\": {\n      background: \"white\",\n      \"& > .MuiTypography-root\": {\n        fontWeight: \"bold\",\n      },\n    },\n    border: \"1px solid rgba(0, 0, 0, 0.1)\",\n    borderTop: 0,\n    borderLeft: 0,\n    \"&:last-child\": {\n      borderBottom: 0,\n    },\n  },\n  iconContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    left: 20,\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    \"& .MuiSvgIcon-root\": {\n      width: 12,\n      height: 9,\n    },\n  },\n  active: {\n    fontWeight: \"bold\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 50,\n    paddingLeft: 40,\n    paddingRight: 25,\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.1)\",\n    position: \"fixed\",\n    top: 0,\n    width: \"100%\",\n    zIndex: 1,\n    background: \"white\",\n  },\n  headerAction: {\n    color: \"#69717D\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"black\",\n      fontWeight: \"bold\",\n    },\n  },\n});\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function Check(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      width=\"12\"\n      height=\"9\"\n      viewBox=\"0 0 12 9\"\n      fill=\"none\"\n      {...props}\n      style={{ fill: \"none\", width: 12, height: 9, overflow: \"visible\" }}\n    >\n      <path d=\"M1 4L4.5 7.5L11 1\" stroke=\"#4DA621\" strokeWidth=\"2\" />\n    </SvgIcon>\n  );\n}\n","import React from \"react\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport clsx from \"clsx\";\nimport { DatepickerListItem } from \"../../types/Datepicker\";\nimport Check from \"../../icons/Check\";\nimport { List, ListItem, Typography } from \"@mui/material\";\n\ninterface IProps {\n  data: DatepickerListItem[];\n  onClick: (value: string, key: string) => void;\n  date: string | null;\n}\n\nexport default function MpDatepickerItem({ data, onClick, date }: IProps) {\n  const classes = useStyles();\n\n  return (\n    <List disablePadding>\n      {data.map((item) => {\n        const isActive = date === item.value;\n        return (\n          <ListItem\n            classes={{\n              root: clsx({\n                [classes.listItem]: true,\n                [classes.noPadding]: !!item?.items,\n                [classes.endItem]: !item?.items,\n              }),\n            }}\n            onClick={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n              e.stopPropagation();\n              onClick(item.value, item.key);\n            }}\n            button\n            key={item.value}\n            disableRipple\n          >\n            <Typography\n              className={clsx({\n                [classes.typography]: item?.items,\n                [classes.fullWidth]: true,\n                [classes.active]: isActive,\n              })}\n              variant=\"body2\"\n            >\n              {isActive && <Check className={classes.iconContainer} />}\n              {item.label}\n            </Typography>\n            {item?.items && (\n              <MpDatepickerItem\n                data={item.items}\n                onClick={onClick}\n                date={date}\n              />\n            )}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Check from \"../../icons/Check\";\nimport { MpTableTranslations } from \"../../types/Table\";\nimport { FromToFilterProps } from \"../../types/Datepicker\";\n\ninterface Props {\n  onSelectAll: () => void;\n  date: string | null;\n  translations?: MpTableTranslations;\n  FromToFilter?: React.ComponentType<FromToFilterProps>;\n  filterProps: FromToFilterProps;\n}\n\nexport default function MpDatepickerHeader({\n  date,\n  onSelectAll,\n  translations,\n  FromToFilter,\n  filterProps,\n}: Props) {\n  const classes = useStyles();\n\n  const [isFromTo, setIsFromTo] = useState<boolean>(false);\n\n  const switchView = useCallback(() => setIsFromTo(true), []);\n\n  if (isFromTo && !!FromToFilter) return <FromToFilter {...filterProps} />;\n\n  return (\n    <Box className={classes.header}>\n      {!date && <Check className={classes.iconContainer} />}\n      <Typography\n        onClick={onSelectAll}\n        classes={{ root: classes.headerAction }}\n        variant=\"body2\"\n      >\n        {translations?.allTime ?? \"All time\"}\n      </Typography>\n      {!!FromToFilter && (\n        <Typography\n          onClick={(e) => {\n            e.stopPropagation();\n            switchView();\n          }}\n          classes={{ root: classes.headerAction }}\n          variant=\"body2\"\n        >{`${translations?.from ?? \"From\"} - ${\n          translations?.to ?? \"To\"\n        }`}</Typography>\n      )}\n    </Box>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function DatepickerArrowDown(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      width=\"10\"\n      height=\"5\"\n      viewBox=\"0 0 10 5\"\n      {...props}\n      style={{ fill: \"none\", width: 10, height: 5, overflow: \"visible\" }}\n    >\n      <path\n        d=\"M1.5 1.5L6.5 6.5L11.5 1.5\"\n        stroke=\"#69717D\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function DatepickerArrowUp(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      fill=\"none\"\n      width=\"10\"\n      height=\"5\"\n      viewBox=\"0 0 10 5\"\n      {...props}\n      style={{ fill: \"none\", width: 10, height: 5, overflow: \"visible\" }}\n    >\n      <path\n        d=\"M11.5 6.5L6.5 1.5L1.5 6.5\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </SvgIcon>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport DatepickerArrowDown from \"../../icons/DatepickerArrowDown\";\nimport DatepickerArrowUp from \"../../icons/DatepickerArrowUp\";\n\ninterface Props {\n  anchorEl: null | HTMLElement;\n}\n\nexport default function MpDatepickerArrow({ anchorEl }: Props) {\n  const classes = useStyles();\n\n  const Arrow = useMemo(\n    () => (anchorEl === null ? DatepickerArrowDown : DatepickerArrowUp),\n    [anchorEl]\n  );\n\n  return <Arrow className={classes.arrow} />;\n}\n","import {\n  Box,\n  ClickAwayListener,\n  Fade,\n  Paper,\n  Popper,\n  PopperProps,\n} from \"@mui/material\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Datepicker,\n  DatepickerListItem,\n  FromToFilterProps,\n} from \"../../types/Datepicker\";\nimport useDatepicker, {\n  useDatepickerData,\n} from \"../../utils/Datepicker/Datepicker\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport MpDatepickerItem from \"./MpDatepickerItem\";\nimport MpDatepickerHeader from \"./MpDatepickerHeader\";\nimport { MpTableTranslations } from \"../../types/Table\";\nimport MpDatepickerArrow from \"./MpDatepickerArrow\";\n\ninterface Props {\n  items?: DatepickerListItem[];\n  placement?: PopperProps[\"placement\"];\n  translations?: MpTableTranslations;\n  FromToFilter?: React.ComponentType<FromToFilterProps>;\n  onGetData: (data: Datepicker) => void;\n}\n\nexport default function MpDatepicker({\n  items,\n  placement,\n  translations,\n  FromToFilter,\n  onGetData,\n}: Props) {\n  const classes = useStyles();\n  const {\n    setDatepickerValues,\n    clearSelected,\n    date,\n    handleFilterClick,\n    dateFrom,\n    dateTo,\n  } = useDatepicker();\n  const defaultData = useDatepickerData();\n  const data = useMemo(() => items ?? defaultData, [defaultData, items]);\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const open = useMemo(() => !!anchorEl, [anchorEl]);\n  const id = useMemo(() => (open ? \"datepicker-popper\" : undefined), [open]);\n  const filterProps = useMemo(\n    (): FromToFilterProps => ({\n      onFilter: () => {\n        handleFilterClick();\n        setAnchorEl(null);\n      },\n      onDateChange: setDatepickerValues,\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n      onGetData: onGetData,\n    }),\n    [dateFrom, dateTo, handleFilterClick, onGetData, setDatepickerValues]\n  );\n\n  const togglePopper = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      setAnchorEl(anchorEl ? null : event.currentTarget);\n    },\n    [anchorEl]\n  );\n\n  const handleDatepickerClick = useCallback(\n    (value: string, key: string) => {\n      setAnchorEl(null);\n      setDatepickerValues(value, key, onGetData);\n    },\n    [onGetData, setDatepickerValues]\n  );\n\n  const handleSelectAll = useCallback(() => {\n    clearSelected(onGetData);\n    setAnchorEl(null);\n  }, [clearSelected, onGetData]);\n\n  return (\n    <ClickAwayListener onClickAway={() => setAnchorEl(null)}>\n      <Box>\n        <Paper\n          className={clsx({\n            [classes.toggle]: true,\n            [classes.selected]: !!date,\n          })}\n          aria-describedby={id}\n          onClick={togglePopper}\n        >\n          {date ?? \"All time\"}\n          <MpDatepickerArrow anchorEl={anchorEl} />\n        </Paper>\n        <Popper\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          style={{ zIndex: 1299 }}\n          placement={placement ?? \"bottom-end\"}\n          transition\n        >\n          {({ TransitionProps }) => (\n            <Fade {...TransitionProps} timeout={350}>\n              <Paper elevation={4} className={classes.paper}>\n                <MpDatepickerHeader\n                  translations={translations}\n                  date={date}\n                  onSelectAll={handleSelectAll}\n                  FromToFilter={FromToFilter}\n                  filterProps={filterProps}\n                />\n                <MpDatepickerItem\n                  date={date}\n                  data={data}\n                  onClick={handleDatepickerClick}\n                />\n              </Paper>\n            </Fade>\n          )}\n        </Popper>\n      </Box>\n    </ClickAwayListener>\n  );\n}\n"],"names":["useDebounce","ms","handle","useRef","useCallback","cb","current","clearTimeout","setTimeout","apply","concat","slice","call","arguments","useUnmounted","ref","useEffect","MetaContext","createContext","useFilterOptions","_ref","filter","type","executeMethod","method","search","resultSetter","loadingSetter","latestRequest","unmounted","filterItems","request","Date","now","then","result","Array","isArray","useFilterItems","column","useContext","asyncGetMethods","localFiltering","_useContext","preFilteredRows","id","_useState","useState","items","setItems","_useState2","asyncGet","loading","setLoading","debounce","getItems","searchText","_filter$items$length","_filter$items","_filter$items$length2","_filter$items2","rows","key","length","localItems","map","row","values","val","i","arr","indexOf","item","toLowerCase","text","value","label","useGlobalFilters","initialValue","globalFilters","_useState3","setGlobalFilters","prevState","_extends2","_ref2","_extends","useMemo","handleSetGlobalFilter","useClearFilters","_useState4","undefined","setEmptyInstance","clearFiltersEvent","clearFilters","filters","useStyles$i","makeStyles","emptyAnchor","cursor","userSelect","empty","Select","_ref$value","setValue","doFiltering","mpColumn","translations","classes","useStyles","_useFilterItems","handleChange","event","target","checked","includes","name","handleClear","preventDefault","React","createElement","Box","display","flexDirection","paddingLeft","justifyContent","alignItems","Typography","variant","paddingX","paddingY","Link","color","onClick","className","clear","_translations$clear","Divider","_items$length","maxHeight","overflow","FormControl","component","FormGroup","FormControlLabel","onChange","control","Checkbox","_value$includes","padding","minHeight","CircularProgress","_items$length2","TabUnselected","fontSize","MpFilterType","naked","width","Text","_filter$label","InputBase","placeholder","_translations$search","autoFocus","endAdornment","unitLabel","useStyles$g","theme","searchIcon","marginRight","spacing","SearchSelect","setSearchText","handleSearchText","startAdornment","Search","NumberInput","forwardRef","inputRef","props","replace","m","s","match","_s$match","_s$match$","Object","assign","inputMode","NumberRange","handleChangeMin","evVal","min","max","_translations$from","from","inputComponent","_value$max","handleChangeMax","to","_translations$to","toPercent","parseInt","Math","round","number","toCurrency","options","toLocaleString","locale","modifier","style","currency","_value$toLocaleString","formatDate","moment","_ref$locale","d","format","formatDatetime","_ref2$locale","MpColumnFormat","MpColumnRender","mapFormatter","_options$valueMap$val","_options$valueMap","valueMap","getRawValue","_item$rawValueKey","rawValueKey","_filterMap","_filterTypeMap","percent","date","dateTime","_formatMap","matchArray","columnIds","filterValue","find","original","filterMap","select","searchSelect","numberRange","MpTableFilter","overridables","filterType","_column$mpColumn","_column$mpColumn2","_column$mpColumn3","_column$mpColumn3$fil","FilterComponent","_overridables$filters2","toVal","mix","k","y","str","clsx","tmp","x","getColumnAction","action","Error","params","rowId","slug","methods","methodsParams","selectedRows","selectedIds","selectedRowIds","useStyles$e","small","Button","rowMethods","size","icon","handleClick","stopPropagation","handleRowAction","IconButton","Icon","MUIButton","sizeSmall","Toggle","defaultValue","toggle","setToggle","newToggle","textColor","inner","ToggleButton","backgroundColor","ToggleButtonGroup","exclusive","mapToggles","Switch","iconLeft","iconRight","labelLeft","labelRight","innerRight","setChecked","handlePropagation","e","innerLeft","MUISwitch","useRendererOptions","cell","renderOptions","render","_renderOptions$styleM","_renderOptions$styleM2","_cell$value","styleMap","_renderOptions$valueM2","_cell$value2","columnId","columnIndex","index","inputProps","StatusPill","_useRendererOptions","createPalette","primary","main","getContrastText","textAlign","Chip","chipStyle","useStyles$d","root","input","height","rendererMap","_rendererMap","statusPill","button","Input","onInputChange","inputValue","setInputValue","handleInputChange","getFooterValue","totalsData","_totalsData$key","noOpFilter","convertMpToColumn","disableSorting","_column$label","_column$filter","_column$filter2","col","Header","accessor","disableSortBy","sort","remote","_overridables$filterF","_overridables$filterF2","filterTypeMap","filterFunctions","totals","Footer","_overridables$rendere","_overridables$rendere2","Cell","renderers","useDataFormatters","data","columns","dataState","setDataState","formattedData","formattableColumns","reduce","acc","_format$type","formatMap","stateCopy","useStyles$c","_theme$palette","_theme$palette$text","wrapper","whiteSpace","position","disabledSort","palette","secondary","fixedWidth","minWidth","fixedColumnWidth","maxWidth","hoveredCellWithFilters","background","mode","darken","lighten","light","MpTableHeadCellOptions","anchorEl","canSort","onClose","isSortedDesc","doSorting","immediateValue","setFilter","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","headFilter","_excluded","MpTableHeadCell","_column$filterValue","_overrideClasses$hove","_clsx","_clsx2","_ref$variant","clearColumnFilters","overrideClasses","getSortByToggleProps","sortProps","_objectWithoutPropertiesLoose","_column$getSortByTogg","cellRef","isHovered","setIsHovered","hasWidth","_column$mpColumn4","fixedHeadWidth","isExtended","hasFilter","optionsAnchor","setOptionsAnchor","closeOptions","handleClearFilters","handleMouseLeave","filterSet","highlightCell","Fragment","TableCell","onMouseEnter","handleMouseEnter","onMouseLeave","headIndicator","isHoveredCell","hasClear","useStyles$b","parent","borderRadius","overflowX","borderTopLeftRadius","borderTopRightRadius","table","stickyTotalsWrapper","zIndex","renderedCell","paddingTop","paddingBottom","MpTableEmptyBody","cellCount","emptyChildren","loadingComponent","renderLoader","HourglassEmpty","renderChildren","TableRow","colSpan","useStyles$a","headSelectCell","paddingRight","borderRight","cellCheckbox","margin","MpTableHeadSelectCell","selection","handleCheck","headSelectCellCheckbox","MpTableHeadFilter","handleSubmit","onSubmit","SortByAlpha","flexGrow","useStyles$9","spacer","MpTablePaginator","pageIndex","previousPage","itemCount","nextPage","pageCount","pageSize","selectedCount","hasPrevious","hasNext","infoText","_translations$total","_translations$selecte","total","selected","join","of","_translations$of","Tooltip","title","disabled","ChevronLeft","_translations$nextPag","ChevronRight","Filter","SvgIcon","viewBox","fill","FilterArrowDown","FilterArrowUp","FilterOutline","iconWrapper","clearIcon","contrastText","left","MpTableHeadIndicator","handleClearClick","ArrowDropDown","ArrowDropUp","Clear","ExpandMore","useStyles$7","useStyles$6","transition","transitions","create","duration","complex","iconSpacer","menuPaper","marginTop","menuItem","overlay","itemDivider","borderBottom","marginLeft","noBorder","MpTableBulkActions","actions","hasSelectedRows","setOpen","anchorRef","handleToggle","prevOpen","handleClose","_anchorRef$current","contains","handleListKeyDown","handleBulkAction","actionsMap","MenuItem","Close","Menu","Popper","role","disablePortal","TransitionProps","Grow","placement","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","disablePadding","onGlobalFilter","handleGlobalFilter","TextField","InputProps","BreadcrumbFilterDown","xmlns","BreadcrumbSeparator","stroke","strokeWidth","strokeLinecap","getNestedElementsMapReduce","entries","accumulator","_selection$key","filteredValue","breadcrumb","_selection$key2","BreadcrumbList","_translations$breadcr5","_translations$breadcr6","selectedKey","selectedId","breadcrumbMap","ListItem","_translations$breadcr","_translations$breadcr2","_onMouseEnter","breadcrumbs","_translations$breadcr4","Grid","List","useStyles$5","dropdownIconRoot","seperator","pointer","MpTableBreadcrumb","_globalFilters$breadc","setSelection","setBreadcrumbs","containerRef","setAnchorEl","popoverId","updateNestedElements","handleBreadcrumbHover","itemKeys","keys","itemEntries","selectionDepth","_breadcrumbs$selected","_selectedPath","selectionObject","selectedPath","prevSelectedObject","_breadcrumbs$key","_itemEntries$i","selectionKeys","_extends3","_extends4","_breadcrumbs$selected2","handleBreadcrumbClick","isLastClick","slicedArray","selectionEntries","slicedObject","fromEntries","_Object$keys","breadcrumbGridMap","gridItems","_i","_entries","push","_entries$_i","breadcrumbSelectionMap","_translations$all","lastItem","breadcrumbItems","all","_loop","_entries2$_i","_entries2","_i2","Breadcrumbs","separator","PaperProps","container","MpTableGlobalActions","breadcrumbFilterData","MpTableGlobalFilter","paginator","globalActions","footer","boxShadow","raised","paper","shadows","win","window","MpTableStickyTotalsFooter","children","bodyRef","useLayoutEffect","timeout","transformValue","update","_bodyRef$current$getB","_bodyRef$current","_ref$current$offsetHe","_ref$current","getBoundingClientRect","bottom","innerHeight","offsetHeight","transform","calculatedTransform","classList","add","remove","queuedUpdate","addEventListener","triggerUpdate","removeEventListener","TableFooter","useStyles$3","totalsSelectCell","MpTableTotals","footerGroups","hasSelection","stickyTotals","handleFixedWidth","cellWidth","groups","group","getFooterGroupProps","headers","getFooterProps","useStyles$2","selectCell","MpTableSelectCell","toggleAllRowsSelected","getToggleRowSelectedProps","toggleRowSelected","selectCellCheckbox","useStyles$1","highlightedPrimary","highlightedSecondary","highlightedInactive","_overrideClasses$row","_overrideClasses$high","_overrideClasses$high2","_overrideClasses$high3","_overrideClasses$rowS","onRowClick","useRowHighlights","highlights","inactive","_useRowHighlights","handleRowClick","_cell$column$mpColumn","getRowProps","rowSelected","isSelected","cells","getCellProps","getFromStorage","storage","localStorage","raw","getItem","JSON","parse","console","warn","useStorage","setItem","stringify","useStoredState","_useStorage","cache","setCache","tuple","emptyData","MpTable","mpColumns","onGetData","dataCount","storageIdentifier","cacheFilters","cacheSorting","cacheGlobalFilter","filterVariant","_ref$filterVariant","localPagination","_ref$localPagination","localSorting","_ref$localSorting","_ref$localFiltering","_ref$pageSize","partialOverridables","rowIdKey","bulkActions","bulkMethods","_ref$clearColumnFilte","disablePagination","enableGlobalActions","onEdit","onRowsSelected","_ref$resetSelectedRow","resetSelectedRows","useRemoteFilters","ceil","filtersCache","setFiltersCache","_useStorage2","sortingCache","setSortingCache","setGlobalFiltersCache","_useGlobalFilters","initialState","sortBy","defaultOverridables","useOverridables","_useDataFormatters","tableOptions","manualPagination","manualSortBy","manualFilters","autoResetFilters","remoteFiltersColumns","getRowId","autoResetPage","autoResetSelectedRows","useTable","useFilters","useSortBy","usePagination","useRowSelect","getTableProps","tableInstance","getTableBodyProps","headerGroups","page","prepareRow","gotoPage","getToggleAllRowsSelectedProps","selectedFlatRows","setAllFilters","state","dataArguments","useDataArguments","visibleColumns","hybridFilterCache","_state$filters","_state$filters$filter","hybridFilters","a","b","globalFilterData","limit","rule","desc","forEach","opacity","meta","Provider","tableWrapper","Table","TableHead","headerGroup","getHeaderGroupProps","getHeaderProps","TableBody","bodyStyle","MpTableRow","getMonths","year","q1","q2","q3","q4","getQuarters","months","endItem","overflowY","scrollbarWidth","arrow","right","top","noPadding","typography","fullWidth","listItem","fontWeight","border","borderTop","borderLeft","iconContainer","active","header","headerAction","Check","MpDatepickerItem","isActive","disableRipple","_translations$allTime","onSelectAll","FromToFilter","filterProps","isFromTo","setIsFromTo","switchView","allTime","DatepickerArrowDown","DatepickerArrowUp","MpDatepickerArrow","Arrow","MpDatepicker","useDatepicker","_useStoredState","setDate","_useStoredState2","dateFilter","setDateFilter","_useStoredState3","dateFrom","setDateFrom","_useStoredState4","dateTo","setDateTo","parseQuarter","quarterString","quarterNum","Number","charAt","substr","quarter","startOf","toISOString","endOf","parseYear","yearString","parseMonth","monthString","parseDate","dateString","setDatepickerValues","callback","_parseDate","dateToLabel","_parseDate2","dateFromLabel","handleFilterClick","clearSelected","_useDatepicker","defaultData","stringifiedYear","toString","quarters","onFilter","onDateChange","togglePopper","currentTarget","handleDatepickerClick","handleSelectAll","Fade","elevation","MpDatepickerHeader"],"mappings":"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"}