{"version":3,"file":"table.modern.js","sources":["../../lib/src/utils/Debounce/Debounce.ts","../../lib/src/utils/MetaContext/MetaContext.ts","../../lib/src/utils/Filter/Filter.ts","../../lib/src/filters/Select/Select.styles.ts","../../lib/src/filters/Select/Select.tsx","../../lib/src/filters/Text/Text.styles.ts","../../lib/src/types/Filter.ts","../../lib/src/filters/Text/Text.tsx","../../lib/src/filters/SearchSelect/SearchSelect.styles.ts","../../lib/src/filters/SearchSelect/SearchSelect.tsx","../../lib/src/filters/NumberRange/NumberRange.styles.ts","../../lib/src/filters/NumberRange/NumberRange.tsx","../../lib/src/formats/Numbers/Numbers.ts","../../lib/src/formats/Currency/Currency.ts","../../lib/src/formats/Date/Date.ts","../../lib/src/types/Table.ts","../../lib/src/formats/Map/Map.ts","../../lib/src/formats/Formats.ts","../../lib/src/filters/Filters.ts","../../lib/src/components/MpTableFilter/MpTableFilter.tsx","../../lib/node_modules/clsx/dist/clsx.m.js","../../lib/src/utils/Actions/Actions.ts","../../lib/src/renderers/actions/Button/Button.styles.ts","../../lib/src/renderers/actions/Button/Button.tsx","../../lib/src/renderers/actions/Toggle/Toggle.tsx","../../lib/src/renderers/actions/Switch/Switch.tsx","../../lib/src/utils/Renderer/Renderer.ts","../../lib/src/renderers/StatusPill/StatusPill.tsx","../../lib/src/renderers/Input/Input.styles.ts","../../lib/src/renderers/Renderers.ts","../../lib/src/renderers/Input/Input.tsx","../../lib/src/utils/ColumnAdapter/ColumnAdapter.ts","../../lib/src/utils/DataFormatter/DataFormatter.ts","../../lib/src/components/MpTableHeadCell/MpTableHeadCell.styles.ts","../../lib/src/components/MpTableHeadCellOptions/MpTableHeadCellOptions.tsx","../../lib/src/components/MpTableHeadCell/MpTableHeadCell.tsx","../../lib/src/components/MpTable/MpTable.styles.ts","../../lib/src/components/MpTableEmptyBody/MpTableEmptyBody.tsx","../../lib/src/components/MpTableHeadSelectCell/MpTableHeadSelectCell.styles.ts","../../lib/src/components/MpTableHeadSelectCell/MpTableHeadSelectCell.tsx","../../lib/src/overridables/MpTableHeadFilter/MpTableHeadFilter.tsx","../../lib/src/overridables/MpTablePaginator/MpTablePaginator.styles.ts","../../lib/src/overridables/MpTablePaginator/MpTablePaginator.tsx","../../lib/src/icons/Filter.tsx","../../lib/src/icons/FilterArrowDown.tsx","../../lib/src/icons/FilterArrowUp.tsx","../../lib/src/icons/FilterOutline.tsx","../../lib/src/overridables/MpTableHeadIndicator/MpTableHeadIndicator.styles.ts","../../lib/src/overridables/MpTableHeadIndicator/MpTableHeadIndicator.tsx","../../lib/src/overridables/MpTableGlobalActions/MpTableGlobalActions.styles.ts","../../lib/src/components/MpTableBulkActions/MpTableBulkActions.styles.ts","../../lib/src/components/MpTableBulkActions/MpTableBulkActions.tsx","../../lib/src/components/MpTableGlobalFilter/MpTableGlobalFilter.tsx","../../lib/src/icons/BreadcrumbFilterDown.tsx","../../lib/src/icons/BreadcrumbSeparator.tsx","../../lib/src/utils/Breadcrumbs/Breadcrumbs.ts","../../lib/src/components/MpTableBreadcrumb/BreadcrumbList.tsx","../../lib/src/components/MpTableBreadcrumb/MpTableBreadcrumb.styles.ts","../../lib/src/components/MpTableBreadcrumb/MpTableBreadcrumb.tsx","../../lib/src/overridables/MpTableGlobalActions/MpTableGlobalActions.tsx","../../lib/src/overridables/Overridables.ts","../../lib/src/components/MpTableStickyTotalsFooter/MpTableStickyTotalsFooter.styles.ts","../../lib/src/components/MpTableStickyTotalsFooter/MpTableStickyTotalsFooter.tsx","../../lib/src/components/MpTableTotals/MpTableTotals.styles.ts","../../lib/src/components/MpTableTotals/MpTableTotals.tsx","../../lib/src/components/MpTableSelectCell/MpTableSelectCell.styles.ts","../../lib/src/components/MpTableSelectCell/MpTableSelectCell.tsx","../../lib/src/components/MpTableRow/MpTableRow.styles.ts","../../lib/src/components/MpTableRow/MpTableRow.tsx","../../lib/src/utils/Highlights/Highlights.ts","../../lib/src/utils/Storage/Storage.ts","../../lib/src/components/MpTable/MpTable.tsx","../../lib/src/utils/Overridables/Overridables.ts","../../lib/src/utils/DataArguments/DataArguments.ts","../../lib/src/utils/Datepicker/Datepicker.ts","../../lib/src/components/MpDatepicker/MpDatepicker.styles.ts","../../lib/src/icons/Check.tsx","../../lib/src/components/MpDatepicker/MpDatepickerItem.tsx","../../lib/src/components/MpDatepicker/MpDatepickerHeader.tsx","../../lib/src/icons/DatepickerArrowDown.tsx","../../lib/src/icons/DatepickerArrowUp.tsx","../../lib/src/components/MpDatepicker/MpDatepickerArrow.tsx","../../lib/src/components/MpDatepicker/MpDatepicker.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\n\nexport function useDebounce(ms: number = 500) {\n  const handle = useRef<number | null>(null);\n\n  const debounce = useCallback(\n    (cb: Function, ...args: any[]) => {\n      if (handle.current) {\n        clearTimeout(handle.current);\n      }\n      handle.current = setTimeout(cb, ms, ...args);\n    },\n    [ms]\n  );\n\n  return debounce;\n}\n\nexport function useUnmounted() {\n  const ref = useRef<boolean>(false);\n  useEffect(\n    () => () => {\n      ref.current = true;\n    },\n    []\n  );\n  return ref;\n}\n","import { createContext } from \"react\";\nimport { Meta } from \"../../types/Meta\";\n\nexport const MetaContext = createContext({} as Meta);\n","import {\n  MpGlobalFilter,\n  MpGlobalFilters,\n  MpUseGlobalFilters,\n} from \"./../../types/Filter\";\nimport {\n  Dispatch,\n  MutableRefObject,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Row } from \"react-table\";\nimport { MpFilter, MpFilterItem } from \"../../types/Filter\";\nimport {\n  MpAsyncGetMethod,\n  MpColumn,\n  RtMpColumnInstance,\n} from \"../../types/Table\";\nimport { useDebounce, useUnmounted } from \"../Debounce/Debounce\";\nimport { MetaContext } from \"../MetaContext/MetaContext\";\n\nexport function useFilterOptions({ filter }: MpColumn): MpFilter | undefined {\n  return useMemo(\n    () => (typeof filter === \"string\" ? { type: filter } : filter),\n    [filter]\n  );\n}\n\nconst getAvailableValues = (rows: Row<{}>[], key: string): string[] =>\n  rows\n    .map((row) => row.values[key])\n    .filter((val, i, arr) => arr.indexOf(val) === i);\n\nconst executeMethod = (\n  method: MpAsyncGetMethod,\n  search: string,\n  resultSetter: Dispatch<SetStateAction<MpFilterItem[]>>,\n  loadingSetter: Dispatch<SetStateAction<boolean>>,\n  latestRequest: MutableRefObject<number | null>,\n  unmounted: MutableRefObject<boolean>,\n  filterItems?: MpFilterItem[]\n) => {\n  const request = Date.now();\n  latestRequest.current = request;\n  loadingSetter(true);\n  method({ search }).then((result: any) => {\n    if (latestRequest.current === request && !unmounted.current) {\n      loadingSetter(false);\n      if (Array.isArray(result)) {\n        resultSetter([...(filterItems ?? []), ...(result ?? [])]);\n      }\n    }\n  });\n};\n\nexport function useFilterItems(\n  column: RtMpColumnInstance,\n  filter?: MpFilter\n): {\n  loading?: boolean;\n  items?: MpFilterItem[];\n  getItems(search?: string): void;\n} {\n  const { asyncGetMethods, localFiltering } = useContext(MetaContext);\n  const { preFilteredRows, id } = column;\n  const unmounted = useUnmounted();\n  const [items, setItems] = useState<MpFilterItem[]>();\n  const [loading, setLoading] = useState<boolean>(\n    !localFiltering &&\n      filter?.asyncGet != null &&\n      typeof asyncGetMethods?.[filter.asyncGet] === \"function\"\n  );\n  const latestRequest = useRef<number | null>(null);\n  const debounce = useDebounce(500);\n\n  const getItems = useCallback(\n    (searchText?: string) => {\n      if (localFiltering && (filter?.items?.length ?? 0) < 1) {\n        const localItems = getAvailableValues(preFilteredRows, id)\n          .filter((item) =>\n            searchText != null && searchText !== \"\"\n              ? (item + \"\").toLowerCase().indexOf(searchText.toLowerCase()) !==\n                -1\n              : true\n          )\n          .map(\n            (text: string): MpFilterItem => ({\n              value: text,\n              label: text,\n            })\n          );\n        setItems(localItems);\n      } else if (localFiltering && (filter?.items?.length ?? 0) > 0) {\n        setItems(filter?.items);\n      } else if (\n        filter?.asyncGet != null &&\n        typeof asyncGetMethods?.[filter.asyncGet] === \"function\"\n      ) {\n        debounce(\n          executeMethod,\n          asyncGetMethods?.[filter.asyncGet],\n          searchText,\n          setItems,\n          setLoading,\n          latestRequest,\n          unmounted,\n          filter.items\n        );\n      }\n    },\n    [\n      asyncGetMethods,\n      filter?.asyncGet,\n      filter?.items,\n      id,\n      setLoading,\n      localFiltering,\n      preFilteredRows,\n      debounce,\n      unmounted,\n      latestRequest,\n    ]\n  );\n\n  return useMemo(\n    () => ({\n      items,\n      getItems,\n      loading,\n    }),\n    [items, getItems, loading]\n  );\n}\n\nexport const useGlobalFilters = (\n  initialValue: MpGlobalFilters | undefined\n): MpUseGlobalFilters => {\n  const [globalFilters, setGlobalFilters] = useState<\n    MpGlobalFilters | undefined\n  >(initialValue);\n\n  const handleSetGlobalFilter = useCallback((filter: MpGlobalFilter) => {\n    setGlobalFilters((prevState) => {\n      if (!!prevState)\n        return {\n          ...prevState,\n          [filter.key]: filter.value,\n        };\n\n      return { [filter.key]: filter.value };\n    });\n  }, []);\n\n  return useMemo(\n    () => [\n      globalFilters as MpGlobalFilters,\n      { setGlobalFilters: handleSetGlobalFilter },\n    ],\n    [globalFilters, handleSetGlobalFilter]\n  );\n};\n\nexport const useRemoteFilters = (mpColumns: MpColumn[]): MpColumn[] => {\n  return useMemo(() => {\n    return mpColumns.filter((column) => {\n      return typeof column.filter !== \"string\" && column.filter?.remote;\n    });\n  }, [mpColumns]);\n};\n\nexport function useClearFilters() {\n  const [emptyInstance, setEmptyInstance] = useState<string[] | undefined>(\n    undefined\n  );\n  const clearFilters = useCallback(\n    (filters?: string[]) => setEmptyInstance(filters ?? []),\n    []\n  );\n\n  return { clearFiltersEvent: emptyInstance, clearFilters };\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import {\n  Box,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport { TabUnselected } from \"@mui/icons-material\";\nimport React, { MouseEvent, useCallback, useContext, useEffect } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterItems, useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./Select.styles\";\n\nconst empty: any[] = [];\n\nexport default function Select({\n  column,\n  value = empty,\n  setValue,\n  doFiltering,\n}: MpFilterProps) {\n  const { mpColumn } = column;\n  const { translations } = useContext(MetaContext);\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { loading, items, getItems } = useFilterItems(column, filter);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.checked) {\n        if (!value?.includes(event.target.name)) {\n          setValue([...(value ?? []), event.target.name]);\n        }\n      } else {\n        setValue(value?.filter((val: any) => val !== event.target.name));\n      }\n    },\n    [setValue, value]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  useEffect(() => {\n    getItems();\n  }, [getItems]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      {!loading && (items?.length ?? 0) > 0 && (\n        <Box paddingX={2} paddingY={1} maxHeight={300} overflow=\"auto\">\n          <FormControl component=\"fieldset\" color=\"primary\">\n            <FormGroup>\n              {items?.map((item, i) => (\n                <FormControlLabel\n                  key={i}\n                  onChange={handleChange}\n                  name={item.value + \"\"}\n                  control={\n                    <Checkbox\n                      color=\"primary\"\n                      checked={value?.includes(item.value + \"\") ?? false}\n                    />\n                  }\n                  label={item.label}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Box>\n      )}\n      {loading && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n      {!loading && (items?.length ?? 0) < 1 && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <TabUnselected fontSize=\"large\" color=\"disabled\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import { Dispatch, SetStateAction } from \"react\";\nimport { Row } from \"react-table\";\nimport { RtMpColumnInstance } from \"./Table\";\n\nexport enum MpFilterType {\n  text = \"text\",\n  select = \"select\",\n  searchSelect = \"searchSelect\",\n  numberRange = \"numberRange\",\n}\n\nexport type FilterFunction = (\n  rows: Row[],\n  columnIds: string[],\n  filterValue: any\n) => Row[];\n\nexport interface MpFilterItem {\n  // Value of the filter item\n  value: string | number | boolean;\n  // User-readable label for the item\n  label: string;\n}\n\nexport interface MpFilter {\n  // Get/Set filter value using the key\n  key?: string;\n  // Type of the filter\n  type: MpFilterType;\n  // (Optional) Display title of the filter\n  label?: string;\n  // Placeholder\n  placeholder?: string;\n  // (Optional) Display unit in an input adornment\n  unitLabel?: string;\n  // (Optional) Override the items available in the filter\n  items?: MpFilterItem[];\n  // (Optional) Async Get Method key\n  asyncGet?: string;\n  // Format (i.e date, number, etc.)\n  format?: string;\n  // Locale override\n  locale?: string;\n  // Separate from localFiltering\n  remote?: boolean;\n}\n\nexport interface MpFilterProps {\n  column: RtMpColumnInstance;\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n  doFiltering(immediateValue?: any): void;\n}\n\nexport interface MpGlobalFilter {\n  key: string;\n  value: any;\n}\n\nexport interface MpGlobalFilters {\n  [key: string]: any;\n}\n\nexport type MpUseGlobalFilters = [\n  MpGlobalFilters,\n  { setGlobalFilters: (filter: MpGlobalFilter) => void }\n];\n\nexport interface MpBreadcrumbFilterData {\n  id?: string;\n  name?: string;\n  [key: string]: MpBreadcrumbFilterData[] | string | undefined;\n}\n","import { Box, Divider, InputBase, Link, Typography } from \"@mui/material\";\nimport React, { MouseEvent, useCallback, useContext } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./Text.styles\";\n\nexport default function Text({\n  value,\n  setValue,\n  doFiltering,\n  column: { mpColumn },\n}: MpFilterProps) {\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { translations } = useContext(MetaContext);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      setValue(evVal);\n    },\n    [setValue]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value ?? \"\"}\n          onChange={handleChange}\n          placeholder={translations?.search ?? \"Search\"}\n          autoFocus={true}\n          className={classes.naked}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n  searchIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n","import {\n  Box,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputBase,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport { Search, TabUnselected } from \"@mui/icons-material\";\nimport React, {\n  MouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterItems, useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./SearchSelect.styles\";\n\nconst empty: any[] = [];\n\nexport default function SearchSelect({\n  column,\n  value = empty,\n  setValue,\n  doFiltering,\n}: MpFilterProps) {\n  const { mpColumn } = column;\n  const { translations } = useContext(MetaContext);\n  const [searchText, setSearchText] = useState<string>();\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { loading, items, getItems } = useFilterItems(column, filter);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.checked) {\n        if (!value?.includes(event.target.name)) {\n          setValue([...(value ?? []), event.target.name]);\n        }\n      } else {\n        setValue(value?.filter((val: any) => val !== event.target.name));\n      }\n    },\n    [setValue, value]\n  );\n\n  const handleSearchText = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchText(event.target.value);\n    },\n    [setSearchText]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  useEffect(() => {\n    getItems(searchText);\n  }, [getItems, searchText]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          startAdornment={\n            <Search className={classes.searchIcon} color=\"action\" />\n          }\n          value={searchText ?? \"\"}\n          onChange={handleSearchText}\n          placeholder={translations?.search ?? \"Search\"}\n          autoFocus={true}\n          className={classes.naked}\n        />\n      </Box>\n      <Divider />\n      {!loading && (items?.length ?? 0) > 0 && (\n        <Box paddingX={2} paddingY={1} maxHeight={300} overflow=\"auto\">\n          <FormControl component=\"fieldset\" color=\"primary\">\n            <FormGroup>\n              {items?.map((item, i) => (\n                <FormControlLabel\n                  key={i}\n                  onChange={handleChange}\n                  name={item.value + \"\"}\n                  control={\n                    <Checkbox\n                      color=\"primary\"\n                      checked={value?.includes(item.value + \"\") ?? false}\n                    />\n                  }\n                  label={item.label}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Box>\n      )}\n      {loading && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n      {!loading && (items?.length ?? 0) < 1 && (\n        <Box\n          padding={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          minHeight={100}\n        >\n          <TabUnselected fontSize=\"large\" color=\"disabled\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  naked: {\n    width: \"100%\",\n  },\n  emptyAnchor: {\n    cursor: \"pointer\",\n    userSelect: \"none\",\n  },\n}));\n","import {\n  Box,\n  Divider,\n  InputBase,\n  InputBaseComponentProps,\n  Link,\n  Typography,\n} from \"@mui/material\";\nimport React, { forwardRef, MouseEvent, useCallback, useContext } from \"react\";\nimport { MpFilterProps } from \"../../types/Filter\";\nimport { useFilterOptions } from \"../../utils/Filter/Filter\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport useStyles from \"./NumberRange.styles\";\n\nconst NumberInput = forwardRef<HTMLInputElement>(\n  ({ onChange, inputRef, ...props }: InputBaseComponentProps, ref) => {\n    const handleChange = useCallback(\n      (event: React.ChangeEvent<HTMLInputElement>) => {\n        let val = event.target.value;\n        // Allow only leading -\n        val = val.replace(/-/g, (m, i) => (i > 0 ? \"\" : m));\n        // Remove additional . or ,\n        val = val.replace(/[.,]/g, (m, i: number, s: string) =>\n          s.indexOf(s.match(/[.,]/g)?.[0] ?? \".\") !== i || i === 0 ? \"\" : m\n        );\n        // Leave only numbers and . , -\n        val = val.replace(/[^\\d.,-]/g, \"\");\n        // Write to event\n        event.target.value = val;\n        if (typeof onChange === \"function\") {\n          onChange(event);\n        }\n      },\n      [onChange]\n    );\n    return (\n      <input\n        ref={ref ?? inputRef}\n        {...props}\n        onChange={handleChange}\n        inputMode=\"decimal\"\n      />\n    );\n  }\n);\n\nexport default function NumberRange({\n  value,\n  setValue,\n  doFiltering,\n  column: { mpColumn },\n}: MpFilterProps) {\n  const classes = useStyles();\n  const filter = useFilterOptions(mpColumn);\n  const { translations } = useContext(MetaContext);\n\n  const handleChangeMin = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      if (evVal != null && evVal !== \"\") {\n        setValue((val: any) => ({ ...(val ?? {}), min: evVal }));\n      } else {\n        setValue((val: any) =>\n          val?.max != null && val?.max !== \"\" ? { max: val?.max } : null\n        );\n      }\n    },\n    [setValue]\n  );\n\n  const handleChangeMax = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const evVal = event.target.value;\n      if (evVal != null && evVal !== \"\") {\n        setValue((val: any) => ({ ...(val ?? {}), max: evVal }));\n      } else {\n        setValue((val: any) =>\n          val?.min != null && val?.min !== \"\" ? { min: val?.min } : null\n        );\n      }\n    },\n    [setValue]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      doFiltering(null);\n    },\n    [doFiltering]\n  );\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box\n        paddingLeft={2}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"subtitle2\">{filter?.label ?? \"\"}</Typography>\n        <Box paddingX={2} paddingY={1.5}>\n          <Link\n            color=\"textSecondary\"\n            onClick={handleClear}\n            className={classes.emptyAnchor}\n          >\n            {translations?.clear ?? \"Clear\"}\n          </Link>\n        </Box>\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value?.min ?? \"\"}\n          onChange={handleChangeMin}\n          placeholder={translations?.from ?? \"From\"}\n          autoFocus={true}\n          className={classes.naked}\n          inputComponent={NumberInput}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n      <Divider />\n      <Box paddingY={1} paddingX={2}>\n        <InputBase\n          value={value?.max ?? \"\"}\n          onChange={handleChangeMax}\n          placeholder={translations?.to ?? \"To\"}\n          className={classes.naked}\n          inputComponent={NumberInput}\n          endAdornment={\n            filter?.unitLabel != null && (\n              <Typography color=\"textSecondary\">{filter?.unitLabel}</Typography>\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const toPercent: MpColumnFormatter = ({ value }) => {\n  const number: number =\n    typeof value === \"string\" ? parseInt(value, 10) : value;\n\n  return value !== undefined ? `${Math.round(number * 100)}%` : null;\n};\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const toCurrency: MpColumnFormatter = ({ value, locale, options }) => {\n  return (\n    value?.toLocaleString(\n      locale,\n      !!options?.modifier\n        ? { style: \"currency\", currency: options?.modifier }\n        : undefined\n    ) ?? null\n  );\n};\n","import moment from \"moment\";\nimport \"moment/min/locales\";\nimport { MpColumnFormatter } from \"../../types/Table\";\n\nexport const formatDate: MpColumnFormatter = ({\n  value,\n  locale = \"en\",\n  options,\n}) => {\n  moment.locale(locale);\n\n  const d = new Date(value);\n  const m = moment(d);\n\n  return m.format(\"L\" || options?.modifier);\n};\n\nexport const formatDatetime: MpColumnFormatter = ({\n  value,\n  locale = \"en\",\n  options,\n}) => {\n  moment.locale(locale);\n\n  const d = new Date(value);\n  const m = moment(d);\n\n  return `${formatDate({ value, locale, options })} ${m.format(\n    \"LT\" || options?.modifier\n  )}`;\n};\n","import { InputBaseProps } from \"@mui/material\";\nimport {\n  ColumnInstance,\n  DefaultFilterTypes,\n  Row,\n  UseFiltersColumnProps,\n  UseRowSelectRowProps,\n  UseSortByColumnProps,\n} from \"react-table\";\nimport {\n  MpBulkActionMethods,\n  MpActions,\n  MpRowActionMethods,\n  MpRowAction,\n} from \"./Actions\";\nimport {\n  MpBreadcrumbFilterData,\n  MpFilter,\n  MpFilterType,\n  MpGlobalFilters,\n} from \"./Filter\";\nimport { MpTableOverridablesMap } from \"./Overridables\";\n\nexport enum MpColumnFormat {\n  currency = \"currency\",\n  percent = \"percent\",\n  date = \"date\",\n  dateTime = \"dateTime\",\n  map = \"map\",\n}\n\nexport interface MpColumnFormatOptions {\n  type: MpColumnFormat;\n  // (Optional) Map values for rendering\n  valueMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n  modifier?: string;\n}\n\nexport enum MpColumnRender {\n  statusPill = \"statusPill\",\n  toggle = \"toggle\",\n  switch = \"switch\",\n  button = \"button\",\n  input = \"input\",\n}\n\nexport interface MpColumnRenderOptions {\n  type: MpColumnRender;\n  // (Optional) Map values for rendering\n  valueMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n  // (Optional) Map values for rendering\n  styleMap?:\n    | Record<string | number, string | number | boolean>\n    | Array<string | number | boolean>;\n}\n\nexport interface RtMpColumnInstance\n  extends ColumnInstance,\n    UseSortByColumnProps<{}>,\n    UseFiltersColumnProps<{}> {\n  mpColumn: MpColumn;\n}\n\nexport interface MpColumn {\n  // Get value from the row using the key\n  key: string;\n  // Display value in the head cell\n  label?: string;\n  // (Optional) Filter type\n  filter?: MpFilterType | MpFilter;\n  // (Optional) Override footer enabled\n  totals?: boolean;\n  // (Optional) Override enable/disable sorting\n  sort?: boolean;\n  // (Optional) Format data before passing to the table\n  format?: MpColumnFormat | MpColumnFormatOptions;\n  // (Optional) Custom cell render type\n  render?: MpColumnRender | MpColumnRenderOptions;\n  // (Optional) Specify column action. If specified, no data is shown\n  action?: MpRowAction;\n  // (Optional) Input props that will be assigned to to the TextField component if field is being used\n  inputProps?: Omit<\n    InputBaseProps,\n    \"inputComponent\" | \"inputRef\" | \"onBlur\" | \"onChange\"\n  >;\n  // (Optional) Set fixed column width\n  width?: number | string;\n  // (Optional) Set fixed column width to head column\n  fixedHeadWidth?: boolean;\n}\n\nexport interface MpTableType {\n  // Array of MpColumns\n  columns: MpColumn[];\n  // Row identifier key\n  rowIdKey: string;\n  // Unique table identifier to use with storage caching\n  storageIdentifier?: string;\n  // Cache filters in local storage\n  cacheFilters?: boolean;\n  // Cache sorting in local storage\n  cacheSorting?: boolean;\n  // Cache global filter in local storage\n  cacheGlobalFilter?: boolean;\n  // Paginate locally\n  localPagination?: boolean;\n  // Sort locally\n  localSorting?: boolean;\n  // Filter locally\n  localFiltering?: boolean;\n  // Disable pagination\n  disablePagination?: boolean;\n  // Disable sorting\n  disableSorting?: boolean;\n  // Enable global actions\n  enableGlobalActions?: boolean;\n  // Selection\n  selection?: \"single\" | \"multiple\";\n  // Footer\n  totals?: boolean;\n  // Sticky footer - HIC SUNT DRACONES !!!\n  stickyTotals?: boolean;\n  // Number of rows per page\n  pageSize?: number;\n  // Conndensed or regular spacing\n  size?: \"small\" | \"medium\";\n  // Where do display filters\n  filterVariant?: \"head\" | \"pill\";\n  // Bulk actions\n  bulkActions?: MpActions;\n  // For values formatters\n  locale?: string;\n  // Highlight rows based on the boolean value of these fields\n  highlights?: MpTableHighlights;\n  // Clear column filters from head cell\n  clearColumnFilters?: boolean;\n}\n\nexport interface MpTableHighlights {\n  inactive?: string;\n  primary?: string;\n  secondary?: string;\n}\n\nexport interface MpSortRule {\n  // Sort using this key\n  key: string;\n  // Ascending if falsy, descending if true\n  desc?: boolean;\n}\n\nexport interface MpTableDataArguments {\n  // Number of items to take\n  limit?: number;\n  // Start from this item (cursor / item index /etc.)\n  cursor?: number;\n  // Fetch only the columns that are visible\n  columns: string[];\n  // Sorting rules (can be multiple)\n  sort?: MpSortRule[];\n  // Filters object\n  filters?: Record<string, any>;\n  // Global filter value\n  globalFilters?: MpGlobalFilters;\n}\n\nexport type OnGetData = (args: MpTableDataArguments) => void;\n\nexport interface MpTableProps<ItemType = any>\n  extends MpTableType,\n    MpTableInputProps<ItemType> {}\n\ninterface MpAsyncGetMethodArguments {\n  search?: string;\n}\n\nexport type MpAsyncGetMethod = (\n  options?: MpAsyncGetMethodArguments\n) => Promise<any>;\n\nexport interface MpTableInputProps<ItemType = any> {\n  data?: ItemType[];\n  onGetData: OnGetData;\n  totalsData?: Partial<Record<keyof ItemType, string>>;\n  loading?: boolean;\n  dataCount?: number;\n  classes?: MpTableClasses;\n  translations?: MpTableTranslations;\n  overridables?: Partial<MpTableOverridablesMap>;\n  bulkMethods?: MpBulkActionMethods;\n  rowMethods?: MpRowActionMethods;\n  asyncGetMethods?: Record<string, MpAsyncGetMethod>;\n  onRowClick?: (row?: Row & UseRowSelectRowProps<{}>) => void;\n  breadcrumbFilterData?: MpBreadcrumbFilterData;\n  onEdit?: (data: ItemType[]) => void;\n  onRowsSelected?: (selectedRows: Array<Row<{}>>) => void;\n  emptyChildren?: React.ReactNode;\n  loadingComponent?: React.ReactNode;\n  clearFiltersEvent?: string[];\n  resetSelectedRows?: boolean;\n}\n\nexport interface MpTableClasses {\n  tableWrapper?: string;\n  table?: string;\n  headSelectCellCheckbox?: string;\n  headSelectCell?: string;\n  selectCell?: string;\n  selectCellCheckbox?: string;\n  totalsSelectCell?: string;\n  highlightedInactive?: string;\n  highlightedPrimary?: string;\n  highlightedSecondary?: string;\n  row?: string;\n  rowSelected?: string;\n  hoveredCellWithFilters?: string;\n}\n\nexport interface MpTableTranslations {\n  of?: string;\n  total?: string;\n  previousPage?: string;\n  nextPage?: string;\n  selected?: string;\n  actions?: string;\n  from?: string;\n  to?: string;\n  all?: string;\n  clear?: string;\n  search?: string;\n  allTime?: string;\n  breadcrumbs?: { [key: string]: string | undefined };\n}\n\nexport type MpFilterTypes = DefaultFilterTypes;\n\nexport type MpColumnFormatter = (params: {\n  value: any;\n  locale?: string;\n  options?: MpColumnFormatOptions;\n}) => string | number | null;\n","import { MpColumnFormatter } from \"../../types/Table\";\n\nexport const mapFormatter: MpColumnFormatter = ({ value, options }) => {\n  return options?.valueMap?.[value] ?? value;\n};\n","import { toPercent } from \"./Numbers/Numbers\";\nimport { toCurrency } from \"./Currency/Currency\";\nimport { formatDate, formatDatetime } from \"./Date/Date\";\nimport { MpColumnFormat, MpColumnFormatter } from \"./../types/Table\";\nimport { mapFormatter } from \"./Map/Map\";\n\nexport function rawValueKey(key: string) {\n  return `__raw_${key}`;\n}\n\nexport function getRawValue(item: any, key: string) {\n  return item[rawValueKey(key)] ?? item[key];\n}\n\nexport const formatMap: Record<MpColumnFormat, MpColumnFormatter> = {\n  [MpColumnFormat.currency]: toCurrency,\n  [MpColumnFormat.percent]: toPercent,\n  [MpColumnFormat.date]: formatDate,\n  [MpColumnFormat.dateTime]: formatDatetime,\n  [MpColumnFormat.map]: mapFormatter,\n};\n","import { ComponentType } from \"react\";\nimport { MpFilterTypes } from \"../types/Table\";\nimport Select from \"./Select/Select\";\nimport Text from \"./Text/Text\";\nimport { FilterFunction, MpFilterProps, MpFilterType } from \"../types/Filter\";\nimport SearchSelect from \"./SearchSelect/SearchSelect\";\nimport NumberRange from \"./NumberRange/NumberRange\";\nimport { getRawValue } from \"../formats/Formats\";\n\nconst matchArray: FilterFunction = (rows, columnIds, filterValue) => {\n  if (!Array.isArray(filterValue) || filterValue.length < 1) {\n    return rows;\n  } else {\n    return rows.filter(\n      (row) =>\n        !!columnIds.find((id) =>\n          filterValue.includes(getRawValue(row.original, id))\n        )\n    );\n  }\n};\n\nconst matchRange: FilterFunction = (rows, columnIds, filterValue) => {\n  if (filterValue == null || typeof filterValue !== \"object\") {\n    return rows;\n  }\n  return rows.filter(\n    (row) =>\n      !!columnIds.find((id) => {\n        if (\n          filterValue?.min != null &&\n          filterValue?.min !== \"\" &&\n          +getRawValue(row.original, id) < +filterValue?.min\n        ) {\n          return false;\n        } else if (\n          filterValue?.max != null &&\n          filterValue?.max !== \"\" &&\n          +getRawValue(row.original, id) > +filterValue?.max\n        ) {\n          return false;\n        }\n        return true;\n      })\n  );\n};\n\nexport const filterMap: Record<MpFilterType, ComponentType<MpFilterProps>> = {\n  [MpFilterType.select]: Select,\n  [MpFilterType.searchSelect]: SearchSelect,\n  [MpFilterType.text]: Text,\n  [MpFilterType.numberRange]: NumberRange,\n};\n\n// export type DefaultFilterTypes =\n//     | 'text'\n//     | 'exactText'\n//     | 'exactTextCase'\n//     | 'includes'\n//     | 'includesAll'\n//     | 'exact'\n//     | 'equals'\n//     | 'between';\n\nexport const filterTypeMap: Record<\n  MpFilterType,\n  MpFilterTypes | FilterFunction\n> = {\n  [MpFilterType.select]: matchArray,\n  [MpFilterType.searchSelect]: matchArray,\n  [MpFilterType.text]: \"text\",\n  [MpFilterType.numberRange]: matchRange,\n};\n","import { Box } from \"@mui/material\";\nimport React, { Dispatch, SetStateAction, useMemo } from \"react\";\nimport { filterMap } from \"../../filters/Filters\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { RtMpColumnInstance } from \"../../types/Table\";\n\ninterface Props {\n  column: RtMpColumnInstance;\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n  overridables: MpTableOverridablesMap;\n  doFiltering(immediateValue?: any): void;\n}\n\nexport default function MpTableFilter({\n  column,\n  value,\n  setValue,\n  overridables,\n  doFiltering,\n}: Props) {\n  const filterType = useMemo(\n    () =>\n      typeof column?.mpColumn?.filter === \"string\"\n        ? column?.mpColumn?.filter\n        : column?.mpColumn?.filter?.type,\n    [column]\n  );\n  const FilterComponent = useMemo(\n    () =>\n      filterType\n        ? overridables?.filters?.[filterType as string] ??\n          filterMap[filterType as string]\n        : null,\n    [filterType, overridables]\n  );\n  return FilterComponent ? (\n    <Box>\n      <FilterComponent\n        column={column}\n        value={value}\n        setValue={setValue}\n        doFiltering={doFiltering}\n      />\n    </Box>\n  ) : null;\n}\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import { RtMpColumnInstance } from \"./../../types/Table\";\nimport {\n  MpBulkActionClickParams,\n  MpBulkActionParameters,\n  MpRowActionHandlerParams,\n  MpRowAction,\n  MpRowActionParameters,\n} from \"./../../types/Actions\";\n\nexport const getColumnAction = (column: RtMpColumnInstance) => {\n  const action = column?.mpColumn?.action;\n  if (!action) throw new Error(\"Missing action property from column.\");\n\n  return action as MpRowAction;\n};\n\nexport const handleRowAction = (params: MpRowActionHandlerParams) => {\n  const { row, rowId, slug, value, methods } = params;\n  if (!methods)\n    throw new Error(\n      `No row methods provided. Please provide them in order to use them.`\n    );\n  const method = methods[slug];\n  const methodsParams: MpRowActionParameters = {\n    value: value as any,\n    row,\n    rowId,\n  };\n  if (method) method(methodsParams);\n  else\n    throw new Error(\n      `A method for action '${slug}' does not exist. Either add it or remove this action.`\n    );\n};\n\nexport const handleBulkAction = (params: MpBulkActionClickParams) => {\n  const { methods, selectedRowIds, selectedRows, slug } = params;\n  const method = methods[slug];\n  const methodsParams: MpBulkActionParameters = {\n    selectedRows,\n    selectedIds: selectedRowIds,\n  };\n  if (method) method(methodsParams);\n  else\n    throw new Error(\n      `A method for action '${slug}' does not exist. Either add it or remove this action.`\n    );\n};\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  small: {\n    maxHeight: 28,\n  },\n}));\n","import React, { useCallback, useContext, useMemo } from \"react\";\nimport {\n  Button as MUIButton,\n  ButtonProps,\n  Icon,\n  IconButton,\n  IconButtonProps,\n} from \"@mui/material\";\nimport { CellProps } from \"react-table\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\nimport { MpRowActionMethods } from \"../../../types/Actions\";\nimport useStyles from \"./Button.styles\";\n\nexport function Button(props: CellProps<{}>) {\n  const classes = useStyles();\n  const { column, row } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n  const { color, icon, label, variant } = action;\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      event.stopPropagation();\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        row: row,\n        rowId: row.id,\n      });\n    },\n    [row, action, rowMethods]\n  );\n\n  if (icon) {\n    return (\n      <IconButton\n        color={color as IconButtonProps[\"color\"]}\n        onClick={handleClick}\n        size=\"large\"\n      >\n        <Icon>icon</Icon>\n      </IconButton>\n    );\n  }\n\n  return (\n    <MUIButton\n      size={size}\n      color={color as ButtonProps[\"color\"]}\n      variant={variant as ButtonProps[\"variant\"]}\n      onClick={handleClick}\n      classes={{ sizeSmall: classes.small }}\n    >\n      {label}\n    </MUIButton>\n  );\n}\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport { Icon } from \"@mui/material\";\nimport { MpRowActionItem, MpRowActionMethods } from \"../../../types/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\n\nexport function Toggle(props: CellProps<{}>) {\n  const { column, row, value } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n\n  const { items, defaultValue } = action;\n  const [toggle, setToggle] = useState<string | number | null | undefined>(\n    value ?? defaultValue\n  );\n\n  const handleChange = useCallback(\n    (event: React.MouseEvent<HTMLElement>, newToggle: string | null) => {\n      event.stopPropagation();\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        value: newToggle as string,\n        row: row,\n        rowId: row.id,\n      });\n      setToggle(newToggle);\n    },\n    [setToggle, action, row, rowMethods]\n  );\n\n  const mapToggles = useMemo(\n    () =>\n      (items ? items : []).map((item: MpRowActionItem) => {\n        const { value, icon, label, color, textColor } = item;\n        const inner = icon ? <Icon>{icon}</Icon> : label;\n        const maxHeight = size === \"small\" ? 24 : undefined;\n\n        const style =\n          toggle === value\n            ? {\n                color: textColor,\n                backgroundColor: color,\n                maxHeight,\n              }\n            : {\n                maxHeight,\n              };\n\n        return (\n          <ToggleButton\n            key={value}\n            size={size}\n            value={value}\n            aria-label=\"toggle-action\"\n            style={style}\n          >\n            {inner}\n          </ToggleButton>\n        );\n      }),\n    [size, items, toggle]\n  );\n\n  return (\n    <ToggleButtonGroup\n      value={toggle}\n      exclusive\n      onChange={handleChange}\n      aria-label=\"row-toggle\"\n    >\n      {mapToggles}\n    </ToggleButtonGroup>\n  );\n}\n","import {\n  Box,\n  Icon,\n  Switch as MUISwitch,\n  SwitchProps,\n  Typography,\n} from \"@mui/material\";\nimport React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MpRowActionMethods } from \"../../../types/Actions\";\nimport { RtMpColumnInstance } from \"../../../types/Table\";\nimport {\n  getColumnAction,\n  handleRowAction,\n} from \"../../../utils/Actions/Actions\";\nimport { MetaContext } from \"../../../utils/MetaContext/MetaContext\";\n\nexport function Switch(props: CellProps<{}>) {\n  const { column, row, value } = props;\n  const { rowMethods, size } = useContext(MetaContext);\n  const action = useMemo(\n    () => getColumnAction(column as RtMpColumnInstance),\n    [column]\n  );\n  const { iconLeft, iconRight, labelLeft, labelRight, color } = action;\n  const innerLeft = iconLeft ? <Icon>{iconLeft}</Icon> : labelLeft;\n  const innerRight = iconRight ? <Icon>{iconRight}</Icon> : labelRight;\n\n  const [checked, setChecked] = useState<boolean>(value);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.stopPropagation();\n      const value = event.target.checked;\n      setChecked(value);\n      handleRowAction({\n        methods: rowMethods as MpRowActionMethods,\n        slug: action.slug,\n        row: row,\n        rowId: row.id,\n        value: value,\n      });\n    },\n    [rowMethods, row, action]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => e.stopPropagation(),\n    []\n  );\n\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      onClick={handlePropagation}\n    >\n      <Typography component=\"span\">{innerLeft}</Typography>\n      <MUISwitch\n        size={size}\n        onChange={handleChange}\n        color={color as SwitchProps[\"color\"]}\n        checked={checked}\n      />\n      <Typography component=\"span\">{innerRight}</Typography>\n    </Box>\n  );\n}\n","import { useMemo } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MpColumn, MpColumnRenderOptions } from \"../../types/Table\";\n\nexport function useRendererOptions({ cell }: CellProps<{}>) {\n  const column: MpColumn | undefined = (cell.column as any).mpColumn;\n  const renderOptions: MpColumnRenderOptions | undefined = useMemo(\n    () =>\n      typeof column?.render === \"string\"\n        ? { type: column.render }\n        : column?.render,\n    [column?.render]\n  );\n  const style = useMemo(\n    () => renderOptions?.styleMap?.[cell.value ?? \"\"] ?? undefined,\n    [renderOptions, cell]\n  );\n  const value = useMemo(\n    () => renderOptions?.valueMap?.[cell.value ?? \"\"] ?? cell.value,\n    [renderOptions, cell]\n  );\n\n  const columnId = useMemo(() => cell.column.id, [cell.column.id]);\n\n  const columnIndex = useMemo(() => cell.row.index, [cell.row.index]);\n\n  const inputProps = useMemo(() => column?.inputProps, [column?.inputProps]);\n\n  return {\n    column,\n    renderOptions,\n    style,\n    value,\n    columnId,\n    columnIndex,\n    inputProps,\n  };\n}\n","import { Box, Chip } from \"@mui/material\";\nimport createPalette from \"@mui/material/styles/createPalette\";\nimport React, { useContext, useMemo } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { useRendererOptions } from \"../../utils/Renderer/Renderer\";\n\nexport default function StatusPill(props: CellProps<{}>) {\n  const { style, value } = useRendererOptions(props);\n  const { size } = useContext(MetaContext);\n\n  const chipStyle = useMemo(\n    () => ({\n      backgroundColor: style != null ? style + \"\" : undefined,\n      color:\n        style != null\n          ? createPalette({ primary: { main: style + \"\" } }).getContrastText(\n              style + \"\"\n            )\n          : undefined,\n    }),\n    [style]\n  );\n  return (\n    <Box textAlign=\"center\">\n      <Chip size={size} style={chipStyle} label={value} />\n    </Box>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  root: {\n    padding: 0,\n    maxHeight: 29,\n    width: \"100%\",\n    fontSize: \"inherit\",\n  },\n  input: {\n    height: \"auto\",\n    maxHeight: 29,\n    padding: 0,\n    fontSize: \"inherit\",\n  },\n}));\n","import { ComponentType } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { Button, Switch, Toggle } from \"./actions/Actions\";\nimport { MpColumnRender } from \"../types/Table\";\nimport StatusPill from \"./StatusPill/StatusPill\";\nimport Input from \"./Input/Input\";\n\nexport const rendererMap: Record<\n  MpColumnRender,\n  ComponentType<CellProps<{}>>\n> = {\n  [MpColumnRender.statusPill]: StatusPill,\n  [MpColumnRender.button]: Button,\n  [MpColumnRender.toggle]: Toggle,\n  [MpColumnRender.switch]: Switch,\n  [MpColumnRender.input]: Input,\n};\n","import { InputBase } from \"@mui/material\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { CellProps } from \"react-table\";\nimport { useDebounce } from \"../../utils/Debounce/Debounce\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { useRendererOptions } from \"../../utils/Renderer/Renderer\";\nimport useStyles from \"./Input.styles\";\n\nexport default function Input(props: CellProps<{}>) {\n  const classes = useStyles();\n  const debounce = useDebounce();\n  const { value, inputProps, columnId, columnIndex } =\n    useRendererOptions(props);\n  const { onInputChange } = useContext(MetaContext);\n\n  const [inputValue, setInputValue] = useState<string>(value);\n\n  useEffect(() => setInputValue(value), [value]);\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => e.stopPropagation(),\n    []\n  );\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      const { value } = e.target;\n      setInputValue(value);\n      debounce(() => onInputChange?.(e, columnIndex, columnId));\n    },\n    [columnId, columnIndex, debounce, onInputChange]\n  );\n\n  return (\n    <InputBase\n      onChange={handleInputChange}\n      value={inputValue}\n      classes={{ root: classes.root, input: classes.input }}\n      onClick={handlePropagation}\n      {...inputProps}\n    />\n  );\n}\n","import { useContext } from \"react\";\nimport {\n  Column,\n  UseFiltersColumnOptions,\n  UseSortByColumnOptions,\n} from \"react-table\";\nimport { filterTypeMap } from \"../../filters/Filters\";\nimport { rendererMap } from \"../../renderers/Renderers\";\nimport { MpFilter } from \"../../types/Filter\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { MpColumn } from \"../../types/Table\";\nimport { MetaContext } from \"../MetaContext/MetaContext\";\n\nexport const getFooterValue = (key: string) => () => {\n  const { totalsData } = useContext(MetaContext);\n  return totalsData?.[key] ?? null;\n};\n\nconst noOpFilter = (rows: Array<any>) => rows;\n\nexport const convertMpToColumn = (\n  overridables?: Partial<MpTableOverridablesMap>,\n  disableSorting?: boolean\n) => <ItemType extends Object = any>(column: MpColumn) => {\n  const col: Column<ItemType> &\n    UseSortByColumnOptions<{}> &\n    UseFiltersColumnOptions<{}> & {\n      mpColumn: MpColumn;\n      Footer?: any;\n    } = {\n    Header: column.label ?? column.key,\n    accessor: column.key as any,\n    mpColumn: column,\n    disableSortBy: disableSorting || column.sort === false,\n  };\n  if (column?.filter != null && !(column?.filter as MpFilter)?.remote) {\n    const type =\n      typeof column.filter === \"string\" ? column.filter : column.filter.type;\n    col.filter =\n      overridables?.filterFunctions?.[type as string] ??\n      filterTypeMap[type as string];\n  }\n  if (column?.filter != null && (column?.filter as MpFilter)?.remote === true) {\n    col.filter = noOpFilter;\n  }\n  if (column.totals !== false) {\n    col.Footer = getFooterValue(column.key);\n  }\n  if (column.render != null) {\n    const type =\n      typeof column.render === \"string\" ? column.render : column.render.type;\n    col.Cell = overridables?.renderers?.[type] ?? rendererMap[type];\n  }\n  return col;\n};\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { MpColumnFormatOptions, MpColumn } from \"../../types/Table\";\nimport { formatMap, rawValueKey } from \"./../../formats/Formats\";\n\nexport function useDataFormatters<ItemType>(\n  data: ItemType[],\n  columns: MpColumn[],\n  locale?: string\n): [\n  ItemType[],\n  (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    index: number,\n    id: string | number\n  ) => void\n] {\n  const [dataState, setDataState] = useState<ItemType[]>([]);\n\n  const formattedData = useMemo(() => {\n    const formattableColumns: MpColumn[] = columns.filter((col) => col.format);\n    return data.map((item: any) =>\n      formattableColumns.reduce(\n        (acc, column) => {\n          const { key, format } = column;\n          acc[rawValueKey(key)] = item[rawValueKey(key)];\n          acc[key] = formatMap[\n            (format as MpColumnFormatOptions)?.type ?? format\n          ]({\n            value: item[key],\n            locale,\n            options: typeof format === \"string\" ? undefined : format,\n          });\n          return acc;\n        },\n        { ...item }\n      )\n    );\n  }, [data, columns, locale]);\n\n  useEffect(() => setDataState(formattedData), [formattedData]);\n\n  const changeData = useCallback(\n    (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n      index: number,\n      id: string | number\n    ) => {\n      const { value } = e.target;\n      setDataState((prevState) => {\n        const stateCopy: ItemType[] = [...prevState];\n        stateCopy[index][id] = value;\n        return stateCopy;\n      });\n    },\n    []\n  );\n\n  return [dataState, changeData];\n}\n","import { lighten, darken, Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    display: \"inline-flex\",\n    overflow: \"hidden\",\n    alignItems: \"center\",\n    userSelect: \"none\",\n    whiteSpace: \"pre\",\n    cursor: \"pointer\",\n    position: \"relative\",\n  },\n  disabledSort: {\n    color: theme?.palette?.text?.secondary,\n    cursor: \"default\",\n  },\n  fixedWidth: {\n    minWidth: (props: any) => props.fixedColumnWidth,\n    width: (props: any) => props.fixedColumnWidth,\n    maxWidth: (props: any) => props.fixedColumnWidth,\n  },\n  hoveredCellWithFilters: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.background.default, 0.1)\n        : lighten(theme.palette.primary.light, 0.9),\n  },\n}));\n","import { Popover } from \"@mui/material\";\nimport React, { useCallback, useEffect, Dispatch, SetStateAction } from \"react\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\nimport { RtMpColumnInstance } from \"../../types/Table\";\n\ninterface Props {\n  column: RtMpColumnInstance;\n  anchorEl?: Element | null;\n  canSort?: boolean;\n  onClose(): void;\n  isSortedDesc?: boolean;\n  doSorting(): void;\n  overridables: MpTableOverridablesMap;\n  clearFiltersEvent?: string[];\n  value?: any;\n  setValue: Dispatch<SetStateAction<any | undefined>>;\n}\n\nexport default function MpTableHeadCellOptions({\n  column,\n  anchorEl,\n  canSort,\n  onClose,\n  isSortedDesc,\n  doSorting,\n  overridables,\n  clearFiltersEvent,\n  value,\n  setValue,\n}: Props) {\n  const doFiltering = useCallback(\n    (immediateValue: any = value) => {\n      column.setFilter(immediateValue);\n      setValue(immediateValue);\n      onClose();\n    },\n    [value, column, onClose]\n  );\n\n  useEffect(() => {\n    if (\n      clearFiltersEvent != null &&\n      (!clearFiltersEvent?.length || clearFiltersEvent?.includes(column.id))\n    ) {\n      setValue(null);\n    }\n    // eslint-disable-next-line\n  }, [clearFiltersEvent]);\n\n  return (\n    <Popover\n      open={!!anchorEl}\n      anchorEl={anchorEl ?? undefined}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <overridables.headFilter\n        canSort={canSort}\n        isSortedDesc={isSortedDesc}\n        overridables={overridables}\n        doSorting={doSorting}\n        doFiltering={doFiltering}\n        value={value}\n        setValue={setValue}\n        column={column}\n      />\n    </Popover>\n  );\n}\n","import { TableCell } from \"@mui/material\";\nimport React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport useStyles from \"./MpTableHeadCell.styles\";\nimport clsx from \"clsx\";\nimport { TableCommonProps } from \"react-table\";\nimport MpTableHeadCellOptions from \"../MpTableHeadCellOptions/MpTableHeadCellOptions\";\nimport { MpTableClasses, RtMpColumnInstance } from \"../../types/Table\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\n\ninterface Props extends TableCommonProps {\n  column: RtMpColumnInstance;\n  variant?: \"simple\" | \"extended\";\n  overridables: MpTableOverridablesMap;\n  clearFiltersEvent?: string[];\n  clearColumnFilters?: boolean;\n  classes?: MpTableClasses;\n}\n\nexport default function MpTableHeadCell({\n  column,\n  variant = \"simple\",\n  overridables,\n  clearFiltersEvent,\n  clearColumnFilters,\n  classes: overrideClasses,\n}: // style,\n// className,\n// role,\nProps) {\n  const {\n    onClick: doSorting,\n    title,\n    ...sortProps\n  } = column.getSortByToggleProps() as any;\n  const { isSortedDesc } = column;\n  const { width: fixedColumnWidth } = column?.mpColumn;\n  const classes = useStyles({ fixedColumnWidth });\n  const cellRef = useRef<HTMLDivElement>(null);\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n  const [value, setValue] = useState<any | undefined>(column.filterValue);\n\n  const hasFilter = useMemo(() => !!column.mpColumn?.filter, [column]);\n  const hasWidth = useMemo(\n    () => !!column.mpColumn?.width && !!column.mpColumn?.fixedHeadWidth,\n    [column]\n  );\n  const isExtended = useMemo(\n    () => variant === \"extended\" && hasFilter,\n    [variant, hasFilter]\n  );\n\n  const [optionsAnchor, setOptionsAnchor] = useState<Element | null>(null);\n\n  const closeOptions = useCallback(\n    () => setOptionsAnchor(null),\n    [setOptionsAnchor]\n  );\n\n  const handleClick = useCallback(\n    (event?: React.MouseEvent<Element>) => {\n      if (isExtended) {\n        setOptionsAnchor(cellRef.current);\n      } else if (column.canSort) {\n        doSorting(event);\n      }\n    },\n    [doSorting, isExtended, column]\n  );\n\n  const handleClearFilters = useCallback(\n    (e: React.MouseEvent<SVGElement>) => {\n      e.stopPropagation();\n      column.setFilter(null);\n      setValue(null);\n    },\n    [column]\n  );\n\n  const handleMouseEnter = useCallback(() => setIsHovered(true), []);\n\n  const handleMouseLeave = useCallback(() => setIsHovered(false), []);\n\n  const filterSet =\n    column.filterValue != null &&\n    column.filterValue !== \"\" &&\n    (!Array.isArray(column.filterValue) || column.filterValue?.length > 0);\n\n  const highlightCell = useMemo(\n    () => filterSet && isHovered && clearColumnFilters,\n    [filterSet, isHovered, clearColumnFilters]\n  );\n\n  return (\n    <>\n      <TableCell\n        className={clsx({\n          [classes.fixedWidth]: hasWidth,\n          [overrideClasses?.hoveredCellWithFilters ??\n          classes.hoveredCellWithFilters]: highlightCell,\n        })}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...sortProps}\n      >\n        <div\n          ref={cellRef}\n          className={clsx(classes.wrapper, {\n            [classes.disabledSort]: !column.canSort && !isExtended,\n          })}\n        >\n          {column.render(\"Header\")}{\" \"}\n          <overridables.headIndicator\n            canSort={column.canSort}\n            isExtended={isExtended}\n            filterSet={filterSet}\n            isSortedDesc={isSortedDesc}\n            isHoveredCell={isHovered}\n            hasClear={clearColumnFilters}\n            clearFilters={handleClearFilters}\n          />\n        </div>\n      </TableCell>\n      {isExtended}\n      <MpTableHeadCellOptions\n        anchorEl={optionsAnchor}\n        overridables={overridables}\n        onClose={closeOptions}\n        canSort={column.canSort}\n        isSortedDesc={isSortedDesc}\n        doSorting={doSorting}\n        column={column}\n        clearFiltersEvent={clearFiltersEvent}\n        value={value}\n        setValue={setValue}\n      />\n    </>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  parent: {\n    borderRadius: \"inherit\",\n  },\n  wrapper: {\n    maxWidth: \"100%\",\n    overflowX: \"auto\",\n    borderTopLeftRadius: \"inherit\",\n    borderTopRightRadius: \"inherit\",\n  },\n  table: {\n    borderTopLeftRadius: \"inherit\",\n    borderTopRightRadius: \"inherit\",\n    overflow: \"hidden\",\n  },\n  stickyTotalsWrapper: {\n    position: \"relative\",\n    overflow: \"auto\",\n    zIndex: 1,\n  },\n  renderedCell: {\n    paddingTop: 2,\n    paddingBottom: 2,\n  },\n});\n","import { Box, TableCell, TableRow } from \"@mui/material\";\nimport { HourglassEmpty, TabUnselected } from \"@mui/icons-material\";\nimport React, { useMemo } from \"react\";\n\ninterface Props {\n  cellCount?: number;\n  loading?: boolean;\n  emptyChildren?: React.ReactNode;\n  loadingComponent?: React.ReactNode;\n}\n\nexport default function MpTableEmptyBody({\n  cellCount,\n  loading,\n  emptyChildren,\n  loadingComponent,\n}: Props) {\n  const renderLoader = useMemo(() => {\n    if (loading) {\n      return (\n        loadingComponent || <HourglassEmpty fontSize=\"large\" color=\"disabled\" />\n      );\n    }\n\n    return null;\n  }, [loading, loadingComponent]);\n\n  const renderChildren = useMemo(() => {\n    if (emptyChildren) {\n      return (\n        <>\n          {renderLoader}\n\n          {!loading && emptyChildren}\n        </>\n      );\n    }\n\n    return (\n      <Box\n        height={200}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        {renderLoader}\n\n        {!loading && <TabUnselected fontSize=\"large\" color=\"disabled\" />}\n      </Box>\n    );\n  }, [loading, renderLoader, emptyChildren]);\n\n  return (\n    <TableRow>\n      <TableCell colSpan={cellCount}>{renderChildren}</TableCell>\n    </TableRow>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  headSelectCell: {\n    maxWidth: 42,\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none\",\n    },\n  },\n  cellCheckbox: {\n    margin: -12,\n  },\n});\n","import { Box, Checkbox, TableCell } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport useStyles from \"./MpTableHeadSelectCell.styles\";\nimport { TableToggleRowsSelectedProps } from \"react-table\";\n\ninterface Props extends TableToggleRowsSelectedProps {\n  classes?: MpTableClasses;\n  selection: \"single\" | \"multiple\";\n}\n\nexport default function MpTableHeadSelectCell({\n  classes: overrideClasses,\n  selection,\n  onChange,\n  ...props\n}: Props) {\n  const classes = useStyles();\n\n  const handleCheck = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      e.stopPropagation();\n\n      onChange?.(e);\n    },\n    [onChange]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>) =>\n      e.stopPropagation(),\n    []\n  );\n\n  if (selection === \"single\") return <TableCell />;\n\n  return (\n    <TableCell\n      className={clsx(classes.headSelectCell, overrideClasses?.headSelectCell)}\n      onClick={handlePropagation}\n    >\n      <Box display=\"flex\">\n        <Checkbox\n          color=\"primary\"\n          {...props}\n          className={clsx(\n            classes.cellCheckbox,\n            overrideClasses?.headSelectCellCheckbox\n          )}\n          onChange={handleCheck}\n        />\n      </Box>\n    </TableCell>\n  );\n}\n","import { Box, Button, Divider } from \"@mui/material\";\nimport { SortByAlpha } from \"@mui/icons-material\";\nimport React, { useCallback } from \"react\";\nimport MpTableFilter from \"../../components/MpTableFilter/MpTableFilter\";\nimport { MpTableHeadFilterProps } from \"../../types/Overridables\";\n\nexport default function MpTableHeadFilter({\n  column,\n  canSort,\n  isSortedDesc,\n  doSorting,\n  doFiltering,\n  value,\n  setValue,\n  overridables,\n}: MpTableHeadFilterProps) {\n  const handleSubmit = useCallback(\n    (event: React.FormEvent) => {\n      event.preventDefault();\n      doFiltering();\n    },\n    [doFiltering]\n  );\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box minWidth={150}>\n        <MpTableFilter\n          column={column}\n          value={value}\n          setValue={setValue}\n          doFiltering={doFiltering}\n          overridables={overridables}\n        />\n        <Divider />\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          {canSort && (\n            <Box\n              paddingX={2}\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              style={{ cursor: \"pointer\" }}\n              onClick={doSorting}\n            >\n              <SortByAlpha\n                fontSize=\"small\"\n                color={isSortedDesc == null ? \"action\" : \"primary\"}\n              />\n            </Box>\n          )}\n          <Box flexGrow={1} />\n          <Button color=\"primary\" type=\"submit\">\n            Filter\n          </Button>\n        </Box>\n      </Box>\n    </form>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  wrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    position: \"relative\",\n    minHeight: 48,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n});\n","import clsx from \"clsx\";\nimport React, { useMemo } from \"react\";\nimport useStyles from \"./MpTablePaginator.styles\";\n\nimport {\n  Box,\n  Tooltip,\n  Typography,\n  IconButton,\n  CircularProgress,\n} from \"@mui/material\";\nimport { ChevronLeft, ChevronRight } from \"@mui/icons-material\";\nimport { MpTablePaginatorProps } from \"../../types/Overridables\";\n\nexport default function MpTablePaginator({\n  pageIndex,\n  previousPage,\n  itemCount,\n  nextPage,\n  pageCount,\n  pageSize,\n  loading,\n  translations,\n  selectedCount,\n}: MpTablePaginatorProps) {\n  const classes = useStyles();\n  const hasPrevious = useMemo(() => pageIndex > 0, [pageIndex]);\n  const hasNext = useMemo(\n    () => (pageCount == null ? true : pageIndex < pageCount - 1),\n    [pageIndex, pageCount]\n  );\n  const infoText = useMemo(\n    () =>\n      [\n        itemCount != null\n          ? `${itemCount} ${translations?.total ?? \"total\"}`\n          : null,\n        selectedCount != null && selectedCount > 0\n          ? `${selectedCount} ${translations?.selected ?? \"selected\"}`\n          : null,\n      ]\n        .filter((item) => item != null)\n        .join(\" • \"),\n    [itemCount, selectedCount, translations]\n  );\n\n  return (\n    <Box paddingY={1} paddingX={2} className={clsx(classes.wrapper)}>\n      <Typography color=\"textSecondary\" variant=\"body2\">\n        {infoText}\n      </Typography>\n      {loading && (\n        <Box\n          paddingX={1}\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <CircularProgress size=\"1.5em\" data-qa=\"TableProgress\" />\n        </Box>\n      )}\n      <Box className={classes.spacer} />\n      <Box paddingX={1}>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          {pageIndex * pageSize + 1} - {(pageIndex + 1) * pageSize}\n          {pageCount != null ? ` ${translations?.of ?? \"of\"} ${pageCount}` : \"\"}\n        </Typography>\n      </Box>\n      <Tooltip title={translations?.previousPage ?? \"Previous\"}>\n        <div>\n          <IconButton\n            size=\"small\"\n            onClick={previousPage}\n            disabled={!hasPrevious}\n          >\n            <ChevronLeft />\n          </IconButton>\n        </div>\n      </Tooltip>\n      <Tooltip title={translations?.nextPage ?? \"Next\"}>\n        <div>\n          <IconButton size=\"small\" onClick={nextPage} disabled={!hasNext}>\n            <ChevronRight />\n          </IconButton>\n        </div>\n      </Tooltip>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const Filter = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterArrowDown = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M11 11L16.76 3.62A1 1 0 0 0 16.59 2.22A1 1 0 0 0 16 2H2A1 1 0 0 0 1.38 2.22A1 1 0 0 0 1.21 3.62L7 11V16.87A1 1 0 0 0 7.29 17.7L9.29 19.7A1 1 0 0 0 10.7 19.7A1 1 0 0 0 11 18.87V11M13 16L18 21L23 16Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterArrowUp = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        d=\"M11 11L16.76 3.62C16.9224 3.41153 16.9957 3.14726 16.9638 2.88493C16.932 2.6226 16.7976 2.38355 16.59 2.22C16.4221 2.08505 16.2152 2.00789 16 2H1.99999C1.77443 2.00131 1.55593 2.07884 1.37999 2.22C1.17243 2.38355 1.03804 2.6226 1.00618 2.88493C0.974328 3.14726 1.0476 3.41153 1.20999 3.62L6.99999 11V16.87C6.9819 17.0213 6.99862 17.1747 7.04888 17.3186C7.09914 17.4624 7.18161 17.5929 7.28999 17.7L9.28999 19.7C9.47736 19.8863 9.73081 19.9908 9.99499 19.9908C10.2592 19.9908 10.5126 19.8863 10.7 19.7C10.8102 19.5938 10.8945 19.4638 10.9465 19.3199C10.9985 19.176 11.0168 19.0221 11 18.87V11ZM13 21L18 16L23 21H13Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import React from \"react\";\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport const FilterOutline = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n    <svg viewBox=\"0 0 24 24\">\n      <path\n        fill=\"currentColor\"\n        d=\"M15,19.88C15.04,20.18 14.94,20.5 14.71,20.71C14.32,21.1 13.69,21.1 13.3,20.71L9.29,16.7C9.06,16.47 8.96,16.16 9,15.87V10.75L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L15,10.75V19.88M7.04,5L11,10.06V15.58L13,17.58V10.05L16.96,5H7.04Z\"\n      />\n    </svg>\n  </SvgIcon>\n);\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst width = 18;\n\nexport default makeStyles((theme: Theme) => ({\n  iconWrapper: {\n    display: \"inline-flex\",\n    maxHeight: \"1em\",\n    justifyContent: \"center\",\n    maxWidth: width,\n    width: width,\n    minWidth: width,\n    alignItems: \"center\",\n  },\n  clearIcon: {\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    width: 19,\n    height: 19,\n    borderRadius: \"3px\",\n    position: \"absolute\",\n    left: 0,\n  },\n}));\n","import { Box } from \"@mui/material\";\nimport {\n  ArrowDropDown,\n  ArrowDropUp,\n  Clear,\n  ExpandMore,\n} from \"@mui/icons-material\";\nimport React, { useCallback } from \"react\";\nimport { Filter } from \"../../icons/Filter\";\nimport { FilterArrowDown } from \"../../icons/FilterArrowDown\";\nimport { FilterArrowUp } from \"../../icons/FilterArrowUp\";\nimport { FilterOutline } from \"../../icons/FilterOutline\";\nimport { MpTableHeadIndicatorProps } from \"../../types/Overridables\";\nimport useStyles from \"./MpTableHeadIndicator.styles\";\n\nexport default function MpTableHeadIndicator({\n  canSort,\n  isExtended,\n  filterSet,\n  isSortedDesc,\n  isHoveredCell,\n  hasClear,\n  clearFilters,\n}: MpTableHeadIndicatorProps) {\n  const classes = useStyles();\n\n  const handleClearClick = useCallback(\n    (e: React.MouseEvent<SVGElement>) => clearFilters && clearFilters(e),\n    [clearFilters]\n  );\n\n  return !!canSort || !!isExtended ? (\n    <Box className={classes.iconWrapper}>\n      {isSortedDesc === true ? (\n        isExtended && filterSet ? (\n          <FilterArrowDown fontSize=\"small\" color=\"primary\" />\n        ) : (\n          <ArrowDropDown color=\"primary\" />\n        )\n      ) : isSortedDesc === false ? (\n        isExtended && filterSet ? (\n          <FilterArrowUp fontSize=\"small\" color=\"primary\" />\n        ) : (\n          <ArrowDropUp color=\"primary\" />\n        )\n      ) : isExtended && !filterSet ? (\n        <FilterOutline fontSize=\"small\" color=\"disabled\" />\n      ) : isExtended && filterSet ? (\n        <>\n          <Filter fontSize=\"small\" color=\"primary\" />\n          {hasClear && isHoveredCell && (\n            <Clear className={classes.clearIcon} onClick={handleClearClick} />\n          )}\n        </>\n      ) : (\n        <ExpandMore fontSize=\"small\" color=\"disabled\" />\n      )}\n    </Box>\n  ) : null;\n}\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(2),\n  },\n}));\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  wrapper: {\n    transition: `${theme.transitions.create([\"max-width\"], {\n      duration: theme.transitions.duration.complex,\n    })}`,\n  },\n  iconSpacer: {\n    marginRight: 10,\n  },\n  menuPaper: {\n    padding: \"10px 0\",\n    marginTop: 4,\n  },\n  menuItem: {\n    paddingTop: 14,\n    paddingBottom: 0,\n    paddingRight: 0,\n    minWidth: 150,\n  },\n  overlay: {\n    zIndex: 1,\n  },\n  itemDivider: {\n    borderBottom: \"rgba(0, 0, 0, 0.1) solid 1px\",\n    marginLeft: 20,\n    paddingRight: 20,\n    width: \"100%\",\n    paddingBottom: 14,\n  },\n  noBorder: {\n    borderBottom: 0,\n  },\n}));\n","import {\n  MenuItem,\n  Box,\n  Grow,\n  Button,\n  Popper,\n  Paper,\n  ClickAwayListener,\n  MenuList,\n} from \"@mui/material\";\nimport { Close, Menu } from \"@mui/icons-material\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { MpTableBulkActionProps } from \"../../types/Overridables\";\nimport useStyles from \"./MpTableBulkActions.styles\";\nimport clsx from \"clsx\";\nimport { MpBulkActionClickParams } from \"../../types/Actions\";\nimport { handleBulkAction } from \"../../utils/Actions/Actions\";\n\nexport default function MpTableBulkActions({\n  selectedRowIds,\n  selectedRows,\n  actions,\n  methods,\n  translations,\n}: MpTableBulkActionProps) {\n  const classes = useStyles();\n  const hasSelectedRows = useMemo(\n    () => selectedRows.length > 0,\n    [selectedRows]\n  );\n  const maxWidth = useMemo(\n    () => (hasSelectedRows ? \"100%\" : 0),\n    [hasSelectedRows]\n  );\n  const [open, setOpen] = useState<boolean>(false);\n  const anchorRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (!hasSelectedRows) {\n      setOpen(false);\n    }\n  }, [hasSelectedRows]);\n\n  const handleToggle = useCallback(() => {\n    setOpen((prevOpen) => !prevOpen);\n  }, [setOpen]);\n\n  const handleClose = <E extends { target?: any | null }>(event: E) => {\n    if (anchorRef.current?.contains(event.target as HTMLElement)) {\n      return;\n    }\n  };\n\n  const handleListKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  };\n\n  const handleClick = useCallback(\n    (slug: string) => {\n      const bulkActionParams: MpBulkActionClickParams = {\n        selectedRowIds,\n        selectedRows,\n        slug,\n        methods,\n      };\n      handleBulkAction(bulkActionParams);\n    },\n    [selectedRowIds, selectedRows, methods]\n  );\n\n  const actionsMap = actions.map((action, i) => (\n    <MenuItem\n      classes={{ root: classes.menuItem }}\n      onClick={(e) => {\n        handleClose(e);\n        handleClick(action.slug);\n      }}\n      key={action.slug}\n    >\n      <Box\n        className={clsx(classes.itemDivider, {\n          [classes.noBorder]: actions.length === i + 1,\n        })}\n      >\n        {action.label}\n      </Box>\n    </MenuItem>\n  ));\n\n  return (\n    <Box maxWidth={maxWidth} overflow=\"hidden\" className={classes.wrapper}>\n      <Box width=\"fit-content\">\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? \"bulk-actions-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          {open ? (\n            <Close className={classes.iconSpacer} />\n          ) : (\n            <Menu className={classes.iconSpacer} />\n          )}\n          {translations?.total ?? \"Actions\"}\n        </Button>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n          className={classes.overlay}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"left top\" : \"left bottom\",\n              }}\n            >\n              <Paper classes={{ root: classes.menuPaper }}>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList\n                    autoFocusItem={open}\n                    id=\"bulk-actions-list-grow\"\n                    onKeyDown={handleListKeyDown}\n                    disablePadding\n                  >\n                    {actionsMap}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Box>\n    </Box>\n  );\n}\n","import { TextField } from \"@mui/material\";\nimport { Search } from \"@mui/icons-material\";\nimport React, { useCallback, useState } from \"react\";\nimport { MpTableGlobalFilterProps } from \"../../types/Overridables\";\nimport { useDebounce } from \"../../utils/Debounce/Debounce\";\n\nexport default function MpTableGlobalFilter({\n  onGlobalFilter,\n  translations,\n  globalFilters,\n}: MpTableGlobalFilterProps) {\n  const [value, setValue] = useState<string>(globalFilters?.search);\n  const debounce = useDebounce(200);\n  const handleGlobalFilter = useCallback(\n    (e: any) => {\n      setValue(e.target.value);\n      const filter = {\n        key: \"search\",\n        value: e.target.value,\n      };\n      debounce(() => onGlobalFilter(filter));\n    },\n    [onGlobalFilter, debounce]\n  );\n\n  return (\n    <TextField\n      onChange={handleGlobalFilter}\n      label={translations?.search ?? \"Search\"}\n      InputProps={{\n        endAdornment: <Search />,\n      }}\n      value={value}\n      variant=\"outlined\"\n    />\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function BreadcrumbFilterDown(props: SvgIconProps) {\n  return (\n    <SvgIcon viewBox=\"0 0 8 6\" width=\"8\" height=\"6\" {...props}>\n      <svg\n        width=\"8\"\n        height=\"6\"\n        viewBox=\"0 0 8 6\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M4.71074 5.28189C4.3194 5.67729 3.6806 5.67729 3.28926 5.28189L0.489829 2.45345C-0.135134 1.82201 0.31215 0.75 1.20057 0.75L6.79943 0.75C7.68785 0.75 8.13513 1.82201 7.51017 2.45345L4.71074 5.28189Z\"\n          fill=\"black\"\n        />\n      </svg>\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function BreadcrumbSeparator(props: SvgIconProps) {\n  return (\n    <SvgIcon width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\n      <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M10.5 16.5L15.5 11.5L10.5 6.5\"\n          stroke=\"black\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    </SvgIcon>\n  );\n}\n","import { MpBreadcrumbFilterData } from \"../../types/Filter\";\n\nexport const getNestedElementsMapReduce = (\n  data: MpBreadcrumbFilterData,\n  selection: {\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }\n): {\n  [key: string]: MpBreadcrumbFilterData[];\n} | void => {\n  if (!!data)\n    return Object.entries(data).reduce(\n      (accumulator, [key, value]) => {\n        if (Array.isArray(value)) {\n          accumulator[key] = value;\n          if (selection[key]?.id !== undefined) {\n            const filteredValue = value.filter(\n              (breadcrumb) => breadcrumb.id === selection[key]?.id\n            );\n            if (filteredValue.length > 0) {\n              return {\n                ...accumulator,\n                ...getNestedElementsMapReduce(filteredValue[0], selection),\n              };\n            }\n          }\n        }\n        return accumulator;\n      },\n      {} as {\n        [key: string]: MpBreadcrumbFilterData[];\n      }\n    );\n};\n","import { Grid, Typography, List, ListItem, Divider, Box } from \"@mui/material\";\nimport React, { useMemo } from \"react\";\nimport { MpBreadcrumbFilterData } from \"../../types/Filter\";\nimport { MpTableTranslations } from \"../../types/Table\";\n\ninterface IProps {\n  selectedKey: string;\n  items: MpBreadcrumbFilterData[];\n  onMouseEnter: (key: string, id: string, name: string) => void;\n  onClick: (selectedKey: string) => void;\n  selectedId: string | undefined;\n  translations?: MpTableTranslations;\n}\n\nexport default function BreadcrumbList({\n  selectedKey,\n  items,\n  onMouseEnter,\n  selectedId,\n  translations,\n  onClick,\n}: IProps) {\n  const breadcrumbMap = useMemo(\n    () =>\n      items.map((item) => (\n        <ListItem\n          button\n          key={item.id}\n          onMouseEnter={() =>\n            onMouseEnter(\n              selectedKey,\n              item.id as string,\n              translations?.breadcrumbs?.[item.name as string] ??\n                (item.name as string)\n            )\n          }\n          onClick={() => onClick(selectedKey)}\n          selected={selectedId === item.id}\n        >\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {translations?.breadcrumbs?.[item.name as string] ?? item.name}\n          </Typography>\n        </ListItem>\n      )),\n    [items, onClick, onMouseEnter, selectedId, selectedKey, translations]\n  );\n\n  return (\n    <Grid component={Box} minWidth=\"200px\" item>\n      <Box paddingX={2} paddingY={1}>\n        <Typography color=\"textPrimary\" variant=\"subtitle2\">\n          {translations?.breadcrumbs?.[selectedKey] ?? selectedKey}\n        </Typography>\n      </Box>\n      <Divider />\n      <List>{breadcrumbMap}</List>\n    </Grid>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles(() => ({\n  dropdownIconRoot: {\n    width: 13,\n    height: 8,\n    marginLeft: 7,\n    cursor: \"pointer\",\n  },\n\n  seperator: {\n    margin: \"0 10px\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n}));\n","import { Box, Breadcrumbs, Grid, Link, Popover } from \"@mui/material\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport BreadcrumbFilterDown from \"../../icons/BreadcrumbFilterDown\";\nimport BreadcrumbSeparator from \"../../icons/BreadcrumbSeparator\";\nimport { MpBreadcrumbFilterData } from \"../../types/Filter\";\nimport { MpTableGlobalFilterProps } from \"../../types/Overridables\";\nimport { getNestedElementsMapReduce } from \"../../utils/Breadcrumbs/Breadcrumbs\";\nimport BreadcrumbList from \"./BreadcrumbList\";\nimport useStyles from \"./MpTableBreadcrumb.styles\";\n\ninterface IProps extends MpTableGlobalFilterProps {\n  data: MpBreadcrumbFilterData;\n}\n\nexport default function MpTableBreadcrumb({\n  data,\n  translations,\n  onGlobalFilter,\n  globalFilters,\n}: IProps) {\n  const classes = useStyles();\n  const [selection, setSelection] = useState<{\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }>({});\n  const [items, setItems] = useState<{\n    [key: string]: MpBreadcrumbFilterData[];\n  }>({});\n  const [breadcrumbs, setBreadcrumbs] = useState<{\n    [key: string]: {\n      id: string | undefined;\n      name: string | undefined;\n    };\n  }>(globalFilters?.breadcrumb ?? {});\n  const containerRef = useRef<HTMLElement>(null);\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const open = useMemo(() => !!anchorEl, [anchorEl]);\n  const popoverId = useMemo(\n    () => (open ? \"breadcrumb-popover\" : undefined),\n    [open]\n  );\n\n  const updateNestedElements = useCallback(\n    (data: MpBreadcrumbFilterData) => {\n      setItems({ ...getNestedElementsMapReduce(data, selection) });\n    },\n    [selection]\n  );\n\n  const handleBreadcrumbHover = useCallback(\n    (selectedKey: string, id: string, name: string) => {\n      const itemKeys = Object.keys(items);\n      const itemEntries = Object.entries(items);\n      const selectionKeys = Object.keys(selection);\n      const selectionDepth = itemKeys.indexOf(selectedKey);\n\n      if (selectionDepth !== 0) {\n        let selectionObject = {};\n        let selectedPath: string[] =\n          breadcrumbs[selectedKey]?.id === id ? [selectedKey] : [];\n        let prevSelectedObject = {};\n        for (let i = 0; i < selectionDepth; i++) {\n          const [key, value] = itemEntries[i];\n          if (breadcrumbs[key]?.id === selection[key].id) {\n            selectedPath = [...selectedPath, key];\n          } else selectedPath = [];\n          if (selectionKeys.indexOf(key) !== -1) {\n            prevSelectedObject = {\n              ...prevSelectedObject,\n              [key]: {\n                id: selection[key].id,\n                name: selection[key].name,\n              },\n            };\n          }\n          if (selectionKeys.indexOf(key) === -1) {\n            selectionObject = {\n              ...selectionObject,\n              [key]: {\n                id: value[0].id,\n                name: value[0].name,\n              },\n            };\n          }\n        }\n        if (selectedPath?.length - 1 === selectionDepth)\n          prevSelectedObject = breadcrumbs;\n        setSelection(() => {\n          return {\n            ...prevSelectedObject,\n            ...selectionObject,\n            [selectedKey]: {\n              id,\n              name,\n            },\n          };\n        });\n      } else {\n        setSelection(() => {\n          if (breadcrumbs[selectedKey]?.id === id) return breadcrumbs;\n          return {\n            [selectedKey]: {\n              id,\n              name,\n            },\n          };\n        });\n      }\n    },\n    [items, selection, breadcrumbs]\n  );\n\n  const handleBreadcrumbClick = useCallback(\n    (selectedKey: string, isLastClick?: boolean) => {\n      const selectionEntries = Object.entries(selection);\n      const selectionDepth = Object.keys(selection).indexOf(selectedKey) + 1;\n      if (isLastClick) {\n        setAnchorEl(containerRef.current);\n        setSelection(breadcrumbs);\n      } else {\n        const slicedArray = selectionEntries.slice(0, selectionDepth);\n        const slicedObject = Object.fromEntries(slicedArray);\n        onGlobalFilter({\n          key: \"breadcrumb\",\n          value: slicedObject,\n        });\n        setBreadcrumbs(slicedObject);\n        setSelection(slicedObject);\n        setAnchorEl(null);\n      }\n    },\n    [breadcrumbs, onGlobalFilter, selection]\n  );\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n    setSelection(breadcrumbs);\n  }, [breadcrumbs]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => updateNestedElements(data), [selection, data]);\n\n  useEffect(() => {\n    if (Object.keys(selection)?.length < 1) setSelection(breadcrumbs);\n  }, [breadcrumbs, selection]);\n\n  useEffect(\n    () => setBreadcrumbs(globalFilters?.breadcrumb ?? {}),\n    [globalFilters?.breadcrumb]\n  );\n\n  const breadcrumbGridMap = useMemo(() => {\n    const entries = Object.entries(items);\n    const gridItems = [];\n    for (const [key, value] of entries) {\n      gridItems.push(\n        <BreadcrumbList\n          key={key}\n          selectedKey={key}\n          items={value}\n          onMouseEnter={handleBreadcrumbHover}\n          onClick={handleBreadcrumbClick}\n          selectedId={selection[key]?.id}\n          translations={translations ?? {}}\n        />\n      );\n    }\n\n    return gridItems;\n  }, [\n    handleBreadcrumbClick,\n    handleBreadcrumbHover,\n    items,\n    selection,\n    translations,\n  ]);\n\n  const breadcrumbSelectionMap = useMemo(() => {\n    const entries = Object.entries(breadcrumbs);\n    const lastItem = entries[entries.length - 1];\n    const breadcrumbItems = [\n      <Link\n        color=\"textPrimary\"\n        variant=\"h6\"\n        onClick={() => handleBreadcrumbClick(\"\", entries.length === 0)}\n        key=\"initial-table-breadcrumb\"\n        classes={{ root: classes.pointer }}\n      >\n        {translations?.all ?? \"All\"}\n      </Link>,\n    ];\n    for (const [key, value] of entries) {\n      breadcrumbItems.push(\n        <Link\n          color=\"textPrimary\"\n          variant=\"h6\"\n          key={value.id}\n          onClick={() => handleBreadcrumbClick(key, key === lastItem[0])}\n          aria-describedby={popoverId}\n          classes={{ root: classes.pointer }}\n        >\n          {value.name}\n        </Link>\n      );\n    }\n\n    return breadcrumbItems;\n  }, [\n    breadcrumbs,\n    classes.pointer,\n    handleBreadcrumbClick,\n    popoverId,\n    translations?.all,\n  ]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Box display=\"flex\" alignItems=\"center\">\n        <Breadcrumbs\n          separator={<BreadcrumbSeparator />}\n          classes={{ separator: classes.seperator }}\n          ref={containerRef}\n        >\n          {breadcrumbSelectionMap}\n        </Breadcrumbs>\n        <BreadcrumbFilterDown\n          classes={{ root: classes.dropdownIconRoot }}\n          onClick={() => handleBreadcrumbClick(\"\", true)}\n        />\n      </Box>\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        PaperProps={{\n          style: { maxHeight: \"500px\" },\n        }}\n      >\n        <Box padding={1} height=\"100%\">\n          <Grid container height=\"100%\">\n            {breadcrumbGridMap}\n          </Grid>\n        </Box>\n      </Popover>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport useStyles from \"./MpTableGlobalActions.styles\";\nimport { MpTableGlobalActionProps } from \"../../types/Overridables\";\nimport MpTableBulkActions from \"../../components/MpTableBulkActions/MpTableBulkActions\";\nimport { Box } from \"@mui/material\";\nimport MpTableGlobalFilter from \"../../components/MpTableGlobalFilter/MpTableGlobalFilter\";\nimport MpTableBreadcrumb from \"../../components/MpTableBreadcrumb/MpTableBreadcrumb\";\n\nexport default function MpTableGlobalActions({\n  selectedRowIds,\n  selectedRows,\n  actions,\n  methods,\n  translations,\n  onGlobalFilter,\n  globalFilters,\n  breadcrumbFilterData,\n}: MpTableGlobalActionProps) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.wrapper}>\n      {!!actions && (\n        <MpTableBulkActions\n          selectedRowIds={selectedRowIds}\n          selectedRows={selectedRows}\n          actions={actions}\n          methods={methods}\n          translations={translations}\n        />\n      )}\n      {!!breadcrumbFilterData && (\n        <MpTableBreadcrumb\n          onGlobalFilter={onGlobalFilter}\n          translations={translations}\n          globalFilters={globalFilters}\n          data={breadcrumbFilterData}\n        />\n      )}\n      <MpTableGlobalFilter\n        onGlobalFilter={onGlobalFilter}\n        translations={translations}\n        globalFilters={globalFilters}\n      />\n    </Box>\n  );\n}\n","import MpTableHeadFilter from \"./MpTableHeadFilter/MpTableHeadFilter\";\nimport MpTablePaginator from \"./MpTablePaginator/MpTablePaginator\";\nimport { MpTableOverridablesMap } from \"../types/Overridables\";\nimport MpTableHeadIndicator from \"./MpTableHeadIndicator/MpTableHeadIndicator\";\nimport MpTableGlobalActions from \"./MpTableGlobalActions/MpTableGlobalActions\";\n\nexport const defaultOverridables: Omit<\n  MpTableOverridablesMap,\n  \"renderers\" | \"filters\" | \"filterFunctions\"\n> = {\n  paginator: MpTablePaginator,\n  headFilter: MpTableHeadFilter,\n  headIndicator: MpTableHeadIndicator,\n  globalActions: MpTableGlobalActions,\n};\n","import { Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  footer: {\n    transition: theme.transitions.create([\"background\", \"box-shadow\"]),\n    background: \"rgba(0,0,0,0)\",\n    boxShadow: \"none\",\n  },\n  raised: {\n    background: theme.palette.background.paper,\n    boxShadow: theme.shadows[15],\n  },\n}));\n","import { TableFooter, TableFooterProps } from \"@mui/material\";\nimport React, {\n  PropsWithChildren,\n  RefObject,\n  useLayoutEffect,\n  useRef,\n} from \"react\";\nimport useStyles from \"./MpTableStickyTotalsFooter.styles\";\n\nconst win = typeof window === \"undefined\" ? null : window;\n\nexport default function MpTableStickyTotalsFooter({\n  children,\n  bodyRef,\n  ...props\n}: PropsWithChildren<TableFooterProps> & {\n  bodyRef: RefObject<HTMLTableSectionElement>;\n}) {\n  const classes = useStyles();\n  const ref = useRef<HTMLTableSectionElement>(null);\n\n  useLayoutEffect(() => {\n    let timeout: any = null;\n    let queuedUpdate: boolean = false;\n    let transformValue: number = 0;\n    const fps = 120;\n\n    // Update the styles\n    const update = () => {\n      const calculatedTransform = -(\n        (bodyRef?.current?.getBoundingClientRect().bottom ?? 0) -\n        window.innerHeight +\n        (ref?.current?.offsetHeight ?? 0)\n      );\n      const transform =\n        calculatedTransform >= 0 ? \"\" : `translateY(${calculatedTransform}px)`;\n      if (ref.current) {\n        ref.current.style.transform = transform;\n        if (calculatedTransform < 0 && transformValue >= 0) {\n          ref.current.classList.add(classes.raised);\n        } else if (calculatedTransform >= 0 && transformValue < 0) {\n          ref.current.classList.remove(classes.raised);\n        }\n      }\n      transformValue = calculatedTransform;\n      timeout = setTimeout(() => {\n        timeout = null;\n        if (queuedUpdate) {\n          queuedUpdate = false;\n          update();\n        }\n      }, 1000 / fps);\n    };\n\n    // Throttle the update\n    const triggerUpdate = () => {\n      if (timeout === null) {\n        update();\n      } else {\n        queuedUpdate = true;\n      }\n    };\n\n    // Set event listeners\n    win?.addEventListener(\"scroll\", triggerUpdate);\n    win?.addEventListener(\"resize\", triggerUpdate);\n    triggerUpdate();\n\n    // Remove event listeners\n    return () => {\n      win?.removeEventListener(\"scroll\", triggerUpdate);\n      win?.removeEventListener(\"resize\", triggerUpdate);\n    };\n  }, [bodyRef, classes.raised, children]);\n\n  return (\n    <TableFooter {...props} className={classes.footer} ref={ref}>\n      {children}\n    </TableFooter>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  totalsSelectCell: {\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none !important\",\n      boxShadow: \"none !important\",\n    },\n  },\n});\n","import { TableCell, TableFooter, TableRow } from \"@mui/material\";\nimport React, { RefObject, useCallback } from \"react\";\nimport { HeaderGroup } from \"react-table\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport MpTableStickyTotalsFooter from \"../MpTableStickyTotalsFooter/MpTableStickyTotalsFooter\";\nimport useStyles from \"./MpTableTotals.styles\";\nimport clsx from \"clsx\";\n\ninterface Props {\n  footerGroups: HeaderGroup<{}>[];\n  hasSelection?: boolean;\n  stickyTotals?: boolean;\n  classes?: MpTableClasses;\n  bodyRef: RefObject<HTMLTableSectionElement>;\n}\n\nexport default function MpTableTotals({\n  footerGroups,\n  hasSelection,\n  stickyTotals,\n  classes: overrideClasses,\n  bodyRef,\n}: Props) {\n  const classes = useStyles();\n\n  const handleFixedWidth = useCallback((column) => {\n    const cellWidth = column.mpColumn?.width;\n    return cellWidth\n      ? {\n          minWidth: cellWidth,\n          width: cellWidth,\n          maxWidth: cellWidth,\n        }\n      : undefined;\n  }, []);\n\n  const groups = footerGroups.map((group) => (\n    <TableRow {...group.getFooterGroupProps()}>\n      {hasSelection && (\n        <TableCell\n          className={clsx(\n            classes.totalsSelectCell,\n            overrideClasses?.totalsSelectCell\n          )}\n        />\n      )}\n      {group.headers.map((column) => (\n        <TableCell\n          style={handleFixedWidth(column)}\n          {...column.getFooterProps()}\n        >\n          {(column as any).Footer != null && column.render(\"Footer\")}\n        </TableCell>\n      ))}\n    </TableRow>\n  ));\n\n  return stickyTotals ? (\n    <MpTableStickyTotalsFooter bodyRef={bodyRef}>\n      {groups}\n    </MpTableStickyTotalsFooter>\n  ) : (\n    <TableFooter>{groups}</TableFooter>\n  );\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  selectCell: {\n    maxWidth: 42,\n    paddingRight: 0,\n    \"&:not(:last-child)\": {\n      borderRight: \"none\",\n    },\n    \"tr:last-child &\": {\n      overflow: \"hidden\",\n    },\n  },\n  cellCheckbox: {\n    margin: -12,\n  },\n});\n","import { Box, Checkbox, TableCell } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport { Row, UseRowSelectRowProps } from \"react-table\";\nimport { MpTableClasses } from \"../../types/Table\";\nimport useStyles from \"./MpTableSelectCell.styles\";\nimport clsx from \"clsx\";\ninterface Props {\n  row: Row & UseRowSelectRowProps<{}>;\n  classes?: MpTableClasses;\n  selection: \"single\" | \"multiple\";\n  toggleAllRowsSelected: (value?: boolean) => void;\n}\n\nexport default function MpTableSelectCell({\n  row,\n  selection,\n  toggleAllRowsSelected,\n  classes: overrideClasses,\n}: Props) {\n  const props = row.getToggleRowSelectedProps();\n  const classes = useStyles();\n\n  const handleCheck = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (selection === \"single\") {\n        toggleAllRowsSelected(false);\n      }\n\n      row.toggleRowSelected(e.target.checked);\n    },\n    [row, selection, toggleAllRowsSelected]\n  );\n\n  const handlePropagation = useCallback(\n    (e: React.MouseEvent<HTMLTableDataCellElement, MouseEvent>) =>\n      e.stopPropagation(),\n    []\n  );\n\n  return (\n    <TableCell\n      className={clsx(classes.selectCell, overrideClasses?.selectCell)}\n      onClick={handlePropagation}\n    >\n      <Box display=\"flex\">\n        <Checkbox\n          color=\"primary\"\n          {...props}\n          className={clsx(\n            classes.cellCheckbox,\n            overrideClasses?.selectCellCheckbox\n          )}\n          onChange={handleCheck}\n        />\n      </Box>\n    </TableCell>\n  );\n}\n","import { darken, lighten, Theme } from \"@mui/material/styles\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles((theme: Theme) => ({\n  renderedCell: {\n    paddingTop: 2,\n    paddingBottom: 2,\n  },\n  highlightedPrimary: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.primary.main, 0.7)\n        : lighten(theme.palette.primary.main, 0.9),\n  },\n  highlightedSecondary: {\n    background:\n      theme.palette.mode === \"dark\"\n        ? darken(theme.palette.secondary.main, 0.7)\n        : lighten(theme.palette.secondary.main, 0.9),\n  },\n  highlightedInactive: {\n    background: theme.palette.background.default,\n    color: theme.palette.text.secondary,\n  },\n  cell: {\n    color: \"inherit\",\n  },\n  pointer: {\n    cursor: \"pointer\",\n  },\n}));\n","import { TableCell, TableRow } from \"@mui/material\";\nimport React, { useCallback } from \"react\";\nimport { Row, UseRowSelectRowProps } from \"react-table\";\nimport MpTableSelectCell from \"../MpTableSelectCell/MpTableSelectCell\";\nimport clsx from \"clsx\";\nimport useStyles from \"./MpTableRow.styles\";\nimport {\n  MpTableClasses,\n  MpTableHighlights,\n  RtMpColumnInstance,\n} from \"../../types/Table\";\nimport { useRowHighlights } from \"../../utils/Highlights/Highlights\";\n\ninterface Props {\n  row: Row & UseRowSelectRowProps<{}>;\n  selection?: \"single\" | \"multiple\";\n  classes?: MpTableClasses;\n  highlights?: MpTableHighlights;\n  toggleAllRowsSelected: (value?: boolean) => void;\n  onRowClick?: (row?: Row & UseRowSelectRowProps<{}>) => void;\n}\n\nexport default function MpTableRow({\n  row,\n  selection,\n  classes: overrideClasses,\n  toggleAllRowsSelected,\n  highlights,\n  onRowClick,\n}: Props) {\n  const { inactive, primary, secondary } = useRowHighlights(row, highlights);\n  const classes = useStyles();\n\n  const handleRowClick = useCallback(() => {\n    onRowClick?.(row);\n  }, [onRowClick, row]);\n\n  const handleFixedWidth = useCallback((cell) => {\n    const cellWidth = (cell.column as RtMpColumnInstance).mpColumn?.width;\n    return cellWidth\n      ? {\n          minWidth: cellWidth,\n          width: cellWidth,\n          maxWidth: cellWidth,\n        }\n      : undefined;\n  }, []);\n\n  return (\n    <TableRow\n      {...row.getRowProps()}\n      className={clsx({\n        [overrideClasses?.row ?? \"\"]: overrideClasses?.row != null,\n        [overrideClasses?.highlightedInactive ?? classes.highlightedInactive]:\n          inactive,\n        [overrideClasses?.highlightedPrimary ?? classes.highlightedPrimary]:\n          primary,\n        [overrideClasses?.highlightedSecondary ?? classes.highlightedSecondary]:\n          secondary,\n        [classes.pointer]: onRowClick,\n        [overrideClasses?.rowSelected ?? \"\"]:\n          overrideClasses?.rowSelected != null && row.isSelected,\n      })}\n      onClick={handleRowClick}\n    >\n      {selection != null && (\n        <MpTableSelectCell\n          classes={overrideClasses}\n          row={row}\n          selection={selection}\n          toggleAllRowsSelected={toggleAllRowsSelected}\n        />\n      )}\n      {row.cells.map((cell) => {\n        return (\n          <TableCell\n            {...cell.getCellProps()}\n            className={clsx(classes.cell, {\n              [classes.renderedCell]:\n                (cell.column as any).mpColumn.render != null,\n            })}\n            style={handleFixedWidth(cell)}\n          >\n            {cell.render(\"Cell\")}\n          </TableCell>\n        );\n      })}\n    </TableRow>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Row } from \"react-table\";\nimport { MpTableHighlights } from \"../../types/Table\";\n\nexport function useRowHighlights(row: Row, highlights?: MpTableHighlights) {\n  const { original } = row;\n  return useMemo(\n    () => ({\n      inactive: highlights?.inactive\n        ? !!original?.[highlights?.inactive]\n        : false,\n      primary: highlights?.primary ? !!original?.[highlights?.primary] : false,\n      secondary: highlights?.secondary\n        ? !!original?.[highlights?.secondary]\n        : false,\n    }),\n    [original, highlights]\n  );\n}\n","import { useMemo, useCallback, useState, useEffect } from \"react\";\n\nexport const getFromStorage = (\n  key: string,\n  storage: Storage = localStorage\n) => {\n  try {\n    const raw = storage.getItem(key);\n    return raw != null && raw !== \"\" ? JSON.parse(raw ?? \"\") : null;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n    return null;\n  }\n};\n\nexport const useStorage = <T>(\n  key: string,\n  storage: Storage = localStorage\n): [T | undefined, (value: T) => void] => {\n  const cache: T | undefined = useMemo(() => {\n    const item = getFromStorage(key, storage);\n    try {\n      return JSON.parse(item);\n    } catch (e) {\n      return item;\n    }\n  }, [key, storage]);\n\n  const setCache = useCallback(\n    (value: T) => {\n      storage.setItem(key, JSON.stringify(value));\n    },\n    [key, storage]\n  );\n\n  return [cache, setCache];\n};\n\nexport const useStoredState = <T = any>(key: string, defaultValue: T) => {\n  const [cache, setCache] = useStorage<T>(key);\n\n  const tuple = useState<T>(cache ?? defaultValue);\n  const [value] = tuple;\n\n  useEffect(() => {\n    setCache(value);\n  }, [setCache, value]);\n\n  return tuple;\n};\n","import React, { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport clsx from \"clsx\";\nimport { MpTableProps, RtMpColumnInstance } from \"../../types/Table\";\nimport {\n  Column,\n  Filters,\n  Row,\n  SortingRule,\n  TableInstance,\n  TableOptions,\n  TableState,\n  useFilters,\n  UseFiltersInstanceProps,\n  UseFiltersOptions,\n  UseFiltersState,\n  usePagination,\n  UsePaginationInstanceProps,\n  UsePaginationOptions,\n  UsePaginationState,\n  useRowSelect,\n  UseRowSelectInstanceProps,\n  UseRowSelectRowProps,\n  UseRowSelectState,\n  useSortBy,\n  UseSortByInstanceProps,\n  UseSortByState,\n  useTable,\n} from \"react-table\";\nimport { Box, Table, TableBody, TableHead, TableRow } from \"@mui/material\";\nimport { convertMpToColumn } from \"../../utils/ColumnAdapter/ColumnAdapter\";\nimport { useDataFormatters } from \"../../utils/DataFormatter/DataFormatter\";\nimport { useDataArguments } from \"../../utils/DataArguments/DataArguments\";\nimport MpTableHeadCell from \"../MpTableHeadCell/MpTableHeadCell\";\nimport useStyles from \"./MpTable.styles\";\nimport MpTableEmptyBody from \"../MpTableEmptyBody/MpTableEmptyBody\";\nimport MpTableHeadSelectCell from \"../MpTableHeadSelectCell/MpTableHeadSelectCell\";\nimport { useOverridables } from \"../../utils/Overridables/Overridables\";\nimport MpTableTotals from \"../MpTableTotals/MpTableTotals\";\nimport { MetaContext } from \"../../utils/MetaContext/MetaContext\";\nimport { Meta } from \"../../types/Meta\";\nimport { MpBulkActionMethods, MpActions } from \"../../types/Actions\";\nimport MpTableRow from \"../MpTableRow/MpTableRow\";\nimport { useStorage } from \"../../utils/Storage/Storage\";\nimport { MpGlobalFilters } from \"../../types/Filter\";\nimport { useGlobalFilters, useRemoteFilters } from \"../../utils/Filter/Filter\";\n\nconst emptyData: any[] = [];\n\nexport default function MpTable<ItemType extends Object = any>({\n  columns: mpColumns,\n  data = emptyData,\n  loading,\n  size,\n  onGetData,\n  dataCount,\n  storageIdentifier,\n  cacheFilters,\n  cacheSorting,\n  cacheGlobalFilter,\n  filterVariant = \"head\",\n  localPagination = false,\n  localSorting = false,\n  localFiltering = false,\n  translations,\n  pageSize = 10,\n  overridables: partialOverridables,\n  rowIdKey,\n  selection,\n  totals,\n  stickyTotals,\n  totalsData,\n  bulkActions,\n  bulkMethods,\n  rowMethods,\n  highlights,\n  clearColumnFilters = false,\n  classes: overrideClasses,\n  asyncGetMethods,\n  locale,\n  disablePagination,\n  disableSorting,\n  onRowClick,\n  enableGlobalActions,\n  breadcrumbFilterData,\n  onEdit,\n  onRowsSelected,\n  emptyChildren,\n  loadingComponent,\n  clearFiltersEvent,\n  resetSelectedRows = true,\n}: MpTableProps<ItemType>) {\n  const columns: Column<any>[] = useMemo(\n    () => mpColumns.map(convertMpToColumn(partialOverridables, disableSorting)),\n    [mpColumns, partialOverridables, disableSorting]\n  );\n  const remoteFiltersColumns = useRemoteFilters(mpColumns);\n  const classes = useStyles();\n  const bodyRef = useRef<HTMLTableSectionElement>(null);\n\n  const pageCount = useMemo(\n    () =>\n      dataCount && !disablePagination\n        ? Math.ceil((dataCount ?? 0) / pageSize)\n        : undefined,\n    [dataCount, pageSize, disablePagination]\n  );\n  const [filtersCache, setFiltersCache] = useStorage<Filters<{}>>(\n    `${storageIdentifier}-filters`\n  );\n  const [sortingCache, setSortingCache] = useStorage<SortingRule<{}>[]>(\n    `${storageIdentifier}-sorting`\n  );\n  const [globalFiltersCache, setGlobalFiltersCache] = useStorage<\n    MpGlobalFilters | undefined\n  >(`${storageIdentifier}-globalFilter`);\n  const [globalFilters, { setGlobalFilters }] = useGlobalFilters(\n    cacheGlobalFilter ? globalFiltersCache : undefined\n  );\n\n  const initialState = useMemo(\n    () =>\n      ({\n        pageIndex: 0,\n        filters: cacheFilters ? filtersCache ?? [] : [],\n        sortBy: cacheSorting ? sortingCache ?? [] : [],\n        pageSize: disablePagination ? undefined : pageSize,\n      } as Partial<TableState & UsePaginationState<{}>>),\n    [\n      filtersCache,\n      cacheFilters,\n      sortingCache,\n      cacheSorting,\n      pageSize,\n      disablePagination,\n    ]\n  );\n\n  const overridables = useOverridables(partialOverridables);\n  const [dataState, setDataState] = useDataFormatters<ItemType>(\n    data,\n    mpColumns,\n    locale\n  );\n\n  const getRowId = useCallback((row: Row) => row?.[rowIdKey], [rowIdKey]);\n\n  const tableOptions = useMemo(\n    () =>\n      ({\n        columns,\n        data: dataState,\n        initialState,\n        manualPagination: !localPagination,\n        manualSortBy: !localSorting,\n        manualFilters: !localFiltering,\n        autoResetFilters: !(localFiltering && !!remoteFiltersColumns?.length),\n        getRowId,\n        autoResetPage: false,\n        pageCount,\n        autoResetSelectedRows: resetSelectedRows,\n      } as TableOptions<{}> & UsePaginationOptions<{}> & UseFiltersOptions<{}>),\n    [\n      columns,\n      dataState,\n      initialState,\n      localPagination,\n      localSorting,\n      localFiltering,\n      remoteFiltersColumns?.length,\n      getRowId,\n      pageCount,\n    ]\n  );\n\n  const tableInstance = useTable(\n    tableOptions,\n    useFilters,\n    useSortBy,\n    usePagination,\n    useRowSelect\n  );\n  const {\n    visibleColumns,\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    page,\n    prepareRow,\n    nextPage,\n    previousPage,\n    gotoPage,\n    getToggleAllRowsSelectedProps,\n    toggleAllRowsSelected,\n    selectedFlatRows,\n    setAllFilters,\n    setFilter,\n  } = tableInstance as TableInstance &\n    UsePaginationInstanceProps<{}> &\n    UseSortByInstanceProps<{}> &\n    UseFiltersInstanceProps<{}> &\n    UseRowSelectInstanceProps<{}>;\n  const state = tableInstance.state as TableState &\n    UsePaginationState<{}> &\n    UseSortByState<{}> &\n    UseFiltersState<{}> &\n    UseRowSelectState<{}>;\n\n  const dataArguments = useDataArguments({\n    state,\n    visibleColumns,\n    localFiltering,\n    localPagination,\n    localSorting,\n    rowIdKey,\n    globalFilters,\n    remoteFiltersColumns,\n  });\n\n  useEffect(() => {\n    onGetData(dataArguments);\n  }, [onGetData, dataArguments]);\n\n  useEffect(() => {\n    if (cacheFilters) {\n      setFiltersCache(state.filters);\n    }\n  }, [cacheFilters, state.filters, setFiltersCache]);\n\n  useEffect(() => {\n    if (cacheSorting) {\n      setSortingCache(state.sortBy);\n    }\n  }, [cacheSorting, state.sortBy, setSortingCache]);\n\n  useEffect(() => {\n    if (cacheGlobalFilter) {\n      setGlobalFiltersCache(globalFilters);\n    }\n  }, [cacheGlobalFilter, setGlobalFiltersCache, globalFilters]);\n\n  useEffect(() => {\n    onEdit?.(dataState);\n  }, [dataState, onEdit]);\n\n  useEffect(() => {\n    if (typeof onRowsSelected === \"function\") {\n      onRowsSelected(selectedFlatRows);\n    }\n  }, [selectedFlatRows, onRowsSelected]);\n\n  useEffect(() => {\n    if (clearFiltersEvent != null) {\n      if (!clearFiltersEvent?.length) setAllFilters([]);\n      if (!!clearFiltersEvent?.length) {\n        clearFiltersEvent.forEach((filter) => setFilter(filter, []));\n      }\n    }\n  }, [clearFiltersEvent, setAllFilters, setFilter]);\n\n  const bodyStyle = useMemo(\n    () => ({\n      opacity: loading ? 0.5 : undefined,\n    }),\n    [loading]\n  );\n\n  const cellCount = useMemo(() => {\n    return columns.length + (!!selection ? 1 : 0);\n  }, [columns, selection]);\n\n  const meta: Meta<ItemType> = useMemo(\n    () => ({\n      totalsData,\n      size,\n      rowMethods,\n      translations,\n      locale,\n      asyncGetMethods,\n      localPagination,\n      localSorting,\n      localFiltering,\n      onInputChange: setDataState,\n    }),\n    [\n      totalsData,\n      size,\n      rowMethods,\n      translations,\n      locale,\n      asyncGetMethods,\n      localPagination,\n      localSorting,\n      localFiltering,\n      setDataState,\n    ]\n  );\n\n  return (\n    <MetaContext.Provider value={meta}>\n      <Box className={classes.parent}>\n        {enableGlobalActions && (\n          <overridables.globalActions\n            selectedRows={selectedFlatRows}\n            selectedRowIds={state.selectedRowIds}\n            actions={bulkActions as MpActions}\n            methods={bulkMethods as MpBulkActionMethods}\n            translations={translations}\n            onGlobalFilter={setGlobalFilters}\n            globalFilters={globalFilters}\n            breadcrumbFilterData={breadcrumbFilterData}\n          />\n        )}\n        <Box\n          className={clsx(classes.wrapper, overrideClasses?.tableWrapper, {\n            [classes.stickyTotalsWrapper]: stickyTotals,\n          })}\n        >\n          <Table\n            size={size}\n            {...getTableProps()}\n            className={clsx(classes.table, overrideClasses?.table)}\n          >\n            <TableHead>\n              {headerGroups.map((headerGroup: any) => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                  {selection != null && (\n                    <MpTableHeadSelectCell\n                      classes={overrideClasses}\n                      selection={selection}\n                      {...getToggleAllRowsSelectedProps()}\n                    />\n                  )}\n                  {headerGroup.headers.map((column: RtMpColumnInstance) => (\n                    <MpTableHeadCell\n                      {...column.getHeaderProps()}\n                      overridables={overridables}\n                      variant={filterVariant === \"head\" ? \"extended\" : \"simple\"}\n                      column={column}\n                      clearFiltersEvent={clearFiltersEvent}\n                      clearColumnFilters={clearColumnFilters}\n                      classes={overrideClasses}\n                    />\n                  ))}\n                </TableRow>\n              ))}\n            </TableHead>\n            <TableBody {...getTableBodyProps()} style={bodyStyle} ref={bodyRef}>\n              {page.length < 1 && (\n                <MpTableEmptyBody\n                  cellCount={cellCount}\n                  loading={loading}\n                  emptyChildren={emptyChildren}\n                  loadingComponent={loadingComponent}\n                />\n              )}\n              {page.map((row: Row & UseRowSelectRowProps<{}>) => {\n                prepareRow(row);\n                return (\n                  <MpTableRow\n                    key={row.getRowProps().key}\n                    row={row}\n                    highlights={highlights}\n                    classes={overrideClasses}\n                    selection={selection}\n                    toggleAllRowsSelected={toggleAllRowsSelected}\n                    onRowClick={onRowClick}\n                  />\n                );\n              })}\n            </TableBody>\n            {!!totals && !!totalsData && (\n              <MpTableTotals\n                footerGroups={footerGroups}\n                hasSelection={selection != null}\n                classes={overrideClasses}\n                bodyRef={bodyRef}\n                stickyTotals={stickyTotals}\n              />\n            )}\n          </Table>\n        </Box>\n        {!disablePagination && (\n          <overridables.paginator\n            pageSize={state.pageSize}\n            itemCount={dataCount}\n            pageCount={pageCount}\n            pageIndex={state.pageIndex}\n            previousPage={previousPage}\n            nextPage={nextPage}\n            gotoPage={gotoPage}\n            loading={loading}\n            translations={translations}\n            selectedCount={selectedFlatRows.length}\n          />\n        )}\n      </Box>\n    </MetaContext.Provider>\n  );\n}\n","import { useMemo } from \"react\";\nimport { defaultOverridables } from \"../../overridables/Overridables\";\nimport { MpTableOverridablesMap } from \"../../types/Overridables\";\n\nexport function useOverridables(\n  overridables?: Partial<MpTableOverridablesMap>\n) {\n  return useMemo(\n    () => ({\n      ...defaultOverridables,\n      ...(overridables ?? {}),\n    }),\n    [overridables]\n  );\n}\n","import { MpColumn } from \"./../../types/Table\";\nimport { MpGlobalFilters } from \"./../../types/Filter\";\nimport { useMemo, useRef } from \"react\";\nimport {\n  ColumnInstance,\n  TableState,\n  UseFiltersState,\n  UsePaginationState,\n  UseSortByState,\n} from \"react-table\";\nimport { MpTableDataArguments } from \"../../types/Table\";\n\ninterface Options {\n  state: TableState &\n    UsePaginationState<{}> &\n    UseSortByState<{}> &\n    UseFiltersState<{}>;\n  visibleColumns: ColumnInstance<any>[];\n  rowIdKey: string;\n  localFiltering?: boolean;\n  localPagination?: boolean;\n  localSorting?: boolean;\n  globalFilters?: MpGlobalFilters;\n  remoteFiltersColumns?: MpColumn[];\n}\n\nfunction shallowEqual(a?: Record<string, any>, b?: Record<string, any>) {\n  return ![...Object.keys(a ?? {}), ...Object.keys(b ?? {})].find((key) => {\n    return a?.[key] !== b?.[key];\n  });\n}\n\nexport function useDataArguments({\n  state,\n  visibleColumns,\n  localFiltering,\n  localSorting,\n  rowIdKey,\n  localPagination,\n  globalFilters,\n  remoteFiltersColumns,\n}: Options): MpTableDataArguments {\n  const sortBy = useMemo(() => (localSorting ? undefined : state.sortBy), [\n    localSorting,\n    state,\n  ]);\n  const pageSize = useMemo(\n    () => (localPagination ? undefined : state.pageSize),\n    [state, localPagination]\n  );\n  const pageIndex = useMemo(\n    () => (localPagination ? undefined : state.pageIndex),\n    [state, localPagination]\n  );\n\n  const hybridFilterCache = useRef<any>();\n  const filters = useMemo(() => {\n    if (localFiltering && !remoteFiltersColumns?.length) {\n      return undefined;\n    } else if (!localFiltering && !remoteFiltersColumns?.length) {\n      return state.filters;\n    } else {\n      const hybridFilters = state.filters\n        ?.filter((filter) => {\n          return !!remoteFiltersColumns?.find(({ key }) => key === filter.id);\n        })\n        ?.reduce((acc, filter) => {\n          acc[filter.id] = filter.value;\n          return acc;\n        }, {} as Record<string, any>);\n      if (!shallowEqual(hybridFilterCache.current, hybridFilters)) {\n        hybridFilterCache.current = hybridFilters;\n        return hybridFilters;\n      } else {\n        return hybridFilterCache.current;\n      }\n    }\n  }, [localFiltering, remoteFiltersColumns, state]);\n\n  const columnIds = useMemo(() => visibleColumns.map((column) => column.id), [\n    visibleColumns,\n  ]);\n  const globalFilterData = useMemo(() => globalFilters, [globalFilters]);\n\n  return useMemo(() => {\n    const result: MpTableDataArguments = {\n      columns: [rowIdKey, ...columnIds],\n    };\n    if (pageSize != null && pageIndex != null) {\n      result.cursor = pageIndex * pageSize;\n    }\n    if (pageSize != null) {\n      result.limit = pageSize;\n    }\n    if (sortBy != null) {\n      result.sort = sortBy.map((rule) => ({\n        key: rule.id,\n        desc: rule.desc,\n      }));\n    }\n    if (filters != null) {\n      result.filters = filters;\n    }\n    if (globalFilterData != null) {\n      result.globalFilters = globalFilterData;\n    }\n\n    return result;\n  }, [\n    pageSize,\n    pageIndex,\n    columnIds,\n    sortBy,\n    filters,\n    rowIdKey,\n    globalFilterData,\n  ]);\n}\n","import { useStoredState } from \"./../Storage/Storage\";\nimport moment from \"moment\";\nimport {\n  Datepicker,\n  DatepickerListItem,\n  Months,\n} from \"./../../types/Datepicker\";\nimport { useCallback, useMemo } from \"react\";\n\nexport const getMonths = (year: number): Months => ({\n  q1: [\n    {\n      key: \"month\",\n      label: \"January\",\n      value: `Jan, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"February\",\n      value: `Feb, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"March\",\n      value: `Mar, ${year}`,\n    },\n  ],\n  q2: [\n    {\n      key: \"month\",\n      label: \"April\",\n      value: `Apr, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"May\",\n      value: `May, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"June\",\n      value: `Jun, ${year}`,\n    },\n  ],\n  q3: [\n    {\n      key: \"month\",\n      label: \"July\",\n      value: `Jul, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"August\",\n      value: `Aug, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"September\",\n      value: `Sep, ${year}`,\n    },\n  ],\n  q4: [\n    {\n      key: \"month\",\n      label: \"October\",\n      value: `Oct, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"November\",\n      value: `Nov, ${year}`,\n    },\n    {\n      key: \"month\",\n      label: \"December\",\n      value: `Dec, ${year}`,\n    },\n  ],\n});\n\nexport const getQuarters = (year: number, months: Months) => {\n  const { q1, q2, q3, q4 } = months;\n  return [\n    {\n      key: \"quarter\",\n      label: \"Q1\",\n      value: `Q1, ${year}`,\n      items: q1,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q2\",\n      value: `Q2, ${year}`,\n      items: q2,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q3\",\n      value: `Q3, ${year}`,\n      items: q3,\n    },\n    {\n      key: \"quarter\",\n      label: \"Q4\",\n      value: `Q4, ${year}`,\n      items: q4,\n    },\n  ];\n};\n\nexport const useDatepickerData = () => {\n  let year = 2021;\n  const years = useMemo((): DatepickerListItem[] => {\n    const items = [];\n\n    while (year > 2015) {\n      const stringifiedYear = year.toString();\n      const months = getMonths(year);\n      const quarters = getQuarters(year, months);\n      items.push({\n        key: \"year\",\n        label: stringifiedYear,\n        value: stringifiedYear,\n        items: quarters,\n      });\n      year--;\n    }\n\n    return items;\n  }, [year]);\n\n  return years;\n};\n\nexport default function useDatepicker() {\n  const [date, setDate] = useStoredState<string | null>(\"datepicker\", null);\n  const [dateFilter, setDateFilter] = useStoredState<Datepicker | null>(\n    \"datepickerISO\",\n    null\n  );\n  const [dateFrom, setDateFrom] = useStoredState<string | null>(\n    \"datepickerDateFrom\",\n    null\n  );\n  const [dateTo, setDateTo] = useStoredState<string | null>(\n    \"datepickerDateTo\",\n    null\n  );\n\n  const parseQuarter = useCallback((quarterString: string): Datepicker => {\n    const quarterNum: number = Number(quarterString.charAt(1));\n    const year: string = quarterString.substr(3);\n    const date = moment(year).quarter(quarterNum);\n    return {\n      dateFrom: date.startOf(\"quarter\").toISOString(),\n      dateTo: date.endOf(\"quarter\").toISOString(),\n    };\n  }, []);\n\n  const parseYear = useCallback((yearString: string): Datepicker => {\n    const date = moment(yearString);\n    return {\n      dateFrom: date.startOf(\"year\").toISOString(),\n      dateTo: date.endOf(\"year\").toISOString(),\n    };\n  }, []);\n\n  const parseMonth = useCallback((monthString: string): Datepicker => {\n    const date = moment(monthString);\n    return {\n      dateFrom: date.startOf(\"month\").toISOString(),\n      dateTo: date.endOf(\"month\").toISOString(),\n    };\n  }, []);\n\n  const parseDate = useCallback(\n    (dateString: string | null) =>\n      !!dateString && moment(dateString).format(\"YYYY MMM\"),\n    []\n  );\n\n  const setDatepickerValues = useCallback(\n    (\n      value: string,\n      key: string,\n      callback: (data: Datepicker | null) => void\n    ) => {\n      if (key === \"dateFrom\") {\n        const dateFromLabel = parseDate(value);\n        const dateToLabel = parseDate(dateTo) ?? \"\";\n        const label = `${dateFromLabel} - ${dateToLabel}`;\n        callback({\n          dateFrom: dateFrom ?? \"\",\n          dateTo: dateTo ?? \"\",\n        });\n        setDate(label);\n      } else if (key === \"dateTo\") {\n        callback({\n          dateFrom: dateFrom ?? \"\",\n          dateTo: dateTo ?? \"\",\n        });\n        const dateFromLabel = parseDate(dateFrom) ?? \"\";\n        const dateToLabel = parseDate(value);\n        const label = `${dateFromLabel} - ${dateToLabel}`;\n        setDate(label);\n      } else {\n        setDate(value);\n      }\n\n      let filter: Datepicker | null = null;\n      switch (key) {\n        case \"month\":\n          filter = parseMonth(value);\n          break;\n        case \"quarter\":\n          filter = parseQuarter(value);\n          break;\n        case \"year\":\n          filter = parseYear(value);\n          break;\n        case \"dateFrom\":\n          setDateFrom(moment(value).toISOString());\n          break;\n        case \"dateTo\":\n          setDateTo(moment(value).toISOString());\n      }\n      if (!!filter) {\n        callback(filter);\n        setDateFilter(filter);\n      }\n    },\n    [\n      dateFrom,\n      dateTo,\n      parseDate,\n      parseMonth,\n      parseQuarter,\n      parseYear,\n      setDate,\n      setDateFilter,\n      setDateFrom,\n      setDateTo,\n    ]\n  );\n\n  const handleFilterClick = useCallback(() => {\n    if (!!dateFrom && !!dateTo)\n      setDateFilter({\n        dateFrom,\n        dateTo,\n      });\n  }, [dateFrom, dateTo, setDateFilter]);\n\n  const clearSelected = useCallback(\n    (callback: (data: Datepicker | null) => void) => {\n      setDate(null);\n      setDateFilter(null);\n      callback(null);\n    },\n    [setDate, setDateFilter]\n  );\n\n  return {\n    date,\n    setDatepickerValues,\n    dateFilter,\n    clearSelected,\n    handleFilterClick,\n    dateFrom,\n    dateTo,\n  };\n}\n","import makeStyles from \"@mui/styles/makeStyles\";\n\nexport default makeStyles({\n  endItem: {\n    paddingTop: 14,\n    paddingBottom: 12,\n    paddingLeft: 0,\n    paddingRight: 0,\n    minWidth: 130,\n  },\n  paper: {\n    maxWidth: 340,\n    maxHeight: 580,\n    overflowY: \"auto\",\n    position: \"relative\",\n    paddingTop: 50,\n    \"-ms-overflow-style\": \"none\", // IE and Edge\n    scrollbarWidth: \"none\", // Firefox\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  toggle: {\n    height: 44,\n    maxWidth: 195,\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    paddingLeft: 14,\n    paddingRight: 38,\n    position: \"relative\",\n    color: \"#69717D\",\n  },\n  selected: {\n    color: \"black\",\n  },\n  arrow: {\n    position: \"absolute\",\n    right: 14,\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  noPadding: {\n    padding: 0,\n    alignItems: \"center\",\n  },\n  typography: {\n    padding: \"0 35px\",\n    width: \"100%\",\n  },\n  fullWidth: {\n    width: \"100%\",\n    position: \"relative\",\n    paddingLeft: 40,\n  },\n  listItem: {\n    background: \"white\",\n    flexDirection: \"row-reverse\",\n    \"&:hover\": {\n      background: \"white\",\n      \"& > .MuiTypography-root\": {\n        fontWeight: \"bold\",\n      },\n    },\n    border: \"1px solid rgba(0, 0, 0, 0.1)\",\n    borderTop: 0,\n    borderLeft: 0,\n    \"&:last-child\": {\n      borderBottom: 0,\n    },\n  },\n  iconContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    left: 20,\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    \"& .MuiSvgIcon-root\": {\n      width: 12,\n      height: 9,\n    },\n  },\n  active: {\n    fontWeight: \"bold\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 50,\n    paddingLeft: 40,\n    paddingRight: 25,\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.1)\",\n    position: \"fixed\",\n    top: 0,\n    width: \"100%\",\n    zIndex: 1,\n    background: \"white\",\n  },\n  headerAction: {\n    color: \"#69717D\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"black\",\n      fontWeight: \"bold\",\n    },\n  },\n});\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function Check(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      width=\"12\"\n      height=\"9\"\n      viewBox=\"0 0 12 9\"\n      fill=\"none\"\n      {...props}\n      style={{ fill: \"none\", width: 12, height: 9, overflow: \"visible\" }}\n    >\n      <path d=\"M1 4L4.5 7.5L11 1\" stroke=\"#4DA621\" strokeWidth=\"2\" />\n    </SvgIcon>\n  );\n}\n","import React from \"react\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport clsx from \"clsx\";\nimport { DatepickerListItem } from \"../../types/Datepicker\";\nimport Check from \"../../icons/Check\";\nimport { List, ListItem, Typography } from \"@mui/material\";\n\ninterface IProps {\n  data: DatepickerListItem[];\n  onClick: (value: string, key: string) => void;\n  date: string | null;\n}\n\nexport default function MpDatepickerItem({ data, onClick, date }: IProps) {\n  const classes = useStyles();\n\n  return (\n    <List disablePadding>\n      {data.map((item) => {\n        const isActive = date === item.value;\n        return (\n          <ListItem\n            classes={{\n              root: clsx({\n                [classes.listItem]: true,\n                [classes.noPadding]: !!item?.items,\n                [classes.endItem]: !item?.items,\n              }),\n            }}\n            onClick={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n              e.stopPropagation();\n              onClick(item.value, item.key);\n            }}\n            button\n            key={item.value}\n            disableRipple\n          >\n            <Typography\n              className={clsx({\n                [classes.typography]: item?.items,\n                [classes.fullWidth]: true,\n                [classes.active]: isActive,\n              })}\n              variant=\"body2\"\n            >\n              {isActive && <Check className={classes.iconContainer} />}\n              {item.label}\n            </Typography>\n            {item?.items && (\n              <MpDatepickerItem\n                data={item.items}\n                onClick={onClick}\n                date={date}\n              />\n            )}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Check from \"../../icons/Check\";\nimport { MpTableTranslations } from \"../../types/Table\";\nimport { FromToFilterProps } from \"../../types/Datepicker\";\n\ninterface Props {\n  onSelectAll: () => void;\n  date: string | null;\n  translations?: MpTableTranslations;\n  FromToFilter?: React.ComponentType<FromToFilterProps>;\n  filterProps: FromToFilterProps;\n}\n\nexport default function MpDatepickerHeader({\n  date,\n  onSelectAll,\n  translations,\n  FromToFilter,\n  filterProps,\n}: Props) {\n  const classes = useStyles();\n\n  const [isFromTo, setIsFromTo] = useState<boolean>(false);\n\n  const switchView = useCallback(() => setIsFromTo(true), []);\n\n  if (isFromTo && !!FromToFilter) return <FromToFilter {...filterProps} />;\n\n  return (\n    <Box className={classes.header}>\n      {!date && <Check className={classes.iconContainer} />}\n      <Typography\n        onClick={onSelectAll}\n        classes={{ root: classes.headerAction }}\n        variant=\"body2\"\n      >\n        {translations?.allTime ?? \"All time\"}\n      </Typography>\n      {!!FromToFilter && (\n        <Typography\n          onClick={(e) => {\n            e.stopPropagation();\n            switchView();\n          }}\n          classes={{ root: classes.headerAction }}\n          variant=\"body2\"\n        >{`${translations?.from ?? \"From\"} - ${\n          translations?.to ?? \"To\"\n        }`}</Typography>\n      )}\n    </Box>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function DatepickerArrowDown(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      width=\"10\"\n      height=\"5\"\n      viewBox=\"0 0 10 5\"\n      {...props}\n      style={{ fill: \"none\", width: 10, height: 5, overflow: \"visible\" }}\n    >\n      <path\n        d=\"M1.5 1.5L6.5 6.5L11.5 1.5\"\n        stroke=\"#69717D\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </SvgIcon>\n  );\n}\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\nimport React from \"react\";\n\nexport default function DatepickerArrowUp(props: SvgIconProps) {\n  return (\n    <SvgIcon\n      fontSize=\"small\"\n      fill=\"none\"\n      width=\"10\"\n      height=\"5\"\n      viewBox=\"0 0 10 5\"\n      {...props}\n      style={{ fill: \"none\", width: 10, height: 5, overflow: \"visible\" }}\n    >\n      <path\n        d=\"M11.5 6.5L6.5 1.5L1.5 6.5\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </SvgIcon>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport DatepickerArrowDown from \"../../icons/DatepickerArrowDown\";\nimport DatepickerArrowUp from \"../../icons/DatepickerArrowUp\";\n\ninterface Props {\n  anchorEl: null | HTMLElement;\n}\n\nexport default function MpDatepickerArrow({ anchorEl }: Props) {\n  const classes = useStyles();\n\n  const Arrow = useMemo(\n    () => (anchorEl === null ? DatepickerArrowDown : DatepickerArrowUp),\n    [anchorEl]\n  );\n\n  return <Arrow className={classes.arrow} />;\n}\n","import {\n  Box,\n  ClickAwayListener,\n  Fade,\n  Paper,\n  Popper,\n  PopperProps,\n} from \"@mui/material\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Datepicker,\n  DatepickerListItem,\n  FromToFilterProps,\n} from \"../../types/Datepicker\";\nimport useDatepicker, {\n  useDatepickerData,\n} from \"../../utils/Datepicker/Datepicker\";\nimport useStyles from \"./MpDatepicker.styles\";\nimport MpDatepickerItem from \"./MpDatepickerItem\";\nimport MpDatepickerHeader from \"./MpDatepickerHeader\";\nimport { MpTableTranslations } from \"../../types/Table\";\nimport MpDatepickerArrow from \"./MpDatepickerArrow\";\n\ninterface Props {\n  items?: DatepickerListItem[];\n  placement?: PopperProps[\"placement\"];\n  translations?: MpTableTranslations;\n  FromToFilter?: React.ComponentType<FromToFilterProps>;\n  onGetData: (data: Datepicker) => void;\n}\n\nexport default function MpDatepicker({\n  items,\n  placement,\n  translations,\n  FromToFilter,\n  onGetData,\n}: Props) {\n  const classes = useStyles();\n  const {\n    setDatepickerValues,\n    clearSelected,\n    date,\n    handleFilterClick,\n    dateFrom,\n    dateTo,\n  } = useDatepicker();\n  const defaultData = useDatepickerData();\n  const data = useMemo(() => items ?? defaultData, [defaultData, items]);\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const open = useMemo(() => !!anchorEl, [anchorEl]);\n  const id = useMemo(() => (open ? \"datepicker-popper\" : undefined), [open]);\n  const filterProps = useMemo(\n    (): FromToFilterProps => ({\n      onFilter: () => {\n        handleFilterClick();\n        setAnchorEl(null);\n      },\n      onDateChange: setDatepickerValues,\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n      onGetData: onGetData,\n    }),\n    [dateFrom, dateTo, handleFilterClick, onGetData, setDatepickerValues]\n  );\n\n  const togglePopper = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      setAnchorEl(anchorEl ? null : event.currentTarget);\n    },\n    [anchorEl]\n  );\n\n  const handleDatepickerClick = useCallback(\n    (value: string, key: string) => {\n      setAnchorEl(null);\n      setDatepickerValues(value, key, onGetData);\n    },\n    [onGetData, setDatepickerValues]\n  );\n\n  const handleSelectAll = useCallback(() => {\n    clearSelected(onGetData);\n    setAnchorEl(null);\n  }, [clearSelected, onGetData]);\n\n  return (\n    <ClickAwayListener onClickAway={() => setAnchorEl(null)}>\n      <Box>\n        <Paper\n          className={clsx({\n            [classes.toggle]: true,\n            [classes.selected]: !!date,\n          })}\n          aria-describedby={id}\n          onClick={togglePopper}\n        >\n          {date ?? \"All time\"}\n          <MpDatepickerArrow anchorEl={anchorEl} />\n        </Paper>\n        <Popper\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          style={{ zIndex: 1299 }}\n          placement={placement ?? \"bottom-end\"}\n          transition\n        >\n          {({ TransitionProps }) => (\n            <Fade {...TransitionProps} timeout={350}>\n              <Paper elevation={4} className={classes.paper}>\n                <MpDatepickerHeader\n                  translations={translations}\n                  date={date}\n                  onSelectAll={handleSelectAll}\n                  FromToFilter={FromToFilter}\n                  filterProps={filterProps}\n                />\n                <MpDatepickerItem\n                  date={date}\n                  data={data}\n                  onClick={handleDatepickerClick}\n                />\n              </Paper>\n            </Fade>\n          )}\n        </Popper>\n      </Box>\n    </ClickAwayListener>\n  );\n}\n"],"names":["useDebounce","ms","handle","useRef","useCallback","cb","args","current","clearTimeout","setTimeout","ref","useEffect","MetaContext","createContext","useFilterOptions","filter","useMemo","type","executeMethod","method","search","resultSetter","loadingSetter","latestRequest","unmounted","filterItems","request","Date","now","then","result","Array","isArray","useFilterItems","column","asyncGetMethods","localFiltering","useContext","preFilteredRows","id","useUnmounted","items","setItems","useState","loading","setLoading","asyncGet","searchText","rows","key","_filter$items$length","_filter$items","length","localItems","map","row","values","val","i","arr","indexOf","item","toLowerCase","text","value","label","_filter$items2","_filter$items$length2","debounce","getItems","useGlobalFilters","initialValue","globalFilters","setGlobalFilters","handleSetGlobalFilter","prevState","_extends","emptyInstance","setEmptyInstance","undefined","clearFiltersEvent","clearFilters","filters","useStyles$i","makeStyles","emptyAnchor","cursor","userSelect","empty","setValue","doFiltering","_filter$label","_translations$clear","_items$length","_items$length2","mpColumn","translations","classes","useStyles","handleChange","event","target","checked","includes","name","handleClear","preventDefault","React","createElement","Box","display","flexDirection","paddingLeft","justifyContent","alignItems","Typography","variant","paddingX","paddingY","Link","color","onClick","className","clear","Divider","maxHeight","overflow","FormControl","component","FormGroup","_value$includes","FormControlLabel","onChange","control","Checkbox","padding","minHeight","CircularProgress","TabUnselected","fontSize","MpFilterType","naked","width","_translations$search","InputBase","placeholder","autoFocus","endAdornment","unitLabel","useStyles$g","theme","searchIcon","marginRight","spacing","SearchSelect","setSearchText","startAdornment","Search","handleSearchText","NumberInput","forwardRef","inputRef","props","_objectWithoutPropertiesLoose","_ref","_excluded","replace","m","s","_s$match$","_s$match","match","Object","assign","inputMode","NumberRange","handleChangeMin","evVal","min","max","handleChangeMax","_value$min","from","_translations$from","inputComponent","_translations$to","to","toPercent","number","parseInt","Math","round","locale","options","_value$toLocaleString","toLocaleString","modifier","style","currency","formatDate","moment","d","format","formatDatetime","MpColumnFormat","MpColumnRender","mapFormatter","_options$valueMap$val","_options$valueMap","valueMap","rawValueKey","_item$rawValueKey","toCurrency","percent","date","dateTime","matchArray","columnIds","filterValue","find","getRawValue","original","filterMap","select","Select","searchSelect","Text","numberRange","MpTableFilter","overridables","filterType","_column$mpColumn","_column$mpColumn2","_column$mpColumn3","_column$mpColumn3$fil","FilterComponent","_overridables$filters2","toVal","mix","k","y","str","clsx","tmp","x","arguments","getColumnAction","action","Error","handleRowAction","params","rowId","slug","methods","methodsParams","selectedRowIds","selectedRows","selectedIds","useStyles$e","small","Button","rowMethods","size","icon","handleClick","stopPropagation","IconButton","Icon","MUIButton","sizeSmall","Toggle","defaultValue","toggle","setToggle","newToggle","mapToggles","textColor","inner","ToggleButton","backgroundColor","ToggleButtonGroup","exclusive","Switch","iconLeft","iconRight","labelLeft","labelRight","innerLeft","innerRight","setChecked","handlePropagation","e","MUISwitch","useRendererOptions","cell","render","renderOptions","styleMap","_renderOptions$styleM2","_cell$value","_renderOptions$styleM","_renderOptions$valueM","_renderOptions$valueM2","_cell$value2","columnId","index","inputProps","columnIndex","chipStyle","createPalette","primary","main","getContrastText","textAlign","Chip","useStyles$d","root","input","height","rendererMap","statusPill","StatusPill","button","switch","Input","onInputChange","inputValue","setInputValue","handleInputChange","getFooterValue","_totalsData$key","totalsData","noOpFilter","convertMpToColumn","disableSorting","_column$label","_column$filter","_column$filter2","col","Header","accessor","disableSortBy","sort","remote","_overridables$filterF","_overridables$filterF2","filterFunctions","filterTypeMap","totals","Footer","_overridables$rendere","_overridables$rendere2","Cell","renderers","data","columns","dataState","setDataState","formattedData","formattableColumns","reduce","acc","_format$type","formatMap","stateCopy","useStyles$c","_theme$palette","_theme$palette$text","wrapper","whiteSpace","position","disabledSort","palette","secondary","fixedWidth","minWidth","fixedColumnWidth","maxWidth","hoveredCellWithFilters","background","mode","darken","default","lighten","light","MpTableHeadCellOptions","anchorEl","canSort","onClose","isSortedDesc","doSorting","immediateValue","setFilter","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","headFilter","MpTableHeadCell","clearColumnFilters","overrideClasses","_column$filterValue","_overrideClasses$hove","getSortByToggleProps","_column$getSortByTogg","sortProps","cellRef","isHovered","setIsHovered","hasFilter","fixedHeadWidth","isExtended","optionsAnchor","setOptionsAnchor","closeOptions","handleMouseEnter","handleMouseLeave","filterSet","highlightCell","Fragment","TableCell","hasWidth","onMouseEnter","onMouseLeave","headIndicator","isHoveredCell","hasClear","handleClearFilters","useStyles$b","parent","borderRadius","overflowX","borderTopLeftRadius","borderTopRightRadius","table","stickyTotalsWrapper","zIndex","renderedCell","paddingTop","paddingBottom","MpTableEmptyBody","cellCount","emptyChildren","loadingComponent","renderLoader","HourglassEmpty","renderChildren","TableRow","colSpan","useStyles$a","headSelectCell","paddingRight","borderRight","cellCheckbox","margin","selection","handleCheck","headSelectCellCheckbox","MpTableHeadFilter","handleSubmit","onSubmit","SortByAlpha","flexGrow","useStyles$9","spacer","MpTablePaginator","pageIndex","previousPage","itemCount","nextPage","pageCount","pageSize","selectedCount","_translations$of","_translations$previou","_translations$nextPag","hasPrevious","hasNext","infoText","_translations$total","_translations$selecte","total","selected","join","of","Tooltip","title","disabled","ChevronLeft","ChevronRight","Filter","SvgIcon","viewBox","fill","FilterArrowDown","FilterArrowUp","FilterOutline","iconWrapper","clearIcon","contrastText","left","handleClearClick","ArrowDropDown","ArrowDropUp","Clear","ExpandMore","useStyles$7","useStyles$6","transition","transitions","create","duration","complex","iconSpacer","menuPaper","marginTop","menuItem","overlay","itemDivider","borderBottom","marginLeft","noBorder","MpTableBulkActions","actions","hasSelectedRows","setOpen","anchorRef","handleToggle","prevOpen","handleClose","_anchorRef$current","contains","handleListKeyDown","handleBulkAction","actionsMap","MenuItem","Close","Menu","Popper","role","disablePortal","TransitionProps","placement","Grow","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","disablePadding","MpTableGlobalFilter","onGlobalFilter","handleGlobalFilter","TextField","InputProps","BreadcrumbFilterDown","xmlns","BreadcrumbSeparator","stroke","strokeWidth","strokeLinecap","getNestedElementsMapReduce","entries","accumulator","_selection$key","filteredValue","breadcrumb","_selection$key2","BreadcrumbList","selectedKey","selectedId","_translations$breadcr5","_translations$breadcr6","breadcrumbMap","_translations$breadcr3","_translations$breadcr4","ListItem","_translations$breadcr","_translations$breadcr2","breadcrumbs","Grid","List","useStyles$5","dropdownIconRoot","seperator","pointer","MpTableBreadcrumb","_globalFilters$breadc","setSelection","setBreadcrumbs","containerRef","setAnchorEl","popoverId","updateNestedElements","handleBreadcrumbHover","itemKeys","keys","itemEntries","selectionKeys","selectionDepth","_breadcrumbs$selected","_selectedPath","prevSelectedObject","_breadcrumbs$key","selectedPath","selectionObject","_breadcrumbs$selected2","handleBreadcrumbClick","isLastClick","selectionEntries","slicedArray","slice","slicedObject","fromEntries","_Object$keys","_globalFilters$breadc2","breadcrumbGridMap","gridItems","push","lastItem","breadcrumbItems","all","_translations$all","Breadcrumbs","separator","breadcrumbSelectionMap","PaperProps","container","MpTableGlobalActions","breadcrumbFilterData","paginator","MpTableHeadIndicator","globalActions","footer","boxShadow","raised","paper","shadows","win","window","children","bodyRef","useLayoutEffect","timeout","queuedUpdate","transformValue","_bodyRef$current$getB","_bodyRef$current","_ref$current$offsetHe","_ref$current","getBoundingClientRect","bottom","innerHeight","offsetHeight","transform","calculatedTransform","classList","add","remove","update","addEventListener","triggerUpdate","removeEventListener","TableFooter","useStyles$3","totalsSelectCell","MpTableTotals","footerGroups","hasSelection","stickyTotals","handleFixedWidth","cellWidth","groups","group","getFooterGroupProps","headers","getFooterProps","MpTableStickyTotalsFooter","useStyles$2","selectCell","MpTableSelectCell","toggleAllRowsSelected","getToggleRowSelectedProps","toggleRowSelected","selectCellCheckbox","useStyles$1","highlightedPrimary","highlightedSecondary","highlightedInactive","MpTableRow","highlights","onRowClick","_overrideClasses$row","_overrideClasses$high","_overrideClasses$high2","_overrideClasses$high3","_overrideClasses$rowS","inactive","useRowHighlights","handleRowClick","_cell$column$mpColumn","getRowProps","rowSelected","isSelected","cells","getCellProps","getFromStorage","storage","localStorage","raw","getItem","JSON","parse","console","warn","useStorage","setItem","stringify","useStoredState","cache","setCache","tuple","mpColumns","emptyData","onGetData","dataCount","storageIdentifier","cacheFilters","cacheSorting","cacheGlobalFilter","filterVariant","localPagination","localSorting","partialOverridables","rowIdKey","bulkActions","bulkMethods","disablePagination","enableGlobalActions","onEdit","onRowsSelected","resetSelectedRows","remoteFiltersColumns","useRemoteFilters","ceil","filtersCache","setFiltersCache","sortingCache","setSortingCache","globalFiltersCache","setGlobalFiltersCache","sortBy","defaultOverridables","useOverridables","useDataFormatters","getRowId","tableOptions","initialState","manualPagination","manualSortBy","manualFilters","autoResetFilters","autoResetPage","autoResetSelectedRows","tableInstance","useTable","useFilters","useSortBy","usePagination","useRowSelect","visibleColumns","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","gotoPage","getToggleAllRowsSelectedProps","selectedFlatRows","setAllFilters","state","hybridFilterCache","_state$filters","_state$filters$filter","a","b","hybridFilters","globalFilterData","limit","rule","desc","useDataArguments","dataArguments","forEach","bodyStyle","opacity","meta","Provider","tableWrapper","Table","TableHead","headerGroup","getHeaderGroupProps","MpTableHeadSelectCell","getHeaderProps","TableBody","getMonths","year","q1","q2","q3","q4","getQuarters","months","endItem","overflowY","scrollbarWidth","arrow","right","top","noPadding","typography","fullWidth","listItem","fontWeight","border","borderTop","borderLeft","iconContainer","active","header","headerAction","Check","MpDatepickerItem","isActive","disableRipple","MpDatepickerHeader","onSelectAll","FromToFilter","filterProps","_translations$allTime","isFromTo","setIsFromTo","switchView","allTime","DatepickerArrowDown","DatepickerArrowUp","MpDatepickerArrow","Arrow","MpDatepicker","setDatepickerValues","clearSelected","handleFilterClick","dateFrom","dateTo","setDate","dateFilter","setDateFilter","setDateFrom","setDateTo","parseQuarter","quarterString","quarterNum","Number","charAt","substr","quarter","startOf","toISOString","endOf","parseYear","yearString","parseMonth","monthString","parseDate","dateString","callback","_parseDate","_parseDate2","dateFromLabel","dateToLabel","useDatepicker","defaultData","stringifiedYear","toString","quarters","useDatepickerData","onFilter","onDateChange","togglePopper","currentTarget","handleDatepickerClick","handleSelectAll","Fade","elevation"],"mappings":"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"}